{"/home/travis/build/npmtest/node-npmtest-json2xls/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_json2xls */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/lib.npmtest_json2xls.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/lib.npmtest_json2xls.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":53}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":59}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_json2xls */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_json2xls = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_json2xls = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":52}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":66},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-json2xls && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_json2xls */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_json2xls","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_json2xls.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_json2xls.rollup.js'] =","            local.assetsDict['/assets.npmtest_json2xls.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_json2xls.__dirname + '/lib.npmtest_json2xls.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/lib/json2xls.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/lib/json2xls.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1},"b":{"1":[0,0],"2":[0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":16},"end":{"line":3,"column":38}}},"2":{"name":"getType","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":27}}},"3":{"name":"getByString","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":35}}},"4":{"name":"(anonymous_4)","line":44,"loc":{"start":{"line":44,"column":24},"end":{"line":44,"column":46}}},"5":{"name":"(anonymous_5)","line":51,"loc":{"start":{"line":51,"column":40},"end":{"line":51,"column":54}}},"6":{"name":"(anonymous_6)","line":57,"loc":{"start":{"line":57,"column":26},"end":{"line":57,"column":42}}},"7":{"name":"(anonymous_7)","line":61,"loc":{"start":{"line":61,"column":29},"end":{"line":61,"column":58}}},"8":{"name":"(anonymous_8)","line":68,"loc":{"start":{"line":68,"column":27},"end":{"line":68,"column":41}}},"9":{"name":"(anonymous_9)","line":69,"loc":{"start":{"line":69,"column":26},"end":{"line":69,"column":40}}},"10":{"name":"(anonymous_10)","line":89,"loc":{"start":{"line":89,"column":23},"end":{"line":89,"column":46}}},"11":{"name":"(anonymous_11)","line":90,"loc":{"start":{"line":90,"column":14},"end":{"line":90,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":40}},"2":{"start":{"line":3,"column":0},"end":{"line":7,"column":2}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":50}},"4":{"start":{"line":5,"column":4},"end":{"line":5,"column":41}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":18}},"6":{"start":{"line":10,"column":0},"end":{"line":24,"column":1}},"7":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":20}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":23}},"10":{"start":{"line":15,"column":4},"end":{"line":23,"column":5}},"11":{"start":{"line":18,"column":12},"end":{"line":18,"column":21}},"12":{"start":{"line":20,"column":12},"end":{"line":20,"column":26}},"13":{"start":{"line":22,"column":12},"end":{"line":22,"column":28}},"14":{"start":{"line":27,"column":0},"end":{"line":40,"column":1}},"15":{"start":{"line":28,"column":4},"end":{"line":28,"column":45}},"16":{"start":{"line":29,"column":4},"end":{"line":29,"column":35}},"17":{"start":{"line":30,"column":4},"end":{"line":30,"column":28}},"18":{"start":{"line":31,"column":4},"end":{"line":38,"column":5}},"19":{"start":{"line":32,"column":8},"end":{"line":32,"column":26}},"20":{"start":{"line":33,"column":8},"end":{"line":37,"column":9}},"21":{"start":{"line":34,"column":12},"end":{"line":34,"column":59}},"22":{"start":{"line":36,"column":12},"end":{"line":36,"column":24}},"23":{"start":{"line":39,"column":4},"end":{"line":39,"column":18}},"24":{"start":{"line":44,"column":0},"end":{"line":87,"column":2}},"25":{"start":{"line":45,"column":4},"end":{"line":45,"column":17}},"26":{"start":{"line":46,"column":4},"end":{"line":46,"column":26}},"27":{"start":{"line":47,"column":4},"end":{"line":47,"column":34}},"28":{"start":{"line":48,"column":4},"end":{"line":48,"column":60}},"29":{"start":{"line":49,"column":4},"end":{"line":49,"column":19}},"30":{"start":{"line":50,"column":4},"end":{"line":55,"column":5}},"31":{"start":{"line":51,"column":8},"end":{"line":53,"column":11}},"32":{"start":{"line":52,"column":12},"end":{"line":52,"column":31}},"33":{"start":{"line":54,"column":8},"end":{"line":54,"column":37}},"34":{"start":{"line":57,"column":4},"end":{"line":66,"column":7}},"35":{"start":{"line":58,"column":8},"end":{"line":65,"column":10}},"36":{"start":{"line":62,"column":16},"end":{"line":62,"column":59}},"37":{"start":{"line":63,"column":16},"end":{"line":63,"column":32}},"38":{"start":{"line":68,"column":4},"end":{"line":81,"column":7}},"39":{"start":{"line":69,"column":8},"end":{"line":80,"column":11}},"40":{"start":{"line":70,"column":12},"end":{"line":70,"column":45}},"41":{"start":{"line":72,"column":12},"end":{"line":72,"column":83}},"42":{"start":{"line":72,"column":53},"end":{"line":72,"column":83}},"43":{"start":{"line":76,"column":12},"end":{"line":78,"column":13}},"44":{"start":{"line":77,"column":16},"end":{"line":77,"column":109}},"45":{"start":{"line":79,"column":12},"end":{"line":79,"column":25}},"46":{"start":{"line":83,"column":4},"end":{"line":85,"column":5}},"47":{"start":{"line":84,"column":8},"end":{"line":84,"column":39}},"48":{"start":{"line":86,"column":4},"end":{"line":86,"column":15}},"49":{"start":{"line":89,"column":0},"end":{"line":97,"column":2}},"50":{"start":{"line":90,"column":4},"end":{"line":95,"column":6}},"51":{"start":{"line":91,"column":8},"end":{"line":91,"column":41}},"52":{"start":{"line":92,"column":8},"end":{"line":92,"column":72}},"53":{"start":{"line":93,"column":8},"end":{"line":93,"column":75}},"54":{"start":{"line":94,"column":8},"end":{"line":94,"column":31}},"55":{"start":{"line":96,"column":4},"end":{"line":96,"column":11}},"56":{"start":{"line":99,"column":0},"end":{"line":99,"column":27}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":11,"column":4}},{"start":{"line":11,"column":4},"end":{"line":11,"column":4}}]},"2":{"line":15,"type":"switch","locations":[{"start":{"line":16,"column":8},"end":{"line":16,"column":22}},{"start":{"line":17,"column":8},"end":{"line":18,"column":21}},{"start":{"line":19,"column":8},"end":{"line":20,"column":26}},{"start":{"line":21,"column":8},"end":{"line":22,"column":28}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":33,"column":8}},{"start":{"line":33,"column":8},"end":{"line":33,"column":8}}]},"4":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":44},"end":{"line":34,"column":48}},{"start":{"line":34,"column":49},"end":{"line":34,"column":58}}]},"5":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":15},"end":{"line":46,"column":21}},{"start":{"line":46,"column":23},"end":{"line":46,"column":25}}]},"6":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":17},"end":{"line":48,"column":28}},{"start":{"line":48,"column":32},"end":{"line":48,"column":59}}]},"7":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":44},"end":{"line":48,"column":54}},{"start":{"line":48,"column":56},"end":{"line":48,"column":58}}]},"8":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"9":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":12},"end":{"line":72,"column":12}},{"start":{"line":72,"column":12},"end":{"line":72,"column":12}}]},"10":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":15},"end":{"line":72,"column":20}},{"start":{"line":72,"column":24},"end":{"line":72,"column":51}}]},"11":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":12},"end":{"line":76,"column":12}},{"start":{"line":76,"column":12},"end":{"line":76,"column":12}}]},"12":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":4}},{"start":{"line":83,"column":4},"end":{"line":83,"column":4}}]}},"code":["var nodeExcel = require('excel-export');","","var transform = function(json,config) {","    var conf = transform.prepareJson(json,config);","    var result = nodeExcel.execute(conf);","    return result;","};","","//get a xls type based on js type","function getType(obj,type) {","    if (type) {","        return type;","    }","    var t = typeof obj;","    switch (t) {","        case 'string':","        case 'number':","            return t;","        case 'boolean':","            return 'bool';","        default:","            return 'string';","    }","}","","//get a nested property from a JSON object given its key, i.e 'a.b.c'","function getByString(object, path) {","    path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties","    path = path.replace(/^\\./, '');           // strip a leading dot","    var a = path.split('.');","    while (a.length) {","        var n = a.shift();","        if (n in object) {","            object = (object[n]==undefined)?null:object[n];","        } else {","            return null;","        }","    }","    return object;","}","","","//prepare json to be in the correct format for excel-export","transform.prepareJson = function(json,config) {","    var res = {};","    var conf = config||{};","    var jsonArr = [].concat(json);","    var fields = conf.fields || Object.keys(jsonArr[0]||{});","    var types = [];","    if (!(fields instanceof Array)) {","        types = Object.keys(fields).map(function(key) {","            return fields[key];","        });","        fields = Object.keys(fields);","    }","    //cols","    res.cols = fields.map(function(key,i) {","        return {","            caption: key,","            type: getType(jsonArr[0][key],types[i]),","            beforeCellWrite: function(row, cellData, eOpt){","                eOpt.cellType = getType(cellData,types[i]);","                return cellData;","            }","        };","    });","    //rows","    res.rows = jsonArr.map(function(row) {","        return fields.map(function(key) {","            var value = getByString(row,key);","            //stringify objects","            if(value && value.constructor == Object) value = JSON.stringify(value);","            //replace illegal xml characters with a square","            //see http://www.w3.org/TR/xml/#charsets","            //#x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]","            if (typeof value === 'string') {","                value = value.replace(/[^\\u0009\\u000A\\u000D\\u0020-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]/g,'');","            }","            return value;","        });","    });","    //add style xml if given","    if (conf.style) {","        res.stylesXmlFile = conf.style;","    }","    return res;","};","","transform.middleware = function(req,res,next) {","    res.xls = function(fn,data,config) {","        var xls = transform(data,config);","        res.setHeader('Content-Type', 'application/vnd.openxmlformats');","        res.setHeader(\"Content-Disposition\", \"attachment; filename=\" + fn);","        res.end(xls, 'binary');","    };","    next();","};","","module.exports = transform;",""],"l":{"1":1,"3":1,"4":0,"5":0,"6":0,"10":1,"11":0,"12":0,"14":0,"15":0,"18":0,"20":0,"22":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"36":0,"39":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"54":0,"57":0,"58":0,"62":0,"63":0,"68":0,"69":0,"70":0,"72":0,"76":0,"77":0,"79":0,"83":0,"84":0,"86":0,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"96":0,"99":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/index.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":1,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":27},"end":{"line":4,"column":38}}},"2":{"name":"(anonymous_2)","line":9,"loc":{"start":{"line":9,"column":24},"end":{"line":9,"column":35}}},"3":{"name":"(anonymous_3)","line":22,"loc":{"start":{"line":22,"column":23},"end":{"line":22,"column":49}}},"4":{"name":"(anonymous_4)","line":23,"loc":{"start":{"line":23,"column":25},"end":{"line":23,"column":35}}},"5":{"name":"(anonymous_5)","line":29,"loc":{"start":{"line":29,"column":18},"end":{"line":29,"column":34}}},"6":{"name":"(anonymous_6)","line":121,"loc":{"start":{"line":121,"column":15},"end":{"line":121,"column":46}}},"7":{"name":"(anonymous_7)","line":133,"loc":{"start":{"line":133,"column":13},"end":{"line":133,"column":30}}},"8":{"name":"(anonymous_8)","line":137,"loc":{"start":{"line":137,"column":19},"end":{"line":137,"column":55}}},"9":{"name":"(anonymous_9)","line":145,"loc":{"start":{"line":145,"column":17},"end":{"line":145,"column":53}}},"10":{"name":"(anonymous_10)","line":153,"loc":{"start":{"line":153,"column":17},"end":{"line":153,"column":53}}},"11":{"name":"(anonymous_11)","line":163,"loc":{"start":{"line":163,"column":19},"end":{"line":163,"column":55}}},"12":{"name":"(anonymous_12)","line":178,"loc":{"start":{"line":178,"column":22},"end":{"line":178,"column":35}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":20}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":23}},"3":{"start":{"line":4,"column":0},"end":{"line":7,"column":2}},"4":{"start":{"line":5,"column":1},"end":{"line":6,"column":46}},"5":{"start":{"line":9,"column":0},"end":{"line":11,"column":2}},"6":{"start":{"line":10,"column":1},"end":{"line":10,"column":72}},"7":{"start":{"line":13,"column":0},"end":{"line":13,"column":8430}},"8":{"start":{"line":14,"column":0},"end":{"line":14,"column":697}},"9":{"start":{"line":15,"column":0},"end":{"line":15,"column":414}},"10":{"start":{"line":18,"column":0},"end":{"line":18,"column":177}},"11":{"start":{"line":19,"column":0},"end":{"line":19,"column":35}},"12":{"start":{"line":20,"column":0},"end":{"line":20,"column":40}},"13":{"start":{"line":22,"column":0},"end":{"line":27,"column":2}},"14":{"start":{"line":23,"column":1},"end":{"line":26,"column":4}},"15":{"start":{"line":24,"column":2},"end":{"line":24,"column":34}},"16":{"start":{"line":25,"column":2},"end":{"line":25,"column":14}},"17":{"start":{"line":29,"column":0},"end":{"line":119,"column":2}},"18":{"start":{"line":30,"column":1},"end":{"line":40,"column":6}},"19":{"start":{"line":42,"column":2},"end":{"line":49,"column":3}},"20":{"start":{"line":43,"column":4},"end":{"line":43,"column":36}},"21":{"start":{"line":44,"column":4},"end":{"line":44,"column":22}},"22":{"start":{"line":45,"column":4},"end":{"line":45,"column":43}},"23":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"24":{"start":{"line":47,"column":6},"end":{"line":47,"column":41}},"25":{"start":{"line":51,"column":1},"end":{"line":51,"column":28}},"26":{"start":{"line":52,"column":2},"end":{"line":52,"column":29}},"27":{"start":{"line":54,"column":1},"end":{"line":54,"column":51}},"28":{"start":{"line":55,"column":2},"end":{"line":55,"column":20}},"29":{"start":{"line":56,"column":1},"end":{"line":63,"column":2}},"30":{"start":{"line":58,"column":4},"end":{"line":58,"column":51}},"31":{"start":{"line":59,"column":2},"end":{"line":59,"column":78}},"32":{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},"33":{"start":{"line":61,"column":6},"end":{"line":61,"column":116}},"34":{"start":{"line":64,"column":1},"end":{"line":64,"column":19}},"35":{"start":{"line":65,"column":1},"end":{"line":65,"column":13}},"36":{"start":{"line":68,"column":2},"end":{"line":69,"column":29}},"37":{"start":{"line":71,"column":1},"end":{"line":104,"column":2}},"38":{"start":{"line":73,"column":2},"end":{"line":73,"column":29}},"39":{"start":{"line":74,"column":2},"end":{"line":74,"column":65}},"40":{"start":{"line":75,"column":2},"end":{"line":101,"column":3}},"41":{"start":{"line":77,"column":6},"end":{"line":77,"column":24}},"42":{"start":{"line":78,"column":6},"end":{"line":78,"column":22}},"43":{"start":{"line":79,"column":6},"end":{"line":79,"column":30}},"44":{"start":{"line":80,"column":6},"end":{"line":86,"column":7}},"45":{"start":{"line":81,"column":8},"end":{"line":81,"column":71}},"46":{"start":{"line":82,"column":8},"end":{"line":82,"column":59}},"47":{"start":{"line":83,"column":8},"end":{"line":83,"column":48}},"48":{"start":{"line":84,"column":8},"end":{"line":84,"column":30}},"49":{"start":{"line":85,"column":8},"end":{"line":85,"column":17}},"50":{"start":{"line":87,"column":3},"end":{"line":100,"column":4}},"51":{"start":{"line":90,"column":5},"end":{"line":90,"column":77}},"52":{"start":{"line":91,"column":5},"end":{"line":91,"column":11}},"53":{"start":{"line":93,"column":5},"end":{"line":93,"column":75}},"54":{"start":{"line":94,"column":5},"end":{"line":94,"column":11}},"55":{"start":{"line":96,"column":5},"end":{"line":96,"column":75}},"56":{"start":{"line":97,"column":5},"end":{"line":97,"column":11}},"57":{"start":{"line":99,"column":5},"end":{"line":99,"column":77}},"58":{"start":{"line":102,"column":2},"end":{"line":102,"column":20}},"59":{"start":{"line":103,"column":2},"end":{"line":103,"column":14}},"60":{"start":{"line":105,"column":2},"end":{"line":106,"column":47}},"61":{"start":{"line":106,"column":4},"end":{"line":106,"column":47}},"62":{"start":{"line":107,"column":1},"end":{"line":107,"column":91}},"63":{"start":{"line":110,"column":1},"end":{"line":114,"column":2}},"64":{"start":{"line":112,"column":2},"end":{"line":112,"column":83}},"65":{"start":{"line":113,"column":2},"end":{"line":113,"column":101}},"66":{"start":{"line":115,"column":1},"end":{"line":115,"column":72}},"67":{"start":{"line":116,"column":1},"end":{"line":116,"column":13}},"68":{"start":{"line":117,"column":1},"end":{"line":117,"column":21}},"69":{"start":{"line":118,"column":1},"end":{"line":118,"column":16}},"70":{"start":{"line":121,"column":0},"end":{"line":131,"column":2}},"71":{"start":{"line":122,"column":2},"end":{"line":122,"column":32}},"72":{"start":{"line":123,"column":2},"end":{"line":125,"column":3}},"73":{"start":{"line":124,"column":4},"end":{"line":124,"column":37}},"74":{"start":{"line":126,"column":2},"end":{"line":129,"column":19}},"75":{"start":{"line":127,"column":4},"end":{"line":127,"column":18}},"76":{"start":{"line":129,"column":4},"end":{"line":129,"column":19}},"77":{"start":{"line":130,"column":2},"end":{"line":130,"column":16}},"78":{"start":{"line":133,"column":0},"end":{"line":135,"column":2}},"79":{"start":{"line":134,"column":2},"end":{"line":134,"column":30}},"80":{"start":{"line":137,"column":0},"end":{"line":143,"column":2}},"81":{"start":{"line":138,"column":2},"end":{"line":138,"column":31}},"82":{"start":{"line":139,"column":1},"end":{"line":142,"column":86}},"83":{"start":{"line":140,"column":2},"end":{"line":140,"column":12}},"84":{"start":{"line":142,"column":2},"end":{"line":142,"column":86}},"85":{"start":{"line":145,"column":0},"end":{"line":151,"column":2}},"86":{"start":{"line":146,"column":2},"end":{"line":146,"column":31}},"87":{"start":{"line":147,"column":1},"end":{"line":150,"column":86}},"88":{"start":{"line":148,"column":2},"end":{"line":148,"column":12}},"89":{"start":{"line":150,"column":2},"end":{"line":150,"column":86}},"90":{"start":{"line":153,"column":0},"end":{"line":162,"column":2}},"91":{"start":{"line":154,"column":2},"end":{"line":154,"column":31}},"92":{"start":{"line":155,"column":1},"end":{"line":156,"column":12}},"93":{"start":{"line":156,"column":2},"end":{"line":156,"column":12}},"94":{"start":{"line":157,"column":1},"end":{"line":160,"column":13}},"95":{"start":{"line":158,"column":3},"end":{"line":158,"column":13}},"96":{"start":{"line":160,"column":3},"end":{"line":160,"column":13}},"97":{"start":{"line":161,"column":1},"end":{"line":161,"column":86}},"98":{"start":{"line":163,"column":0},"end":{"line":176,"column":2}},"99":{"start":{"line":164,"column":2},"end":{"line":164,"column":31}},"100":{"start":{"line":165,"column":1},"end":{"line":166,"column":12}},"101":{"start":{"line":166,"column":2},"end":{"line":166,"column":12}},"102":{"start":{"line":167,"column":2},"end":{"line":169,"column":3}},"103":{"start":{"line":168,"column":4},"end":{"line":168,"column":109}},"104":{"start":{"line":170,"column":2},"end":{"line":170,"column":38}},"105":{"start":{"line":171,"column":1},"end":{"line":174,"column":2}},"106":{"start":{"line":172,"column":2},"end":{"line":172,"column":34}},"107":{"start":{"line":173,"column":4},"end":{"line":173,"column":87}},"108":{"start":{"line":175,"column":1},"end":{"line":175,"column":82}},"109":{"start":{"line":178,"column":0},"end":{"line":195,"column":2}},"110":{"start":{"line":179,"column":2},"end":{"line":180,"column":33}},"111":{"start":{"line":180,"column":1},"end":{"line":180,"column":33}},"112":{"start":{"line":181,"column":2},"end":{"line":181,"column":26}},"113":{"start":{"line":182,"column":2},"end":{"line":193,"column":3}},"114":{"start":{"line":184,"column":1},"end":{"line":184,"column":26}},"115":{"start":{"line":185,"column":1},"end":{"line":185,"column":11}},"116":{"start":{"line":186,"column":1},"end":{"line":186,"column":23}},"117":{"start":{"line":187,"column":1},"end":{"line":191,"column":2}},"118":{"start":{"line":189,"column":2},"end":{"line":189,"column":17}},"119":{"start":{"line":190,"column":2},"end":{"line":190,"column":8}},"120":{"start":{"line":192,"column":1},"end":{"line":192,"column":28}},"121":{"start":{"line":194,"column":2},"end":{"line":194,"column":58}}},"branchMap":{"1":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"2":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"3":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":20},"end":{"line":58,"column":45}},{"start":{"line":58,"column":49},"end":{"line":58,"column":50}}]},"4":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]},"5":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":6},"end":{"line":80,"column":6}},{"start":{"line":80,"column":6},"end":{"line":80,"column":6}}]},"6":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":21},"end":{"line":83,"column":33}},{"start":{"line":83,"column":37},"end":{"line":83,"column":47}}]},"7":{"line":87,"type":"switch","locations":[{"start":{"line":89,"column":4},"end":{"line":91,"column":11}},{"start":{"line":92,"column":4},"end":{"line":94,"column":11}},{"start":{"line":95,"column":4},"end":{"line":97,"column":11}},{"start":{"line":98,"column":4},"end":{"line":99,"column":77}}]},"8":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":2},"end":{"line":105,"column":2}},{"start":{"line":105,"column":2},"end":{"line":105,"column":2}}]},"9":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":1},"end":{"line":110,"column":1}},{"start":{"line":110,"column":1},"end":{"line":110,"column":1}}]},"10":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":2},"end":{"line":126,"column":2}},{"start":{"line":126,"column":2},"end":{"line":126,"column":2}}]},"11":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":15},"end":{"line":138,"column":25}},{"start":{"line":138,"column":29},"end":{"line":138,"column":30}}]},"12":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":1},"end":{"line":139,"column":1}},{"start":{"line":139,"column":1},"end":{"line":139,"column":1}}]},"13":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":15},"end":{"line":146,"column":25}},{"start":{"line":146,"column":29},"end":{"line":146,"column":30}}]},"14":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":1},"end":{"line":147,"column":1}},{"start":{"line":147,"column":1},"end":{"line":147,"column":1}}]},"15":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":15},"end":{"line":154,"column":25}},{"start":{"line":154,"column":29},"end":{"line":154,"column":30}}]},"16":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":1},"end":{"line":155,"column":1}},{"start":{"line":155,"column":1},"end":{"line":155,"column":1}}]},"17":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":1},"end":{"line":157,"column":1}},{"start":{"line":157,"column":1},"end":{"line":157,"column":1}}]},"18":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":15},"end":{"line":164,"column":25}},{"start":{"line":164,"column":29},"end":{"line":164,"column":30}}]},"19":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":1},"end":{"line":165,"column":1}},{"start":{"line":165,"column":1},"end":{"line":165,"column":1}}]},"20":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":2},"end":{"line":167,"column":2}},{"start":{"line":167,"column":2},"end":{"line":167,"column":2}}]},"21":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":1},"end":{"line":171,"column":1}},{"start":{"line":171,"column":1},"end":{"line":171,"column":1}}]},"22":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":2},"end":{"line":179,"column":2}},{"start":{"line":179,"column":2},"end":{"line":179,"column":2}}]},"23":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":1},"end":{"line":187,"column":1}},{"start":{"line":187,"column":1},"end":{"line":187,"column":1}}]}},"code":["require('node-zip');","var fs = require('fs');","","Date.prototype.getJulian = function() {","\treturn Math.floor((this / 86400000) -","\t(this.getTimezoneOffset()/1440) + 2440587.5);","};","","Date.prototype.oaDate = function() {"," return (this - new Date(Date.UTC(1899,11,30))) / (24 * 60 * 60 * 1000);","};","","var templateXLSX = \"\";","var sheetFront = '<?xml version=\"1.0\" encoding=\"utf-8\"?><x:worksheet xmlns:ss=\"urn:schemas-microsoft-com:office:spreadsheet\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" xmlns:x=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" mc:Ignorable=\"x14ac\" xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\"><x:sheetPr><x:outlinePr summaryBelow=\"1\" summaryRight=\"1\" /></x:sheetPr><x:sheetViews><x:sheetView tabSelected=\"0\" workbookViewId=\"0\" /></x:sheetViews><x:sheetFormatPr defaultRowHeight=\"15\" />';","var sheetBack = '<x:printOptions horizontalCentered=\"0\" verticalCentered=\"0\" headings=\"0\" gridLines=\"0\" /><x:pageMargins left=\"0.75\" right=\"0.75\" top=\"0.75\" bottom=\"0.5\" header=\"0.5\" footer=\"0.75\" /><x:pageSetup paperSize=\"1\" scale=\"100\" pageOrder=\"downThenOver\" orientation=\"default\" blackAndWhite=\"0\" draft=\"0\" cellComments=\"none\" errors=\"displayed\" /><x:headerFooter /><x:tableParts count=\"0\" /></x:worksheet>';","","","var sharedStringsFront = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><x:sst xmlns:x=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" uniqueCount=\"$count\" count=\"$count\">';","var sharedStringsBack = '</x:sst>';","var shareStrings, convertedShareStrings;","","exports.executeAsync = function(config, callBack){","\treturn process.nextTick(function(){","\t\tvar r = exports.execute(config);\t\t","\t\tcallBack(r);","\t});","};","","exports.execute = function(config){","\tvar cols = config.cols,","\t\tdata = config.rows,","    colsLength = cols.length,","\t  xlsx = new JSZip(templateXLSX, { base64: true, checkCRC32: false }),","\t\tsheet = xlsx.file(\"xl/worksheets/sheet.xml\"),","\t\tsharedStringsXml = xlsx.file(\"xl/sharedStrings.xml\"),","\t\trows = \"\",","\t\trow =\"\",","    colsWidth = \"\",","    styleIndex,","    k;","","  if (config.stylesXmlFile){","    var path = config.stylesXmlFile;","    var styles = null;","    styles = fs.readFileSync(path, 'utf8');","    if (styles){","      xlsx.file(\"xl/styles.xml\", styles);","    }","  }","  ","\tshareStrings = new Array();","  convertedShareStrings = \"\";","\t//first row for column caption","\trow = '<x:row r=\"1\" spans=\"1:'+ colsLength + '\">';","  var colStyleIndex;","\tfor (k=0; k < colsLength; k++)","\t{","    colStyleIndex = cols[k].captionStyleIndex || 0;","\t\trow += addStringCol(getColumnLetter(k+1)+1, cols[k].caption, colStyleIndex);","    if (cols[k].width){","      colsWidth += '<col customWidth = \"1\" width=\"' + cols[k].width + '\" max = \"' + (k+1) +'\" min=\"' + (k+1) +'\"/>';","    }","\t}","\trow += '</x:row>';","\trows += row;\t","\t","\t//fill in data","  var i, j, r, cellData, currRow, cellType,","    dataLength = data.length;","    ","\tfor (i=0;i<dataLength;i++)","\t{","\t\tr = data[i], currRow = i+2;","\t\trow = '<x:row r=\"' + currRow +'\" spans=\"1:'+ colsLength + '\">';","\t\tfor (j=0; j < colsLength; j++)","\t\t{","      styleIndex = null;","      cellData = r[j];","      cellType = cols[j].type;","      if (typeof cols[j].beforeCellWrite === 'function'){","        var e ={rowNum: currRow, styleIndex: null, cellType: cellType};","        cellData = cols[j].beforeCellWrite(r, cellData, e);","        styleIndex = e.styleIndex || styleIndex;","        cellType = e.cellType;","        delete e;","      }     ","\t\t\tswitch(cellType)","\t\t\t{","\t\t\t\tcase 'number':","\t\t\t\t\trow += addNumberCol(getColumnLetter(j+1)+currRow, cellData, styleIndex);","\t\t\t\t\tbreak;","\t\t\t\tcase 'date':","\t\t\t\t\trow += addDateCol(getColumnLetter(j+1)+currRow, cellData, styleIndex);","\t\t\t\t\tbreak;","\t\t\t\tcase 'bool':","\t\t\t\t\trow += addBoolCol(getColumnLetter(j+1)+currRow, cellData, styleIndex);","\t\t\t\t\tbreak;\t\t\t\t\t","\t\t\t\tdefault:","\t\t\t\t\trow += addStringCol(getColumnLetter(j+1)+currRow, cellData, styleIndex);","\t\t\t}","\t\t}","\t\trow += '</x:row>';","\t\trows += row;","\t}\t","  if (colsWidth !== \"\")","    sheetFront += '<cols>'+colsWidth+'</cols>';","\txlsx.file(sheet.name, sheetFront + '<x:sheetData>' + rows + '</x:sheetData>' + sheetBack);","  ","  ","\tif (shareStrings.length >0)","\t{","\t\tsharedStringsFront = sharedStringsFront.replace(/\\$count/g, shareStrings.length);","\t\txlsx.file(sharedStringsXml.name, (sharedStringsFront + convertedShareStrings + sharedStringsBack));","\t}","\tvar results = xlsx.generate({ base64: false, compression: \"DEFLATE\" });","\tdelete xlsx;","\tdelete shareStrings;","\treturn results;","};","","var startTag = function (obj, tagName, closed){","  var result = \"<\" + tagName, p;","  for (p in obj){","    result += \" \" + p + \"=\" + obj[p];","  }","  if (!closed)","    result += \">\";","  else","    result += \"/>\";","  return result;","};","","var endTag = function(tagName){","  return \"</\" + tagName + \">\";","};","","var addNumberCol = function(cellRef, value, styleIndex){","  styleIndex = styleIndex || 0;","\tif (value===null)","\t\treturn \"\";","\telse","\t\treturn '<x:c r=\"'+cellRef+'\" s=\"'+ styleIndex +'\" t=\"n\"><x:v>'+value+'</x:v></x:c>';","};","","var addDateCol = function(cellRef, value, styleIndex){","  styleIndex = styleIndex || 1;","\tif (value===null)","\t\treturn \"\";","\telse","\t\treturn '<x:c r=\"'+cellRef+'\" s=\"'+ styleIndex +'\" t=\"n\"><x:v>'+value+'</x:v></x:c>';","};","","var addBoolCol = function(cellRef, value, styleIndex){","  styleIndex = styleIndex || 0;","\tif (value===null)","\t\treturn \"\";","\tif (value){","\t  value = 1;","\t} else","\t  value = 0;","\treturn '<x:c r=\"'+cellRef+'\" s=\"'+ styleIndex + '\" t=\"b\"><x:v>'+value+'</x:v></x:c>';","};","var addStringCol = function(cellRef, value, styleIndex){","  styleIndex = styleIndex || 0;","\tif (value===null)","\t\treturn \"\";","  if (typeof value ==='string'){","    value = value.replace(/&/g, \"&amp;\").replace(/'/g, \"&apos;\").replace(/>/g, \"&gt;\").replace(/</g, \"&lt;\");","  }","  var i = shareStrings.indexOf(value);","\tif ( i< 0){","\t\ti = shareStrings.push(value) -1;","    convertedShareStrings = convertedShareStrings+ \"<x:si><x:t>\"+value+\"</x:t></x:si>\";","\t}","\treturn '<x:c r=\"'+cellRef+'\" s=\"'+ styleIndex + '\" t=\"s\"><x:v>'+i+'</x:v></x:c>';","};","","var getColumnLetter = function(col){","  if (col <= 0)","\tthrow \"col must be more than 0\";","  var array = new Array();","  while (col > 0)","  {","\tvar remainder = col % 26;","\tcol /= 26;","\tcol = Math.floor(col);","\tif(remainder ===0)","\t{","\t\tremainder = 26;","\t\tcol--;","\t}","\tarray.push(64 + remainder);","  }","  return String.fromCharCode.apply(null, array.reverse());","};"],"l":{"1":1,"2":1,"4":1,"5":0,"9":1,"10":0,"13":1,"14":1,"15":1,"18":1,"19":1,"20":1,"22":1,"23":0,"24":0,"25":0,"29":1,"30":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"51":0,"52":0,"54":0,"55":0,"56":0,"58":0,"59":0,"60":0,"61":0,"64":0,"65":0,"68":0,"71":0,"73":0,"74":0,"75":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"87":0,"90":0,"91":0,"93":0,"94":0,"96":0,"97":0,"99":0,"102":0,"103":0,"105":0,"106":0,"107":0,"110":0,"112":0,"113":0,"115":0,"116":0,"117":0,"118":0,"121":1,"122":0,"123":0,"124":0,"126":0,"127":0,"129":0,"130":0,"133":1,"134":0,"137":1,"138":0,"139":0,"140":0,"142":0,"145":1,"146":0,"147":0,"148":0,"150":0,"153":1,"154":0,"155":0,"156":0,"157":0,"158":0,"160":0,"161":0,"163":1,"164":0,"165":0,"166":0,"167":0,"168":0,"170":0,"171":0,"172":0,"173":0,"175":0,"178":1,"179":0,"180":0,"181":0,"182":0,"184":0,"185":0,"186":0,"187":0,"189":0,"190":0,"192":0,"194":0}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/lib/nodezip.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/lib/nodezip.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":41}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":23}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":21}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":77}},"5":{"start":{"line":5,"column":43},"end":{"line":5,"column":75}}},"branchMap":{},"code":["var fs = require('fs');","var JSZip = require('jszip');","","global.JSZip = JSZip;","module.exports = function(data, options) { return new JSZip(data, options) };",""],"l":{"1":1,"2":1,"4":1,"5":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/index.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":0,"23":0,"24":1,"25":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"JSZip","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":30}}},"2":{"name":"(anonymous_2)","line":41,"loc":{"start":{"line":41,"column":17},"end":{"line":41,"column":28}}},"3":{"name":"(anonymous_3)","line":67,"loc":{"start":{"line":67,"column":13},"end":{"line":67,"column":29}}},"4":{"name":"(anonymous_4)","line":74,"loc":{"start":{"line":74,"column":13},"end":{"line":74,"column":29}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":23,"column":0},"end":{"line":50,"column":1}},"3":{"start":{"line":25,"column":4},"end":{"line":25,"column":65}},"4":{"start":{"line":25,"column":33},"end":{"line":25,"column":65}},"5":{"start":{"line":32,"column":4},"end":{"line":32,"column":20}},"6":{"start":{"line":34,"column":4},"end":{"line":34,"column":24}},"7":{"start":{"line":37,"column":4},"end":{"line":37,"column":19}},"8":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"9":{"start":{"line":39,"column":8},"end":{"line":39,"column":33}},"10":{"start":{"line":41,"column":4},"end":{"line":49,"column":6}},"11":{"start":{"line":42,"column":8},"end":{"line":42,"column":33}},"12":{"start":{"line":43,"column":8},"end":{"line":47,"column":9}},"13":{"start":{"line":44,"column":12},"end":{"line":46,"column":13}},"14":{"start":{"line":45,"column":16},"end":{"line":45,"column":36}},"15":{"start":{"line":48,"column":8},"end":{"line":48,"column":22}},"16":{"start":{"line":51,"column":0},"end":{"line":51,"column":38}},"17":{"start":{"line":52,"column":0},"end":{"line":52,"column":41}},"18":{"start":{"line":53,"column":0},"end":{"line":53,"column":37}},"19":{"start":{"line":54,"column":0},"end":{"line":54,"column":39}},"20":{"start":{"line":60,"column":0},"end":{"line":60,"column":49}},"21":{"start":{"line":62,"column":0},"end":{"line":77,"column":2}},"22":{"start":{"line":68,"column":8},"end":{"line":68,"column":36}},"23":{"start":{"line":75,"column":8},"end":{"line":75,"column":36}},"24":{"start":{"line":78,"column":0},"end":{"line":78,"column":47}},"25":{"start":{"line":79,"column":0},"end":{"line":79,"column":23}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]},"2":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"3":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":12},"end":{"line":44,"column":12}},{"start":{"line":44,"column":12},"end":{"line":44,"column":12}}]}},"code":["'use strict';","","var base64 = require('./base64');","","/**","Usage:","   zip = new JSZip();","   zip.file(\"hello.txt\", \"Hello, World!\").file(\"tempfile\", \"nothing\");","   zip.folder(\"images\").file(\"smile.gif\", base64Data, {base64: true});","   zip.file(\"Xmas.txt\", \"Ho ho ho !\", {date : new Date(\"December 25, 2007 00:00:01\")});","   zip.remove(\"tempfile\");","","   base64zip = zip.generate();","","**/","","/**"," * Representation a of zip file in js"," * @constructor"," * @param {String=|ArrayBuffer=|Uint8Array=} data the data to load, if any (optional)."," * @param {Object=} options the options for creating this objects (optional)."," */","function JSZip(data, options) {","    // if this constructor is used without `new`, it adds `new` before itself:","    if(!(this instanceof JSZip)) return new JSZip(data, options);","","    // object containing the files :","    // {","    //   \"folder/\" : {...},","    //   \"folder/data.txt\" : {...}","    // }","    this.files = {};","","    this.comment = null;","","    // Where we are in the hierarchy","    this.root = \"\";","    if (data) {","        this.load(data, options);","    }","    this.clone = function() {","        var newObj = new JSZip();","        for (var i in this) {","            if (typeof this[i] !== \"function\") {","                newObj[i] = this[i];","            }","        }","        return newObj;","    };","}","JSZip.prototype = require('./object');","JSZip.prototype.load = require('./load');","JSZip.support = require('./support');","JSZip.defaults = require('./defaults');","","/**"," * @deprecated"," * This namespace will be removed in a future version without replacement."," */","JSZip.utils = require('./deprecatedPublicUtils');","","JSZip.base64 = {","    /**","     * @deprecated","     * This method will be removed in a future version without replacement.","     */","    encode : function(input) {","        return base64.encode(input);","    },","    /**","     * @deprecated","     * This method will be removed in a future version without replacement.","     */","    decode : function(input) {","        return base64.decode(input);","    }","};","JSZip.compressions = require('./compressions');","module.exports = JSZip;",""],"l":{"3":1,"23":1,"25":0,"32":0,"34":0,"37":0,"38":0,"39":0,"41":0,"42":0,"43":0,"44":0,"45":0,"48":0,"51":1,"52":1,"53":1,"54":1,"60":1,"62":1,"68":0,"75":0,"78":1,"79":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/base64.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/base64.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":17},"end":{"line":7,"column":39}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":17},"end":{"line":38,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":82}},"2":{"start":{"line":7,"column":0},"end":{"line":35,"column":2}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":20}},"4":{"start":{"line":9,"column":4},"end":{"line":9,"column":49}},"5":{"start":{"line":10,"column":4},"end":{"line":10,"column":14}},"6":{"start":{"line":12,"column":4},"end":{"line":32,"column":5}},"7":{"start":{"line":14,"column":8},"end":{"line":14,"column":37}},"8":{"start":{"line":15,"column":8},"end":{"line":15,"column":37}},"9":{"start":{"line":16,"column":8},"end":{"line":16,"column":37}},"10":{"start":{"line":18,"column":8},"end":{"line":18,"column":25}},"11":{"start":{"line":19,"column":8},"end":{"line":19,"column":47}},"12":{"start":{"line":20,"column":8},"end":{"line":20,"column":48}},"13":{"start":{"line":21,"column":8},"end":{"line":21,"column":25}},"14":{"start":{"line":23,"column":8},"end":{"line":28,"column":9}},"15":{"start":{"line":24,"column":12},"end":{"line":24,"column":29}},"16":{"start":{"line":26,"column":13},"end":{"line":28,"column":9}},"17":{"start":{"line":27,"column":12},"end":{"line":27,"column":22}},"18":{"start":{"line":30,"column":8},"end":{"line":30,"column":116}},"19":{"start":{"line":34,"column":4},"end":{"line":34,"column":18}},"20":{"start":{"line":38,"column":0},"end":{"line":70,"column":2}},"21":{"start":{"line":39,"column":4},"end":{"line":39,"column":20}},"22":{"start":{"line":40,"column":4},"end":{"line":40,"column":25}},"23":{"start":{"line":41,"column":4},"end":{"line":41,"column":31}},"24":{"start":{"line":42,"column":4},"end":{"line":42,"column":14}},"25":{"start":{"line":44,"column":4},"end":{"line":44,"column":53}},"26":{"start":{"line":46,"column":4},"end":{"line":66,"column":5}},"27":{"start":{"line":48,"column":8},"end":{"line":48,"column":50}},"28":{"start":{"line":49,"column":8},"end":{"line":49,"column":50}},"29":{"start":{"line":50,"column":8},"end":{"line":50,"column":50}},"30":{"start":{"line":51,"column":8},"end":{"line":51,"column":50}},"31":{"start":{"line":53,"column":8},"end":{"line":53,"column":41}},"32":{"start":{"line":54,"column":8},"end":{"line":54,"column":48}},"33":{"start":{"line":55,"column":8},"end":{"line":55,"column":40}},"34":{"start":{"line":57,"column":8},"end":{"line":57,"column":52}},"35":{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},"36":{"start":{"line":60,"column":12},"end":{"line":60,"column":56}},"37":{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},"38":{"start":{"line":63,"column":12},"end":{"line":63,"column":56}},"39":{"start":{"line":68,"column":4},"end":{"line":68,"column":18}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":23,"column":8}},{"start":{"line":23,"column":8},"end":{"line":23,"column":8}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":13},"end":{"line":26,"column":13}},{"start":{"line":26,"column":13},"end":{"line":26,"column":13}}]},"3":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":59,"column":8}},{"start":{"line":59,"column":8},"end":{"line":59,"column":8}}]},"4":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":62,"column":8}},{"start":{"line":62,"column":8},"end":{"line":62,"column":8}}]}},"code":["'use strict';","// private property","var _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";","","","// public method for encoding","exports.encode = function(input, utf8) {","    var output = \"\";","    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;","    var i = 0;","","    while (i < input.length) {","","        chr1 = input.charCodeAt(i++);","        chr2 = input.charCodeAt(i++);","        chr3 = input.charCodeAt(i++);","","        enc1 = chr1 >> 2;","        enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);","        enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);","        enc4 = chr3 & 63;","","        if (isNaN(chr2)) {","            enc3 = enc4 = 64;","        }","        else if (isNaN(chr3)) {","            enc4 = 64;","        }","","        output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);","","    }","","    return output;","};","","// public method for decoding","exports.decode = function(input, utf8) {","    var output = \"\";","    var chr1, chr2, chr3;","    var enc1, enc2, enc3, enc4;","    var i = 0;","","    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");","","    while (i < input.length) {","","        enc1 = _keyStr.indexOf(input.charAt(i++));","        enc2 = _keyStr.indexOf(input.charAt(i++));","        enc3 = _keyStr.indexOf(input.charAt(i++));","        enc4 = _keyStr.indexOf(input.charAt(i++));","","        chr1 = (enc1 << 2) | (enc2 >> 4);","        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);","        chr3 = ((enc3 & 3) << 6) | enc4;","","        output = output + String.fromCharCode(chr1);","","        if (enc3 != 64) {","            output = output + String.fromCharCode(chr2);","        }","        if (enc4 != 64) {","            output = output + String.fromCharCode(chr3);","        }","","    }","","    return output;","","};",""],"l":{"3":1,"7":1,"8":0,"9":0,"10":0,"12":0,"14":0,"15":0,"16":0,"18":0,"19":0,"20":0,"21":0,"23":0,"24":0,"26":0,"27":0,"30":0,"34":0,"38":1,"39":0,"40":0,"41":0,"42":0,"44":0,"46":0,"48":0,"49":0,"50":0,"51":0,"53":0,"54":0,"55":0,"57":0,"59":0,"60":0,"62":0,"63":0,"68":0}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/object.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/object.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1,"116":0,"117":0,"118":0,"119":0,"120":1,"121":0,"122":0,"123":0,"124":1,"125":0,"126":0,"127":0,"128":0,"129":0,"130":1,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":1,"154":0,"155":0,"156":0,"157":0,"158":1,"159":0,"160":1,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":1,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0,0,0],"79":[0,0],"80":[0,0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0,0],"85":[0,0],"86":[0,0,0,0],"87":[0,0,0,0,0,0],"88":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":17},"end":{"line":20,"column":32}}},"2":{"name":"(anonymous_2)","line":45,"loc":{"start":{"line":45,"column":20},"end":{"line":45,"column":35}}},"3":{"name":"(anonymous_3)","line":66,"loc":{"start":{"line":66,"column":19},"end":{"line":66,"column":36}}},"4":{"name":"(anonymous_4)","line":97,"loc":{"start":{"line":97,"column":16},"end":{"line":97,"column":46}}},"5":{"name":"(anonymous_5)","line":124,"loc":{"start":{"line":124,"column":12},"end":{"line":124,"column":23}}},"6":{"name":"(anonymous_6)","line":131,"loc":{"start":{"line":131,"column":14},"end":{"line":131,"column":25}}},"7":{"name":"(anonymous_7)","line":138,"loc":{"start":{"line":138,"column":18},"end":{"line":138,"column":29}}},"8":{"name":"(anonymous_8)","line":146,"loc":{"start":{"line":146,"column":18},"end":{"line":146,"column":29}}},"9":{"name":"(anonymous_9)","line":154,"loc":{"start":{"line":154,"column":19},"end":{"line":154,"column":30}}},"10":{"name":"(anonymous_10)","line":166,"loc":{"start":{"line":166,"column":15},"end":{"line":166,"column":36}}},"11":{"name":"(anonymous_11)","line":182,"loc":{"start":{"line":182,"column":13},"end":{"line":182,"column":24}}},"12":{"name":"(anonymous_12)","line":201,"loc":{"start":{"line":201,"column":23},"end":{"line":201,"column":35}}},"13":{"name":"(anonymous_13)","line":221,"loc":{"start":{"line":221,"column":14},"end":{"line":221,"column":38}}},"14":{"name":"(anonymous_14)","line":290,"loc":{"start":{"line":290,"column":19},"end":{"line":290,"column":35}}},"15":{"name":"(anonymous_15)","line":305,"loc":{"start":{"line":305,"column":25},"end":{"line":305,"column":40}}},"16":{"name":"(anonymous_16)","line":320,"loc":{"start":{"line":320,"column":16},"end":{"line":320,"column":46}}},"17":{"name":"(anonymous_17)","line":342,"loc":{"start":{"line":342,"column":35},"end":{"line":342,"column":83}}},"18":{"name":"(anonymous_18)","line":401,"loc":{"start":{"line":401,"column":35},"end":{"line":401,"column":69}}},"19":{"name":"(anonymous_19)","line":427,"loc":{"start":{"line":427,"column":34},"end":{"line":427,"column":67}}},"20":{"name":"(anonymous_20)","line":443,"loc":{"start":{"line":443,"column":23},"end":{"line":443,"column":80}}},"21":{"name":"(anonymous_21)","line":617,"loc":{"start":{"line":617,"column":10},"end":{"line":617,"column":36}}},"22":{"name":"(anonymous_22)","line":628,"loc":{"start":{"line":628,"column":12},"end":{"line":628,"column":29}}},"23":{"name":"(anonymous_23)","line":656,"loc":{"start":{"line":656,"column":10},"end":{"line":656,"column":34}}},"24":{"name":"(anonymous_24)","line":660,"loc":{"start":{"line":660,"column":35},"end":{"line":660,"column":64}}},"25":{"name":"(anonymous_25)","line":665,"loc":{"start":{"line":665,"column":35},"end":{"line":665,"column":64}}},"26":{"name":"(anonymous_26)","line":682,"loc":{"start":{"line":682,"column":12},"end":{"line":682,"column":26}}},"27":{"name":"(anonymous_27)","line":688,"loc":{"start":{"line":688,"column":31},"end":{"line":688,"column":60}}},"28":{"name":"(anonymous_28)","line":708,"loc":{"start":{"line":708,"column":12},"end":{"line":708,"column":27}}},"29":{"name":"(anonymous_29)","line":724,"loc":{"start":{"line":724,"column":35},"end":{"line":724,"column":64}}},"30":{"name":"(anonymous_30)","line":743,"loc":{"start":{"line":743,"column":14},"end":{"line":743,"column":32}}},"31":{"name":"(anonymous_31)","line":863,"loc":{"start":{"line":863,"column":11},"end":{"line":863,"column":33}}},"32":{"name":"(anonymous_32)","line":871,"loc":{"start":{"line":871,"column":16},"end":{"line":871,"column":34}}},"33":{"name":"(anonymous_33)","line":879,"loc":{"start":{"line":879,"column":16},"end":{"line":879,"column":33}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":39}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":45}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":53}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":41}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":29}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":45}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":53}},"13":{"start":{"line":20,"column":0},"end":{"line":38,"column":2}},"14":{"start":{"line":21,"column":4},"end":{"line":36,"column":5}},"15":{"start":{"line":22,"column":8},"end":{"line":22,"column":45}},"16":{"start":{"line":23,"column":8},"end":{"line":23,"column":35}},"17":{"start":{"line":24,"column":8},"end":{"line":24,"column":36}},"18":{"start":{"line":26,"column":8},"end":{"line":35,"column":9}},"19":{"start":{"line":27,"column":12},"end":{"line":27,"column":34}},"20":{"start":{"line":30,"column":12},"end":{"line":30,"column":53}},"21":{"start":{"line":32,"column":12},"end":{"line":34,"column":13}},"22":{"start":{"line":33,"column":16},"end":{"line":33,"column":40}},"23":{"start":{"line":37,"column":4},"end":{"line":37,"column":22}},"24":{"start":{"line":45,"column":0},"end":{"line":59,"column":2}},"25":{"start":{"line":46,"column":4},"end":{"line":47,"column":39}},"26":{"start":{"line":48,"column":4},"end":{"line":57,"column":5}},"27":{"start":{"line":49,"column":8},"end":{"line":55,"column":9}},"28":{"start":{"line":52,"column":12},"end":{"line":54,"column":13}},"29":{"start":{"line":53,"column":16},"end":{"line":53,"column":51}},"30":{"start":{"line":56,"column":8},"end":{"line":56,"column":31}},"31":{"start":{"line":58,"column":4},"end":{"line":58,"column":18}},"32":{"start":{"line":66,"column":0},"end":{"line":89,"column":2}},"33":{"start":{"line":67,"column":4},"end":{"line":67,"column":34}},"34":{"start":{"line":68,"column":4},"end":{"line":70,"column":5}},"35":{"start":{"line":69,"column":8},"end":{"line":69,"column":18}},"36":{"start":{"line":72,"column":4},"end":{"line":74,"column":5}},"37":{"start":{"line":73,"column":8},"end":{"line":73,"column":39}},"38":{"start":{"line":75,"column":4},"end":{"line":83,"column":5}},"39":{"start":{"line":78,"column":8},"end":{"line":78,"column":40}},"40":{"start":{"line":82,"column":8},"end":{"line":82,"column":53}},"41":{"start":{"line":85,"column":4},"end":{"line":87,"column":5}},"42":{"start":{"line":86,"column":8},"end":{"line":86,"column":69}},"43":{"start":{"line":88,"column":4},"end":{"line":88,"column":18}},"44":{"start":{"line":97,"column":0},"end":{"line":117,"column":2}},"45":{"start":{"line":98,"column":4},"end":{"line":98,"column":21}},"46":{"start":{"line":99,"column":4},"end":{"line":99,"column":27}},"47":{"start":{"line":100,"column":4},"end":{"line":100,"column":29}},"48":{"start":{"line":101,"column":4},"end":{"line":101,"column":35}},"49":{"start":{"line":102,"column":4},"end":{"line":102,"column":51}},"50":{"start":{"line":103,"column":4},"end":{"line":103,"column":49}},"51":{"start":{"line":105,"column":4},"end":{"line":105,"column":22}},"52":{"start":{"line":106,"column":4},"end":{"line":106,"column":27}},"53":{"start":{"line":113,"column":4},"end":{"line":116,"column":6}},"54":{"start":{"line":119,"column":0},"end":{"line":157,"column":2}},"55":{"start":{"line":125,"column":8},"end":{"line":125,"column":45}},"56":{"start":{"line":132,"column":8},"end":{"line":132,"column":46}},"57":{"start":{"line":139,"column":8},"end":{"line":139,"column":41}},"58":{"start":{"line":140,"column":8},"end":{"line":140,"column":55}},"59":{"start":{"line":147,"column":8},"end":{"line":147,"column":41}},"60":{"start":{"line":148,"column":8},"end":{"line":148,"column":55}},"61":{"start":{"line":155,"column":8},"end":{"line":155,"column":42}},"62":{"start":{"line":166,"column":0},"end":{"line":174,"column":2}},"63":{"start":{"line":167,"column":4},"end":{"line":168,"column":10}},"64":{"start":{"line":169,"column":4},"end":{"line":172,"column":5}},"65":{"start":{"line":170,"column":8},"end":{"line":170,"column":47}},"66":{"start":{"line":171,"column":8},"end":{"line":171,"column":24}},"67":{"start":{"line":173,"column":4},"end":{"line":173,"column":15}},"68":{"start":{"line":182,"column":0},"end":{"line":192,"column":2}},"69":{"start":{"line":183,"column":4},"end":{"line":183,"column":29}},"70":{"start":{"line":184,"column":4},"end":{"line":190,"column":5}},"71":{"start":{"line":185,"column":8},"end":{"line":189,"column":9}},"72":{"start":{"line":186,"column":12},"end":{"line":188,"column":13}},"73":{"start":{"line":187,"column":16},"end":{"line":187,"column":50}},"74":{"start":{"line":191,"column":4},"end":{"line":191,"column":18}},"75":{"start":{"line":201,"column":0},"end":{"line":211,"column":2}},"76":{"start":{"line":202,"column":4},"end":{"line":202,"column":16}},"77":{"start":{"line":203,"column":4},"end":{"line":205,"column":5}},"78":{"start":{"line":204,"column":8},"end":{"line":204,"column":24}},"79":{"start":{"line":206,"column":4},"end":{"line":206,"column":28}},"80":{"start":{"line":207,"column":4},"end":{"line":207,"column":34}},"81":{"start":{"line":208,"column":4},"end":{"line":208,"column":76}},"82":{"start":{"line":208,"column":32},"end":{"line":208,"column":76}},"83":{"start":{"line":210,"column":4},"end":{"line":210,"column":13}},"84":{"start":{"line":221,"column":0},"end":{"line":282,"column":2}},"85":{"start":{"line":223,"column":4},"end":{"line":224,"column":15}},"86":{"start":{"line":226,"column":4},"end":{"line":226,"column":28}},"87":{"start":{"line":228,"column":4},"end":{"line":230,"column":5}},"88":{"start":{"line":229,"column":8},"end":{"line":229,"column":59}},"89":{"start":{"line":233,"column":4},"end":{"line":235,"column":5}},"90":{"start":{"line":234,"column":8},"end":{"line":234,"column":21}},"91":{"start":{"line":237,"column":4},"end":{"line":239,"column":5}},"92":{"start":{"line":238,"column":8},"end":{"line":238,"column":21}},"93":{"start":{"line":241,"column":4},"end":{"line":243,"column":5}},"94":{"start":{"line":242,"column":8},"end":{"line":242,"column":40}},"95":{"start":{"line":245,"column":4},"end":{"line":247,"column":5}},"96":{"start":{"line":246,"column":8},"end":{"line":246,"column":43}},"97":{"start":{"line":249,"column":4},"end":{"line":277,"column":5}},"98":{"start":{"line":250,"column":8},"end":{"line":250,"column":25}},"99":{"start":{"line":251,"column":8},"end":{"line":251,"column":25}},"100":{"start":{"line":252,"column":8},"end":{"line":252,"column":20}},"101":{"start":{"line":253,"column":8},"end":{"line":253,"column":24}},"102":{"start":{"line":255,"column":9},"end":{"line":277,"column":5}},"103":{"start":{"line":256,"column":8},"end":{"line":263,"column":9}},"104":{"start":{"line":258,"column":12},"end":{"line":262,"column":13}},"105":{"start":{"line":261,"column":16},"end":{"line":261,"column":49}},"106":{"start":{"line":266,"column":8},"end":{"line":266,"column":25}},"107":{"start":{"line":267,"column":8},"end":{"line":267,"column":24}},"108":{"start":{"line":269,"column":8},"end":{"line":271,"column":9}},"109":{"start":{"line":270,"column":12},"end":{"line":270,"column":88}},"110":{"start":{"line":274,"column":8},"end":{"line":276,"column":9}},"111":{"start":{"line":275,"column":12},"end":{"line":275,"column":57}},"112":{"start":{"line":279,"column":4},"end":{"line":279,"column":46}},"113":{"start":{"line":280,"column":4},"end":{"line":280,"column":30}},"114":{"start":{"line":281,"column":4},"end":{"line":281,"column":18}},"115":{"start":{"line":290,"column":0},"end":{"line":296,"column":2}},"116":{"start":{"line":291,"column":4},"end":{"line":293,"column":5}},"117":{"start":{"line":292,"column":8},"end":{"line":292,"column":50}},"118":{"start":{"line":294,"column":4},"end":{"line":294,"column":42}},"119":{"start":{"line":295,"column":4},"end":{"line":295,"column":63}},"120":{"start":{"line":305,"column":0},"end":{"line":311,"column":2}},"121":{"start":{"line":307,"column":4},"end":{"line":309,"column":5}},"122":{"start":{"line":308,"column":8},"end":{"line":308,"column":20}},"123":{"start":{"line":310,"column":4},"end":{"line":310,"column":16}},"124":{"start":{"line":320,"column":0},"end":{"line":333,"column":2}},"125":{"start":{"line":321,"column":4},"end":{"line":321,"column":83}},"126":{"start":{"line":323,"column":4},"end":{"line":323,"column":36}},"127":{"start":{"line":326,"column":4},"end":{"line":331,"column":5}},"128":{"start":{"line":327,"column":8},"end":{"line":330,"column":11}},"129":{"start":{"line":332,"column":4},"end":{"line":332,"column":28}},"130":{"start":{"line":342,"column":0},"end":{"line":381,"column":2}},"131":{"start":{"line":343,"column":4},"end":{"line":344,"column":16}},"132":{"start":{"line":347,"column":4},"end":{"line":375,"column":5}},"133":{"start":{"line":348,"column":8},"end":{"line":348,"column":62}},"134":{"start":{"line":349,"column":8},"end":{"line":349,"column":40}},"135":{"start":{"line":351,"column":8},"end":{"line":363,"column":9}},"136":{"start":{"line":352,"column":12},"end":{"line":352,"column":48}},"137":{"start":{"line":353,"column":12},"end":{"line":353,"column":42}},"138":{"start":{"line":354,"column":12},"end":{"line":354,"column":29}},"139":{"start":{"line":356,"column":13},"end":{"line":363,"column":9}},"140":{"start":{"line":357,"column":12},"end":{"line":357,"column":73}},"141":{"start":{"line":360,"column":12},"end":{"line":360,"column":46}},"142":{"start":{"line":362,"column":12},"end":{"line":362,"column":139}},"143":{"start":{"line":367,"column":8},"end":{"line":367,"column":38}},"144":{"start":{"line":368,"column":8},"end":{"line":371,"column":9}},"145":{"start":{"line":369,"column":12},"end":{"line":369,"column":48}},"146":{"start":{"line":370,"column":12},"end":{"line":370,"column":25}},"147":{"start":{"line":372,"column":8},"end":{"line":372,"column":49}},"148":{"start":{"line":373,"column":8},"end":{"line":373,"column":38}},"149":{"start":{"line":374,"column":8},"end":{"line":374,"column":135}},"150":{"start":{"line":377,"column":4},"end":{"line":377,"column":60}},"151":{"start":{"line":378,"column":4},"end":{"line":378,"column":49}},"152":{"start":{"line":380,"column":4},"end":{"line":380,"column":18}},"153":{"start":{"line":401,"column":0},"end":{"line":412,"column":2}},"154":{"start":{"line":403,"column":4},"end":{"line":403,"column":33}},"155":{"start":{"line":404,"column":4},"end":{"line":409,"column":5}},"156":{"start":{"line":408,"column":8},"end":{"line":408,"column":41}},"157":{"start":{"line":411,"column":4},"end":{"line":411,"column":35}},"158":{"start":{"line":427,"column":0},"end":{"line":432,"column":2}},"159":{"start":{"line":431,"column":4},"end":{"line":431,"column":41}},"160":{"start":{"line":443,"column":0},"end":{"line":604,"column":2}},"161":{"start":{"line":444,"column":4},"end":{"line":456,"column":18}},"162":{"start":{"line":460,"column":4},"end":{"line":464,"column":5}},"163":{"start":{"line":461,"column":8},"end":{"line":461,"column":23}},"164":{"start":{"line":463,"column":8},"end":{"line":463,"column":20}},"165":{"start":{"line":467,"column":4},"end":{"line":471,"column":5}},"166":{"start":{"line":468,"column":8},"end":{"line":468,"column":25}},"167":{"start":{"line":470,"column":8},"end":{"line":470,"column":22}},"168":{"start":{"line":473,"column":4},"end":{"line":473,"column":24}},"169":{"start":{"line":474,"column":4},"end":{"line":474,"column":26}},"170":{"start":{"line":475,"column":4},"end":{"line":478,"column":5}},"171":{"start":{"line":477,"column":8},"end":{"line":477,"column":31}},"172":{"start":{"line":479,"column":4},"end":{"line":485,"column":5}},"173":{"start":{"line":480,"column":8},"end":{"line":480,"column":31}},"174":{"start":{"line":481,"column":8},"end":{"line":481,"column":79}},"175":{"start":{"line":483,"column":8},"end":{"line":483,"column":31}},"176":{"start":{"line":484,"column":8},"end":{"line":484,"column":77}},"177":{"start":{"line":492,"column":4},"end":{"line":492,"column":30}},"178":{"start":{"line":493,"column":4},"end":{"line":493,"column":27}},"179":{"start":{"line":494,"column":4},"end":{"line":494,"column":42}},"180":{"start":{"line":495,"column":4},"end":{"line":495,"column":27}},"181":{"start":{"line":496,"column":4},"end":{"line":496,"column":46}},"182":{"start":{"line":498,"column":4},"end":{"line":498,"column":40}},"183":{"start":{"line":499,"column":4},"end":{"line":499,"column":27}},"184":{"start":{"line":500,"column":4},"end":{"line":500,"column":46}},"185":{"start":{"line":501,"column":4},"end":{"line":501,"column":27}},"186":{"start":{"line":502,"column":4},"end":{"line":502,"column":39}},"187":{"start":{"line":504,"column":4},"end":{"line":529,"column":5}},"188":{"start":{"line":514,"column":8},"end":{"line":520,"column":31}},"189":{"start":{"line":522,"column":8},"end":{"line":528,"column":34}},"190":{"start":{"line":531,"column":4},"end":{"line":548,"column":5}},"191":{"start":{"line":533,"column":8},"end":{"line":539,"column":30}},"192":{"start":{"line":541,"column":8},"end":{"line":547,"column":37}},"193":{"start":{"line":550,"column":4},"end":{"line":550,"column":20}},"194":{"start":{"line":553,"column":4},"end":{"line":553,"column":25}},"195":{"start":{"line":556,"column":4},"end":{"line":556,"column":82}},"196":{"start":{"line":558,"column":4},"end":{"line":558,"column":49}},"197":{"start":{"line":560,"column":4},"end":{"line":560,"column":35}},"198":{"start":{"line":562,"column":4},"end":{"line":562,"column":35}},"199":{"start":{"line":564,"column":4},"end":{"line":564,"column":50}},"200":{"start":{"line":566,"column":4},"end":{"line":566,"column":59}},"201":{"start":{"line":568,"column":4},"end":{"line":568,"column":61}},"202":{"start":{"line":570,"column":4},"end":{"line":570,"column":53}},"203":{"start":{"line":572,"column":4},"end":{"line":572,"column":46}},"204":{"start":{"line":575,"column":4},"end":{"line":575,"column":93}},"205":{"start":{"line":577,"column":4},"end":{"line":597,"column":22}},"206":{"start":{"line":599,"column":4},"end":{"line":603,"column":6}},"207":{"start":{"line":608,"column":0},"end":{"line":882,"column":2}},"208":{"start":{"line":618,"column":8},"end":{"line":618,"column":92}},"209":{"start":{"line":629,"column":8},"end":{"line":630,"column":52}},"210":{"start":{"line":631,"column":8},"end":{"line":643,"column":9}},"211":{"start":{"line":632,"column":12},"end":{"line":634,"column":13}},"212":{"start":{"line":633,"column":16},"end":{"line":633,"column":25}},"213":{"start":{"line":635,"column":12},"end":{"line":635,"column":40}},"214":{"start":{"line":637,"column":12},"end":{"line":637,"column":83}},"215":{"start":{"line":638,"column":12},"end":{"line":638,"column":77}},"216":{"start":{"line":639,"column":12},"end":{"line":642,"column":13}},"217":{"start":{"line":641,"column":16},"end":{"line":641,"column":39}},"218":{"start":{"line":644,"column":8},"end":{"line":644,"column":22}},"219":{"start":{"line":657,"column":8},"end":{"line":673,"column":9}},"220":{"start":{"line":658,"column":12},"end":{"line":668,"column":13}},"221":{"start":{"line":659,"column":16},"end":{"line":659,"column":34}},"222":{"start":{"line":660,"column":16},"end":{"line":662,"column":19}},"223":{"start":{"line":661,"column":20},"end":{"line":661,"column":66}},"224":{"start":{"line":665,"column":16},"end":{"line":667,"column":30}},"225":{"start":{"line":666,"column":20},"end":{"line":666,"column":62}},"226":{"start":{"line":671,"column":12},"end":{"line":671,"column":36}},"227":{"start":{"line":672,"column":12},"end":{"line":672,"column":46}},"228":{"start":{"line":674,"column":8},"end":{"line":674,"column":20}},"229":{"start":{"line":683,"column":8},"end":{"line":685,"column":9}},"230":{"start":{"line":684,"column":12},"end":{"line":684,"column":24}},"231":{"start":{"line":687,"column":8},"end":{"line":691,"column":9}},"232":{"start":{"line":688,"column":12},"end":{"line":690,"column":15}},"233":{"start":{"line":689,"column":16},"end":{"line":689,"column":58}},"234":{"start":{"line":694,"column":8},"end":{"line":694,"column":35}},"235":{"start":{"line":695,"column":8},"end":{"line":695,"column":51}},"236":{"start":{"line":698,"column":8},"end":{"line":698,"column":31}},"237":{"start":{"line":699,"column":8},"end":{"line":699,"column":34}},"238":{"start":{"line":700,"column":8},"end":{"line":700,"column":19}},"239":{"start":{"line":709,"column":8},"end":{"line":709,"column":32}},"240":{"start":{"line":710,"column":8},"end":{"line":710,"column":36}},"241":{"start":{"line":711,"column":8},"end":{"line":717,"column":9}},"242":{"start":{"line":713,"column":12},"end":{"line":715,"column":13}},"243":{"start":{"line":714,"column":16},"end":{"line":714,"column":28}},"244":{"start":{"line":716,"column":12},"end":{"line":716,"column":36}},"245":{"start":{"line":719,"column":8},"end":{"line":730,"column":9}},"246":{"start":{"line":721,"column":12},"end":{"line":721,"column":36}},"247":{"start":{"line":724,"column":12},"end":{"line":726,"column":15}},"248":{"start":{"line":725,"column":16},"end":{"line":725,"column":64}},"249":{"start":{"line":727,"column":12},"end":{"line":729,"column":13}},"250":{"start":{"line":728,"column":16},"end":{"line":728,"column":48}},"251":{"start":{"line":732,"column":8},"end":{"line":732,"column":20}},"252":{"start":{"line":744,"column":8},"end":{"line":752,"column":11}},"253":{"start":{"line":754,"column":8},"end":{"line":754,"column":41}},"254":{"start":{"line":757,"column":8},"end":{"line":764,"column":9}},"255":{"start":{"line":763,"column":10},"end":{"line":763,"column":36}},"256":{"start":{"line":765,"column":8},"end":{"line":767,"column":9}},"257":{"start":{"line":766,"column":10},"end":{"line":766,"column":35}},"258":{"start":{"line":769,"column":8},"end":{"line":773,"column":116}},"259":{"start":{"line":776,"column":8},"end":{"line":795,"column":9}},"260":{"start":{"line":777,"column":12},"end":{"line":779,"column":13}},"261":{"start":{"line":778,"column":16},"end":{"line":778,"column":25}},"262":{"start":{"line":780,"column":12},"end":{"line":780,"column":40}},"263":{"start":{"line":782,"column":12},"end":{"line":782,"column":96}},"264":{"start":{"line":783,"column":12},"end":{"line":783,"column":60}},"265":{"start":{"line":784,"column":12},"end":{"line":786,"column":13}},"266":{"start":{"line":785,"column":16},"end":{"line":785,"column":90}},"267":{"start":{"line":787,"column":12},"end":{"line":787,"column":105}},"268":{"start":{"line":789,"column":12},"end":{"line":789,"column":114}},"269":{"start":{"line":791,"column":12},"end":{"line":791,"column":118}},"270":{"start":{"line":792,"column":12},"end":{"line":792,"column":90}},"271":{"start":{"line":793,"column":12},"end":{"line":793,"column":57}},"272":{"start":{"line":794,"column":12},"end":{"line":794,"column":34}},"273":{"start":{"line":797,"column":8},"end":{"line":797,"column":24}},"274":{"start":{"line":800,"column":8},"end":{"line":816,"column":26}},"275":{"start":{"line":821,"column":8},"end":{"line":821,"column":50}},"276":{"start":{"line":822,"column":8},"end":{"line":826,"column":9}},"277":{"start":{"line":823,"column":12},"end":{"line":823,"column":93}},"278":{"start":{"line":825,"column":12},"end":{"line":825,"column":89}},"279":{"start":{"line":828,"column":8},"end":{"line":831,"column":9}},"280":{"start":{"line":829,"column":12},"end":{"line":829,"column":49}},"281":{"start":{"line":830,"column":12},"end":{"line":830,"column":73}},"282":{"start":{"line":832,"column":8},"end":{"line":834,"column":9}},"283":{"start":{"line":833,"column":12},"end":{"line":833,"column":48}},"284":{"start":{"line":836,"column":8},"end":{"line":836,"column":30}},"285":{"start":{"line":838,"column":8},"end":{"line":838,"column":36}},"286":{"start":{"line":842,"column":8},"end":{"line":855,"column":10}},"287":{"start":{"line":847,"column":15},"end":{"line":847,"column":73}},"288":{"start":{"line":849,"column":15},"end":{"line":849,"column":102}},"289":{"start":{"line":852,"column":15},"end":{"line":852,"column":66}},"290":{"start":{"line":854,"column":15},"end":{"line":854,"column":26}},"291":{"start":{"line":864,"column":8},"end":{"line":864,"column":33}},"292":{"start":{"line":872,"column":8},"end":{"line":872,"column":68}},"293":{"start":{"line":880,"column":8},"end":{"line":880,"column":38}},"294":{"start":{"line":883,"column":0},"end":{"line":883,"column":21}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":4}},{"start":{"line":21,"column":4},"end":{"line":21,"column":4}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":8}},{"start":{"line":26,"column":8},"end":{"line":26,"column":8}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":12},"end":{"line":32,"column":12}},{"start":{"line":32,"column":12},"end":{"line":32,"column":12}}]},"4":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"5":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":49,"column":8}},{"start":{"line":49,"column":8},"end":{"line":49,"column":8}}]},"6":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":12},"end":{"line":52,"column":12}},{"start":{"line":52,"column":12},"end":{"line":52,"column":12}}]},"7":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"8":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":23}},{"start":{"line":68,"column":27},"end":{"line":68,"column":56}}]},"9":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]},"10":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":75,"column":4}},{"start":{"line":75,"column":4},"end":{"line":75,"column":4}}]},"11":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":8},"end":{"line":75,"column":14}},{"start":{"line":75,"column":18},"end":{"line":75,"column":37}}]},"12":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":85,"column":4}},{"start":{"line":85,"column":4},"end":{"line":85,"column":4}}]},"13":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":15}},{"start":{"line":85,"column":19},"end":{"line":85,"column":39}}]},"14":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":12},"end":{"line":186,"column":12}},{"start":{"line":186,"column":12},"end":{"line":186,"column":12}}]},"15":{"line":186,"type":"binary-expr","locations":[{"start":{"line":186,"column":16},"end":{"line":186,"column":49}},{"start":{"line":186,"column":53},"end":{"line":186,"column":88}}]},"16":{"line":202,"type":"binary-expr","locations":[{"start":{"line":202,"column":8},"end":{"line":202,"column":9}},{"start":{"line":202,"column":13},"end":{"line":202,"column":15}}]},"17":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":4},"end":{"line":203,"column":4}},{"start":{"line":203,"column":4},"end":{"line":203,"column":4}}]},"18":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":8},"end":{"line":203,"column":25}},{"start":{"line":203,"column":30},"end":{"line":203,"column":47}},{"start":{"line":203,"column":51},"end":{"line":203,"column":73}}]},"19":{"line":207,"type":"binary-expr","locations":[{"start":{"line":207,"column":13},"end":{"line":207,"column":19}},{"start":{"line":207,"column":23},"end":{"line":207,"column":33}}]},"20":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":4},"end":{"line":208,"column":4}},{"start":{"line":208,"column":4},"end":{"line":208,"column":4}}]},"21":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":4},"end":{"line":228,"column":4}},{"start":{"line":228,"column":4},"end":{"line":228,"column":4}}]},"22":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":4},"end":{"line":233,"column":4}},{"start":{"line":233,"column":4},"end":{"line":233,"column":4}}]},"23":{"line":233,"type":"binary-expr","locations":[{"start":{"line":233,"column":8},"end":{"line":233,"column":25}},{"start":{"line":233,"column":30},"end":{"line":233,"column":56}}]},"24":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":4},"end":{"line":237,"column":4}},{"start":{"line":237,"column":4},"end":{"line":237,"column":4}}]},"25":{"line":237,"type":"binary-expr","locations":[{"start":{"line":237,"column":8},"end":{"line":237,"column":24}},{"start":{"line":237,"column":29},"end":{"line":237,"column":54}}]},"26":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":4},"end":{"line":241,"column":4}},{"start":{"line":241,"column":4},"end":{"line":241,"column":4}}]},"27":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":4},"end":{"line":245,"column":4}},{"start":{"line":245,"column":4},"end":{"line":245,"column":4}}]},"28":{"line":245,"type":"binary-expr","locations":[{"start":{"line":245,"column":8},"end":{"line":245,"column":23}},{"start":{"line":245,"column":28},"end":{"line":245,"column":55}}]},"29":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":4},"end":{"line":249,"column":4}},{"start":{"line":249,"column":4},"end":{"line":249,"column":4}}]},"30":{"line":249,"type":"binary-expr","locations":[{"start":{"line":249,"column":8},"end":{"line":249,"column":13}},{"start":{"line":249,"column":17},"end":{"line":249,"column":30}},{"start":{"line":249,"column":34},"end":{"line":249,"column":61}}]},"31":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":9},"end":{"line":255,"column":9}},{"start":{"line":255,"column":9},"end":{"line":255,"column":9}}]},"32":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":8},"end":{"line":256,"column":8}},{"start":{"line":256,"column":8},"end":{"line":256,"column":8}}]},"33":{"line":256,"type":"binary-expr","locations":[{"start":{"line":256,"column":12},"end":{"line":256,"column":20}},{"start":{"line":256,"column":24},"end":{"line":256,"column":33}}]},"34":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":12},"end":{"line":258,"column":12}},{"start":{"line":258,"column":12},"end":{"line":258,"column":12}}]},"35":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":8},"end":{"line":269,"column":8}},{"start":{"line":269,"column":8},"end":{"line":269,"column":8}}]},"36":{"line":269,"type":"binary-expr","locations":[{"start":{"line":269,"column":12},"end":{"line":269,"column":21}},{"start":{"line":269,"column":25},"end":{"line":269,"column":60}}]},"37":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":8},"end":{"line":274,"column":8}},{"start":{"line":274,"column":8},"end":{"line":274,"column":8}}]},"38":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":4},"end":{"line":291,"column":4}},{"start":{"line":291,"column":4},"end":{"line":291,"column":4}}]},"39":{"line":295,"type":"cond-expr","locations":[{"start":{"line":295,"column":29},"end":{"line":295,"column":57}},{"start":{"line":295,"column":60},"end":{"line":295,"column":62}}]},"40":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":4},"end":{"line":307,"column":4}},{"start":{"line":307,"column":4},"end":{"line":307,"column":4}}]},"41":{"line":321,"type":"cond-expr","locations":[{"start":{"line":321,"column":61},"end":{"line":321,"column":74}},{"start":{"line":321,"column":77},"end":{"line":321,"column":82}}]},"42":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":4},"end":{"line":326,"column":4}},{"start":{"line":326,"column":4},"end":{"line":326,"column":4}}]},"43":{"line":347,"type":"if","locations":[{"start":{"line":347,"column":4},"end":{"line":347,"column":4}},{"start":{"line":347,"column":4},"end":{"line":347,"column":4}}]},"44":{"line":351,"type":"if","locations":[{"start":{"line":351,"column":8},"end":{"line":351,"column":8}},{"start":{"line":351,"column":8},"end":{"line":351,"column":8}}]},"45":{"line":351,"type":"binary-expr","locations":[{"start":{"line":351,"column":12},"end":{"line":351,"column":41}},{"start":{"line":351,"column":45},"end":{"line":351,"column":53}}]},"46":{"line":356,"type":"if","locations":[{"start":{"line":356,"column":13},"end":{"line":356,"column":13}},{"start":{"line":356,"column":13},"end":{"line":356,"column":13}}]},"47":{"line":368,"type":"if","locations":[{"start":{"line":368,"column":8},"end":{"line":368,"column":8}},{"start":{"line":368,"column":8},"end":{"line":368,"column":8}}]},"48":{"line":368,"type":"binary-expr","locations":[{"start":{"line":368,"column":12},"end":{"line":368,"column":20}},{"start":{"line":368,"column":24},"end":{"line":368,"column":44}},{"start":{"line":368,"column":48},"end":{"line":368,"column":56}}]},"49":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":4},"end":{"line":404,"column":4}},{"start":{"line":404,"column":4},"end":{"line":404,"column":4}}]},"50":{"line":408,"type":"cond-expr","locations":[{"start":{"line":408,"column":25},"end":{"line":408,"column":31}},{"start":{"line":408,"column":34},"end":{"line":408,"column":40}}]},"51":{"line":431,"type":"binary-expr","locations":[{"start":{"line":431,"column":12},"end":{"line":431,"column":26}},{"start":{"line":431,"column":30},"end":{"line":431,"column":31}}]},"52":{"line":446,"type":"binary-expr","locations":[{"start":{"line":446,"column":18},"end":{"line":446,"column":30}},{"start":{"line":446,"column":34},"end":{"line":446,"column":36}}]},"53":{"line":460,"type":"if","locations":[{"start":{"line":460,"column":4},"end":{"line":460,"column":4}},{"start":{"line":460,"column":4},"end":{"line":460,"column":4}}]},"54":{"line":467,"type":"if","locations":[{"start":{"line":467,"column":4},"end":{"line":467,"column":4}},{"start":{"line":467,"column":4},"end":{"line":467,"column":4}}]},"55":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":4},"end":{"line":475,"column":4}},{"start":{"line":475,"column":4},"end":{"line":475,"column":4}}]},"56":{"line":479,"type":"if","locations":[{"start":{"line":479,"column":4},"end":{"line":479,"column":4}},{"start":{"line":479,"column":4},"end":{"line":479,"column":4}}]},"57":{"line":504,"type":"if","locations":[{"start":{"line":504,"column":4},"end":{"line":504,"column":4}},{"start":{"line":504,"column":4},"end":{"line":504,"column":4}}]},"58":{"line":531,"type":"if","locations":[{"start":{"line":531,"column":4},"end":{"line":531,"column":4}},{"start":{"line":531,"column":4},"end":{"line":531,"column":4}}]},"59":{"line":556,"type":"cond-expr","locations":[{"start":{"line":556,"column":58},"end":{"line":556,"column":68}},{"start":{"line":556,"column":71},"end":{"line":556,"column":81}}]},"60":{"line":556,"type":"binary-expr","locations":[{"start":{"line":556,"column":15},"end":{"line":556,"column":33}},{"start":{"line":556,"column":37},"end":{"line":556,"column":54}}]},"61":{"line":632,"type":"if","locations":[{"start":{"line":632,"column":12},"end":{"line":632,"column":12}},{"start":{"line":632,"column":12},"end":{"line":632,"column":12}}]},"62":{"line":639,"type":"if","locations":[{"start":{"line":639,"column":12},"end":{"line":639,"column":12}},{"start":{"line":639,"column":12},"end":{"line":639,"column":12}}]},"63":{"line":639,"type":"binary-expr","locations":[{"start":{"line":639,"column":16},"end":{"line":639,"column":65}},{"start":{"line":640,"column":12},"end":{"line":640,"column":43}}]},"64":{"line":657,"type":"if","locations":[{"start":{"line":657,"column":8},"end":{"line":657,"column":8}},{"start":{"line":657,"column":8},"end":{"line":657,"column":8}}]},"65":{"line":658,"type":"if","locations":[{"start":{"line":658,"column":12},"end":{"line":658,"column":12}},{"start":{"line":658,"column":12},"end":{"line":658,"column":12}}]},"66":{"line":661,"type":"binary-expr","locations":[{"start":{"line":661,"column":27},"end":{"line":661,"column":36}},{"start":{"line":661,"column":40},"end":{"line":661,"column":65}}]},"67":{"line":665,"type":"binary-expr","locations":[{"start":{"line":665,"column":23},"end":{"line":667,"column":21}},{"start":{"line":667,"column":25},"end":{"line":667,"column":29}}]},"68":{"line":666,"type":"binary-expr","locations":[{"start":{"line":666,"column":27},"end":{"line":666,"column":36}},{"start":{"line":666,"column":40},"end":{"line":666,"column":61}}]},"69":{"line":683,"type":"if","locations":[{"start":{"line":683,"column":8},"end":{"line":683,"column":8}},{"start":{"line":683,"column":8},"end":{"line":683,"column":8}}]},"70":{"line":687,"type":"if","locations":[{"start":{"line":687,"column":8},"end":{"line":687,"column":8}},{"start":{"line":687,"column":8},"end":{"line":687,"column":8}}]},"71":{"line":689,"type":"binary-expr","locations":[{"start":{"line":689,"column":23},"end":{"line":689,"column":31}},{"start":{"line":689,"column":35},"end":{"line":689,"column":57}}]},"72":{"line":711,"type":"if","locations":[{"start":{"line":711,"column":8},"end":{"line":711,"column":8}},{"start":{"line":711,"column":8},"end":{"line":711,"column":8}}]},"73":{"line":713,"type":"if","locations":[{"start":{"line":713,"column":12},"end":{"line":713,"column":12}},{"start":{"line":713,"column":12},"end":{"line":713,"column":12}}]},"74":{"line":719,"type":"if","locations":[{"start":{"line":719,"column":8},"end":{"line":719,"column":8}},{"start":{"line":719,"column":8},"end":{"line":719,"column":8}}]},"75":{"line":719,"type":"binary-expr","locations":[{"start":{"line":719,"column":12},"end":{"line":719,"column":16}},{"start":{"line":719,"column":20},"end":{"line":719,"column":29}}]},"76":{"line":744,"type":"binary-expr","locations":[{"start":{"line":744,"column":25},"end":{"line":744,"column":32}},{"start":{"line":744,"column":36},"end":{"line":744,"column":38}}]},"77":{"line":757,"type":"if","locations":[{"start":{"line":757,"column":8},"end":{"line":757,"column":8}},{"start":{"line":757,"column":8},"end":{"line":757,"column":8}}]},"78":{"line":758,"type":"binary-expr","locations":[{"start":{"line":758,"column":10},"end":{"line":758,"column":39}},{"start":{"line":759,"column":10},"end":{"line":759,"column":40}},{"start":{"line":760,"column":10},"end":{"line":760,"column":38}},{"start":{"line":761,"column":10},"end":{"line":761,"column":38}}]},"79":{"line":765,"type":"if","locations":[{"start":{"line":765,"column":8},"end":{"line":765,"column":8}},{"start":{"line":765,"column":8},"end":{"line":765,"column":8}}]},"80":{"line":773,"type":"binary-expr","locations":[{"start":{"line":773,"column":76},"end":{"line":773,"column":91}},{"start":{"line":773,"column":95},"end":{"line":773,"column":107}},{"start":{"line":773,"column":111},"end":{"line":773,"column":113}}]},"81":{"line":777,"type":"if","locations":[{"start":{"line":777,"column":12},"end":{"line":777,"column":12}},{"start":{"line":777,"column":12},"end":{"line":777,"column":12}}]},"82":{"line":782,"type":"binary-expr","locations":[{"start":{"line":782,"column":34},"end":{"line":782,"column":58}},{"start":{"line":782,"column":62},"end":{"line":782,"column":95}}]},"83":{"line":784,"type":"if","locations":[{"start":{"line":784,"column":12},"end":{"line":784,"column":12}},{"start":{"line":784,"column":12},"end":{"line":784,"column":12}}]},"84":{"line":787,"type":"binary-expr","locations":[{"start":{"line":787,"column":37},"end":{"line":787,"column":68}},{"start":{"line":787,"column":72},"end":{"line":787,"column":98}},{"start":{"line":787,"column":102},"end":{"line":787,"column":104}}]},"85":{"line":822,"type":"if","locations":[{"start":{"line":822,"column":8},"end":{"line":822,"column":8}},{"start":{"line":822,"column":8},"end":{"line":822,"column":8}}]},"86":{"line":822,"type":"binary-expr","locations":[{"start":{"line":822,"column":11},"end":{"line":822,"column":34}},{"start":{"line":822,"column":36},"end":{"line":822,"column":60}},{"start":{"line":822,"column":62},"end":{"line":822,"column":79}},{"start":{"line":822,"column":81},"end":{"line":822,"column":104}}]},"87":{"line":842,"type":"switch","locations":[{"start":{"line":844,"column":12},"end":{"line":844,"column":31}},{"start":{"line":845,"column":12},"end":{"line":845,"column":32}},{"start":{"line":846,"column":12},"end":{"line":847,"column":73}},{"start":{"line":848,"column":12},"end":{"line":849,"column":102}},{"start":{"line":851,"column":12},"end":{"line":852,"column":66}},{"start":{"line":853,"column":12},"end":{"line":854,"column":26}}]},"88":{"line":852,"type":"cond-expr","locations":[{"start":{"line":852,"column":41},"end":{"line":852,"column":59}},{"start":{"line":852,"column":62},"end":{"line":852,"column":65}}]}},"code":["'use strict';","var support = require('./support');","var utils = require('./utils');","var crc32 = require('./crc32');","var signature = require('./signature');","var defaults = require('./defaults');","var base64 = require('./base64');","var compressions = require('./compressions');","var CompressedObject = require('./compressedObject');","var nodeBuffer = require('./nodeBuffer');","var utf8 = require('./utf8');","var StringWriter = require('./stringWriter');","var Uint8ArrayWriter = require('./uint8ArrayWriter');","","/**"," * Returns the raw data of a ZipObject, decompress the content if necessary."," * @param {ZipObject} file the file to use."," * @return {String|ArrayBuffer|Uint8Array|Buffer} the data."," */","var getRawData = function(file) {","    if (file._data instanceof CompressedObject) {","        file._data = file._data.getContent();","        file.options.binary = true;","        file.options.base64 = false;","","        if (utils.getTypeOf(file._data) === \"uint8array\") {","            var copy = file._data;","            // when reading an arraybuffer, the CompressedObject mechanism will keep it and subarray() a Uint8Array.","            // if we request a file in the same format, we might get the same Uint8Array or its ArrayBuffer (the original zip file).","            file._data = new Uint8Array(copy.length);","            // with an empty Uint8Array, Opera fails with a \"Offset larger than array size\"","            if (copy.length !== 0) {","                file._data.set(copy, 0);","            }","        }","    }","    return file._data;","};","","/**"," * Returns the data of a ZipObject in a binary form. If the content is an unicode string, encode it."," * @param {ZipObject} file the file to use."," * @return {String|ArrayBuffer|Uint8Array|Buffer} the data."," */","var getBinaryData = function(file) {","    var result = getRawData(file),","        type = utils.getTypeOf(result);","    if (type === \"string\") {","        if (!file.options.binary) {","            // unicode text !","            // unicode string => binary string is a painful process, check if we can avoid it.","            if (support.nodebuffer) {","                return nodeBuffer(result, \"utf-8\");","            }","        }","        return file.asBinary();","    }","    return result;","};","","/**"," * Transform this._data into a string."," * @param {function} filter a function String -> String, applied if not null on the result."," * @return {String} the string representing this._data."," */","var dataToString = function(asUTF8) {","    var result = getRawData(this);","    if (result === null || typeof result === \"undefined\") {","        return \"\";","    }","    // if the data is a base64 string, we decode it before checking the encoding !","    if (this.options.base64) {","        result = base64.decode(result);","    }","    if (asUTF8 && this.options.binary) {","        // JSZip.prototype.utf8decode supports arrays as input","        // skip to array => string step, utf8decode will do it.","        result = out.utf8decode(result);","    }","    else {","        // no utf8 transformation, do the array => string step.","        result = utils.transformTo(\"string\", result);","    }","","    if (!asUTF8 && !this.options.binary) {","        result = utils.transformTo(\"string\", out.utf8encode(result));","    }","    return result;","};","/**"," * A simple object representing a file in the zip file."," * @constructor"," * @param {string} name the name of the file"," * @param {String|ArrayBuffer|Uint8Array|Buffer} data the data"," * @param {Object} options the options of the file"," */","var ZipObject = function(name, data, options) {","    this.name = name;","    this.dir = options.dir;","    this.date = options.date;","    this.comment = options.comment;","    this.unixPermissions = options.unixPermissions;","    this.dosPermissions = options.dosPermissions;","","    this._data = data;","    this.options = options;","","    /*","     * This object contains initial values for dir and date.","     * With them, we can check if the user changed the deprecated metadata in","     * `ZipObject#options` or not.","     */","    this._initialMetadata = {","      dir : options.dir,","      date : options.date","    };","};","","ZipObject.prototype = {","    /**","     * Return the content as UTF8 string.","     * @return {string} the UTF8 string.","     */","    asText: function() {","        return dataToString.call(this, true);","    },","    /**","     * Returns the binary content.","     * @return {string} the content as binary.","     */","    asBinary: function() {","        return dataToString.call(this, false);","    },","    /**","     * Returns the content as a nodejs Buffer.","     * @return {Buffer} the content as a Buffer.","     */","    asNodeBuffer: function() {","        var result = getBinaryData(this);","        return utils.transformTo(\"nodebuffer\", result);","    },","    /**","     * Returns the content as an Uint8Array.","     * @return {Uint8Array} the content as an Uint8Array.","     */","    asUint8Array: function() {","        var result = getBinaryData(this);","        return utils.transformTo(\"uint8array\", result);","    },","    /**","     * Returns the content as an ArrayBuffer.","     * @return {ArrayBuffer} the content as an ArrayBufer.","     */","    asArrayBuffer: function() {","        return this.asUint8Array().buffer;","    }","};","","/**"," * Transform an integer into a string in hexadecimal."," * @private"," * @param {number} dec the number to convert."," * @param {number} bytes the number of bytes to generate."," * @returns {string} the result."," */","var decToHex = function(dec, bytes) {","    var hex = \"\",","        i;","    for (i = 0; i < bytes; i++) {","        hex += String.fromCharCode(dec & 0xff);","        dec = dec >>> 8;","    }","    return hex;","};","","/**"," * Merge the objects passed as parameters into a new one."," * @private"," * @param {...Object} var_args All objects to merge."," * @return {Object} a new object with the data of the others."," */","var extend = function() {","    var result = {}, i, attr;","    for (i = 0; i < arguments.length; i++) { // arguments is not enumerable in some browsers","        for (attr in arguments[i]) {","            if (arguments[i].hasOwnProperty(attr) && typeof result[attr] === \"undefined\") {","                result[attr] = arguments[i][attr];","            }","        }","    }","    return result;","};","","/**"," * Transforms the (incomplete) options from the user into the complete"," * set of options to create a file."," * @private"," * @param {Object} o the options from the user."," * @return {Object} the complete set of options."," */","var prepareFileAttrs = function(o) {","    o = o || {};","    if (o.base64 === true && (o.binary === null || o.binary === undefined)) {","        o.binary = true;","    }","    o = extend(o, defaults);","    o.date = o.date || new Date();","    if (o.compression !== null) o.compression = o.compression.toUpperCase();","","    return o;","};","","/**"," * Add a file in the current folder."," * @private"," * @param {string} name the name of the file"," * @param {String|ArrayBuffer|Uint8Array|Buffer} data the data of the file"," * @param {Object} o the options of the file"," * @return {Object} the new file."," */","var fileAdd = function(name, data, o) {","    // be sure sub folders exist","    var dataType = utils.getTypeOf(data),","        parent;","","    o = prepareFileAttrs(o);","","    if (typeof o.unixPermissions === \"string\") {","        o.unixPermissions = parseInt(o.unixPermissions, 8);","    }","","    // UNX_IFDIR  0040000 see zipinfo.c","    if (o.unixPermissions && (o.unixPermissions & 0x4000)) {","        o.dir = true;","    }","    // Bit 4    Directory","    if (o.dosPermissions && (o.dosPermissions & 0x0010)) {","        o.dir = true;","    }","","    if (o.dir) {","        name = forceTrailingSlash(name);","    }","","    if (o.createFolders && (parent = parentFolder(name))) {","        folderAdd.call(this, parent, true);","    }","","    if (o.dir || data === null || typeof data === \"undefined\") {","        o.base64 = false;","        o.binary = false;","        data = null;","        dataType = null;","    }","    else if (dataType === \"string\") {","        if (o.binary && !o.base64) {","            // optimizedBinaryString == true means that the file has already been filtered with a 0xFF mask","            if (o.optimizedBinaryString !== true) {","                // this is a string, not in a base64 format.","                // Be sure that this is a correct \"binary string\"","                data = utils.string2binary(data);","            }","        }","    }","    else { // arraybuffer, uint8array, ...","        o.base64 = false;","        o.binary = true;","","        if (!dataType && !(data instanceof CompressedObject)) {","            throw new Error(\"The data of '\" + name + \"' is in an unsupported format !\");","        }","","        // special case : it's way easier to work with Uint8Array than with ArrayBuffer","        if (dataType === \"arraybuffer\") {","            data = utils.transformTo(\"uint8array\", data);","        }","    }","","    var object = new ZipObject(name, data, o);","    this.files[name] = object;","    return object;","};","","/**"," * Find the parent folder of the path."," * @private"," * @param {string} path the path to use"," * @return {string} the parent folder, or \"\""," */","var parentFolder = function (path) {","    if (path.slice(-1) == '/') {","        path = path.substring(0, path.length - 1);","    }","    var lastSlash = path.lastIndexOf('/');","    return (lastSlash > 0) ? path.substring(0, lastSlash) : \"\";","};","","","/**"," * Returns the path with a slash at the end."," * @private"," * @param {String} path the path to check."," * @return {String} the path with a trailing slash."," */","var forceTrailingSlash = function(path) {","    // Check the name ends with a /","    if (path.slice(-1) != \"/\") {","        path += \"/\"; // IE doesn't like substr(-1)","    }","    return path;","};","/**"," * Add a (sub) folder in the current folder."," * @private"," * @param {string} name the folder's name"," * @param {boolean=} [createFolders] If true, automatically create sub"," *  folders. Defaults to false."," * @return {Object} the new folder."," */","var folderAdd = function(name, createFolders) {","    createFolders = (typeof createFolders !== 'undefined') ? createFolders : false;","","    name = forceTrailingSlash(name);","","    // Does this folder already exist?","    if (!this.files[name]) {","        fileAdd.call(this, name, null, {","            dir: true,","            createFolders: createFolders","        });","    }","    return this.files[name];","};","","/**"," * Generate a JSZip.CompressedObject for a given zipOject."," * @param {ZipObject} file the object to read."," * @param {JSZip.compression} compression the compression to use."," * @param {Object} compressionOptions the options to use when compressing."," * @return {JSZip.CompressedObject} the compressed result."," */","var generateCompressedObjectFrom = function(file, compression, compressionOptions) {","    var result = new CompressedObject(),","        content;","","    // the data has not been decompressed, we might reuse things !","    if (file._data instanceof CompressedObject) {","        result.uncompressedSize = file._data.uncompressedSize;","        result.crc32 = file._data.crc32;","","        if (result.uncompressedSize === 0 || file.dir) {","            compression = compressions['STORE'];","            result.compressedContent = \"\";","            result.crc32 = 0;","        }","        else if (file._data.compressionMethod === compression.magic) {","            result.compressedContent = file._data.getCompressedContent();","        }","        else {","            content = file._data.getContent();","            // need to decompress / recompress","            result.compressedContent = compression.compress(utils.transformTo(compression.compressInputType, content), compressionOptions);","        }","    }","    else {","        // have uncompressed data","        content = getBinaryData(file);","        if (!content || content.length === 0 || file.dir) {","            compression = compressions['STORE'];","            content = \"\";","        }","        result.uncompressedSize = content.length;","        result.crc32 = crc32(content);","        result.compressedContent = compression.compress(utils.transformTo(compression.compressInputType, content), compressionOptions);","    }","","    result.compressedSize = result.compressedContent.length;","    result.compressionMethod = compression.magic;","","    return result;","};","","","","","/**"," * Generate the UNIX part of the external file attributes."," * @param {Object} unixPermissions the unix permissions or null."," * @param {Boolean} isDir true if the entry is a directory, false otherwise."," * @return {Number} a 32 bit integer."," *"," * adapted from http://unix.stackexchange.com/questions/14705/the-zip-formats-external-file-attribute :"," *"," * TTTTsstrwxrwxrwx0000000000ADVSHR"," * ^^^^____________________________ file type, see zipinfo.c (UNX_*)"," *     ^^^_________________________ setuid, setgid, sticky"," *        ^^^^^^^^^________________ permissions"," *                 ^^^^^^^^^^______ not used ?"," *                           ^^^^^^ DOS attribute bits : Archive, Directory, Volume label, System file, Hidden, Read only"," */","var generateUnixExternalFileAttr = function (unixPermissions, isDir) {","","    var result = unixPermissions;","    if (!unixPermissions) {","        // I can't use octal values in strict mode, hence the hexa.","        //  040775 => 0x41fd","        // 0100664 => 0x81b4","        result = isDir ? 0x41fd : 0x81b4;","    }","","    return (result & 0xFFFF) << 16;","};","","/**"," * Generate the DOS part of the external file attributes."," * @param {Object} dosPermissions the dos permissions or null."," * @param {Boolean} isDir true if the entry is a directory, false otherwise."," * @return {Number} a 32 bit integer."," *"," * Bit 0     Read-Only"," * Bit 1     Hidden"," * Bit 2     System"," * Bit 3     Volume Label"," * Bit 4     Directory"," * Bit 5     Archive"," */","var generateDosExternalFileAttr = function (dosPermissions, isDir) {","","    // the dir flag is already set for compatibility","","    return (dosPermissions || 0)  & 0x3F;","};","","/**"," * Generate the various parts used in the construction of the final zip file."," * @param {string} name the file name."," * @param {ZipObject} file the file content."," * @param {JSZip.CompressedObject} compressedObject the compressed object."," * @param {number} offset the current offset from the start of the zip file."," * @param {String} platform let's pretend we are this platform (change platform dependents fields)"," * @return {object} the zip parts."," */","var generateZipParts = function(name, file, compressedObject, offset, platform) {","    var data = compressedObject.compressedContent,","        utfEncodedFileName = utils.transformTo(\"string\", utf8.utf8encode(file.name)),","        comment = file.comment || \"\",","        utfEncodedComment = utils.transformTo(\"string\", utf8.utf8encode(comment)),","        useUTF8ForFileName = utfEncodedFileName.length !== file.name.length,","        useUTF8ForComment = utfEncodedComment.length !== comment.length,","        o = file.options,","        dosTime,","        dosDate,","        extraFields = \"\",","        unicodePathExtraField = \"\",","        unicodeCommentExtraField = \"\",","        dir, date;","","","    // handle the deprecated options.dir","    if (file._initialMetadata.dir !== file.dir) {","        dir = file.dir;","    } else {","        dir = o.dir;","    }","","    // handle the deprecated options.date","    if(file._initialMetadata.date !== file.date) {","        date = file.date;","    } else {","        date = o.date;","    }","","    var extFileAttr = 0;","    var versionMadeBy = 0;","    if (dir) {","        // dos or unix, we set the dos dir flag","        extFileAttr |= 0x00010;","    }","    if(platform === \"UNIX\") {","        versionMadeBy = 0x031E; // UNIX, version 3.0","        extFileAttr |= generateUnixExternalFileAttr(file.unixPermissions, dir);","    } else { // DOS or other, fallback to DOS","        versionMadeBy = 0x0014; // DOS, version 2.0","        extFileAttr |= generateDosExternalFileAttr(file.dosPermissions, dir);","    }","","    // date","    // @see http://www.delorie.com/djgpp/doc/rbinter/it/52/13.html","    // @see http://www.delorie.com/djgpp/doc/rbinter/it/65/16.html","    // @see http://www.delorie.com/djgpp/doc/rbinter/it/66/16.html","","    dosTime = date.getHours();","    dosTime = dosTime << 6;","    dosTime = dosTime | date.getMinutes();","    dosTime = dosTime << 5;","    dosTime = dosTime | date.getSeconds() / 2;","","    dosDate = date.getFullYear() - 1980;","    dosDate = dosDate << 4;","    dosDate = dosDate | (date.getMonth() + 1);","    dosDate = dosDate << 5;","    dosDate = dosDate | date.getDate();","","    if (useUTF8ForFileName) {","        // set the unicode path extra field. unzip needs at least one extra","        // field to correctly handle unicode path, so using the path is as good","        // as any other information. This could improve the situation with","        // other archive managers too.","        // This field is usually used without the utf8 flag, with a non","        // unicode path in the header (winrar, winzip). This helps (a bit)","        // with the messy Windows' default compressed folders feature but","        // breaks on p7zip which doesn't seek the unicode path extra field.","        // So for now, UTF-8 everywhere !","        unicodePathExtraField =","            // Version","            decToHex(1, 1) +","            // NameCRC32","            decToHex(crc32(utfEncodedFileName), 4) +","            // UnicodeName","            utfEncodedFileName;","","        extraFields +=","            // Info-ZIP Unicode Path Extra Field","            \"\\x75\\x70\" +","            // size","            decToHex(unicodePathExtraField.length, 2) +","            // content","            unicodePathExtraField;","    }","","    if(useUTF8ForComment) {","","        unicodeCommentExtraField =","            // Version","            decToHex(1, 1) +","            // CommentCRC32","            decToHex(this.crc32(utfEncodedComment), 4) +","            // UnicodeName","            utfEncodedComment;","","        extraFields +=","            // Info-ZIP Unicode Path Extra Field","            \"\\x75\\x63\" +","            // size","            decToHex(unicodeCommentExtraField.length, 2) +","            // content","            unicodeCommentExtraField;","    }","","    var header = \"\";","","    // version needed to extract","    header += \"\\x0A\\x00\";","    // general purpose bit flag","    // set bit 11 if utf8","    header += (useUTF8ForFileName || useUTF8ForComment) ? \"\\x00\\x08\" : \"\\x00\\x00\";","    // compression method","    header += compressedObject.compressionMethod;","    // last mod file time","    header += decToHex(dosTime, 2);","    // last mod file date","    header += decToHex(dosDate, 2);","    // crc-32","    header += decToHex(compressedObject.crc32, 4);","    // compressed size","    header += decToHex(compressedObject.compressedSize, 4);","    // uncompressed size","    header += decToHex(compressedObject.uncompressedSize, 4);","    // file name length","    header += decToHex(utfEncodedFileName.length, 2);","    // extra field length","    header += decToHex(extraFields.length, 2);","","","    var fileRecord = signature.LOCAL_FILE_HEADER + header + utfEncodedFileName + extraFields;","","    var dirRecord = signature.CENTRAL_FILE_HEADER +","    // version made by (00: DOS)","    decToHex(versionMadeBy, 2) +","    // file header (common to file and central directory)","    header +","    // file comment length","    decToHex(utfEncodedComment.length, 2) +","    // disk number start","    \"\\x00\\x00\" +","    // internal file attributes TODO","    \"\\x00\\x00\" +","    // external file attributes","    decToHex(extFileAttr, 4) +","    // relative offset of local header","    decToHex(offset, 4) +","    // file name","    utfEncodedFileName +","    // extra field","    extraFields +","    // file comment","    utfEncodedComment;","","    return {","        fileRecord: fileRecord,","        dirRecord: dirRecord,","        compressedObject: compressedObject","    };","};","","","// return the actual prototype of JSZip","var out = {","    /**","     * Read an existing zip and merge the data in the current JSZip object.","     * The implementation is in jszip-load.js, don't forget to include it.","     * @param {String|ArrayBuffer|Uint8Array|Buffer} stream  The stream to load","     * @param {Object} options Options for loading the stream.","     *  options.base64 : is the stream in base64 ? default : false","     * @return {JSZip} the current JSZip object","     */","    load: function(stream, options) {","        throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\");","    },","","    /**","     * Filter nested files/folders with the specified function.","     * @param {Function} search the predicate to use :","     * function (relativePath, file) {...}","     * It takes 2 arguments : the relative path and the file.","     * @return {Array} An array of matching elements.","     */","    filter: function(search) {","        var result = [],","            filename, relativePath, file, fileClone;","        for (filename in this.files) {","            if (!this.files.hasOwnProperty(filename)) {","                continue;","            }","            file = this.files[filename];","            // return a new object, don't let the user mess with our internal objects :)","            fileClone = new ZipObject(file.name, file._data, extend(file.options));","            relativePath = filename.slice(this.root.length, filename.length);","            if (filename.slice(0, this.root.length) === this.root && // the file is in the current root","            search(relativePath, fileClone)) { // and the file matches the function","                result.push(fileClone);","            }","        }","        return result;","    },","","    /**","     * Add a file to the zip file, or search a file.","     * @param   {string|RegExp} name The name of the file to add (if data is defined),","     * the name of the file to find (if no data) or a regex to match files.","     * @param   {String|ArrayBuffer|Uint8Array|Buffer} data  The file data, either raw or base64 encoded","     * @param   {Object} o     File options","     * @return  {JSZip|Object|Array} this JSZip object (when adding a file),","     * a file (when searching by string) or an array of files (when searching by regex).","     */","    file: function(name, data, o) {","        if (arguments.length === 1) {","            if (utils.isRegExp(name)) {","                var regexp = name;","                return this.filter(function(relativePath, file) {","                    return !file.dir && regexp.test(relativePath);","                });","            }","            else { // text","                return this.filter(function(relativePath, file) {","                    return !file.dir && relativePath === name;","                })[0] || null;","            }","        }","        else { // more than one argument : we have data !","            name = this.root + name;","            fileAdd.call(this, name, data, o);","        }","        return this;","    },","","    /**","     * Add a directory to the zip file, or search.","     * @param   {String|RegExp} arg The name of the directory to add, or a regex to search folders.","     * @return  {JSZip} an object with the new directory as the root, or an array containing matching folders.","     */","    folder: function(arg) {","        if (!arg) {","            return this;","        }","","        if (utils.isRegExp(arg)) {","            return this.filter(function(relativePath, file) {","                return file.dir && arg.test(relativePath);","            });","        }","","        // else, name is a new folder","        var name = this.root + arg;","        var newFolder = folderAdd.call(this, name);","","        // Allow chaining by returning a new object with this folder as the root","        var ret = this.clone();","        ret.root = newFolder.name;","        return ret;","    },","","    /**","     * Delete a file, or a directory and all sub-files, from the zip","     * @param {string} name the name of the file to delete","     * @return {JSZip} this JSZip object","     */","    remove: function(name) {","        name = this.root + name;","        var file = this.files[name];","        if (!file) {","            // Look for any folders","            if (name.slice(-1) != \"/\") {","                name += \"/\";","            }","            file = this.files[name];","        }","","        if (file && !file.dir) {","            // file","            delete this.files[name];","        } else {","            // maybe a folder, delete recursively","            var kids = this.filter(function(relativePath, file) {","                return file.name.slice(0, name.length) === name;","            });","            for (var i = 0; i < kids.length; i++) {","                delete this.files[kids[i].name];","            }","        }","","        return this;","    },","","    /**","     * Generate the complete zip file","     * @param {Object} options the options to generate the zip file :","     * - base64, (deprecated, use type instead) true to generate base64.","     * - compression, \"STORE\" by default.","     * - type, \"base64\" by default. Values are : string, base64, uint8array, arraybuffer, blob.","     * @return {String|Uint8Array|ArrayBuffer|Buffer|Blob} the zip file","     */","    generate: function(options) {","        options = extend(options || {}, {","            base64: true,","            compression: \"STORE\",","            compressionOptions : null,","            type: \"base64\",","            platform: \"DOS\",","            comment: null,","            mimeType: 'application/zip'","        });","","        utils.checkSupport(options.type);","","        // accept nodejs `process.platform`","        if(","          options.platform === 'darwin' ||","          options.platform === 'freebsd' ||","          options.platform === 'linux' ||","          options.platform === 'sunos'","        ) {","          options.platform = \"UNIX\";","        }","        if (options.platform === 'win32') {","          options.platform = \"DOS\";","        }","","        var zipData = [],","            localDirLength = 0,","            centralDirLength = 0,","            writer, i,","            utfEncodedComment = utils.transformTo(\"string\", this.utf8encode(options.comment || this.comment || \"\"));","","        // first, generate all the zip parts.","        for (var name in this.files) {","            if (!this.files.hasOwnProperty(name)) {","                continue;","            }","            var file = this.files[name];","","            var compressionName = file.options.compression || options.compression.toUpperCase();","            var compression = compressions[compressionName];","            if (!compression) {","                throw new Error(compressionName + \" is not a valid compression method !\");","            }","            var compressionOptions = file.options.compressionOptions || options.compressionOptions || {};","","            var compressedObject = generateCompressedObjectFrom.call(this, file, compression, compressionOptions);","","            var zipPart = generateZipParts.call(this, name, file, compressedObject, localDirLength, options.platform);","            localDirLength += zipPart.fileRecord.length + compressedObject.compressedSize;","            centralDirLength += zipPart.dirRecord.length;","            zipData.push(zipPart);","        }","","        var dirEnd = \"\";","","        // end of central dir signature","        dirEnd = signature.CENTRAL_DIRECTORY_END +","        // number of this disk","        \"\\x00\\x00\" +","        // number of the disk with the start of the central directory","        \"\\x00\\x00\" +","        // total number of entries in the central directory on this disk","        decToHex(zipData.length, 2) +","        // total number of entries in the central directory","        decToHex(zipData.length, 2) +","        // size of the central directory   4 bytes","        decToHex(centralDirLength, 4) +","        // offset of start of central directory with respect to the starting disk number","        decToHex(localDirLength, 4) +","        // .ZIP file comment length","        decToHex(utfEncodedComment.length, 2) +","        // .ZIP file comment","        utfEncodedComment;","","","        // we have all the parts (and the total length)","        // time to create a writer !","        var typeName = options.type.toLowerCase();","        if(typeName===\"uint8array\"||typeName===\"arraybuffer\"||typeName===\"blob\"||typeName===\"nodebuffer\") {","            writer = new Uint8ArrayWriter(localDirLength + centralDirLength + dirEnd.length);","        }else{","            writer = new StringWriter(localDirLength + centralDirLength + dirEnd.length);","        }","","        for (i = 0; i < zipData.length; i++) {","            writer.append(zipData[i].fileRecord);","            writer.append(zipData[i].compressedObject.compressedContent);","        }","        for (i = 0; i < zipData.length; i++) {","            writer.append(zipData[i].dirRecord);","        }","","        writer.append(dirEnd);","","        var zip = writer.finalize();","","","","        switch(options.type.toLowerCase()) {","            // case \"zip is an Uint8Array\"","            case \"uint8array\" :","            case \"arraybuffer\" :","            case \"nodebuffer\" :","               return utils.transformTo(options.type.toLowerCase(), zip);","            case \"blob\" :","               return utils.arrayBuffer2Blob(utils.transformTo(\"arraybuffer\", zip), options.mimeType);","            // case \"zip is a string\"","            case \"base64\" :","               return (options.base64) ? base64.encode(zip) : zip;","            default : // case \"string\" :","               return zip;","         }","","    },","","    /**","     * @deprecated","     * This method will be removed in a future version without replacement.","     */","    crc32: function (input, crc) {","        return crc32(input, crc);","    },","","    /**","     * @deprecated","     * This method will be removed in a future version without replacement.","     */","    utf8encode: function (string) {","        return utils.transformTo(\"string\", utf8.utf8encode(string));","    },","","    /**","     * @deprecated","     * This method will be removed in a future version without replacement.","     */","    utf8decode: function (input) {","        return utf8.utf8decode(input);","    }","};","module.exports = out;",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"20":1,"21":0,"22":0,"23":0,"24":0,"26":0,"27":0,"30":0,"32":0,"33":0,"37":0,"45":1,"46":0,"48":0,"49":0,"52":0,"53":0,"56":0,"58":0,"66":1,"67":0,"68":0,"69":0,"72":0,"73":0,"75":0,"78":0,"82":0,"85":0,"86":0,"88":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"105":0,"106":0,"113":0,"119":1,"125":0,"132":0,"139":0,"140":0,"147":0,"148":0,"155":0,"166":1,"167":0,"169":0,"170":0,"171":0,"173":0,"182":1,"183":0,"184":0,"185":0,"186":0,"187":0,"191":0,"201":1,"202":0,"203":0,"204":0,"206":0,"207":0,"208":0,"210":0,"221":1,"223":0,"226":0,"228":0,"229":0,"233":0,"234":0,"237":0,"238":0,"241":0,"242":0,"245":0,"246":0,"249":0,"250":0,"251":0,"252":0,"253":0,"255":0,"256":0,"258":0,"261":0,"266":0,"267":0,"269":0,"270":0,"274":0,"275":0,"279":0,"280":0,"281":0,"290":1,"291":0,"292":0,"294":0,"295":0,"305":1,"307":0,"308":0,"310":0,"320":1,"321":0,"323":0,"326":0,"327":0,"332":0,"342":1,"343":0,"347":0,"348":0,"349":0,"351":0,"352":0,"353":0,"354":0,"356":0,"357":0,"360":0,"362":0,"367":0,"368":0,"369":0,"370":0,"372":0,"373":0,"374":0,"377":0,"378":0,"380":0,"401":1,"403":0,"404":0,"408":0,"411":0,"427":1,"431":0,"443":1,"444":0,"460":0,"461":0,"463":0,"467":0,"468":0,"470":0,"473":0,"474":0,"475":0,"477":0,"479":0,"480":0,"481":0,"483":0,"484":0,"492":0,"493":0,"494":0,"495":0,"496":0,"498":0,"499":0,"500":0,"501":0,"502":0,"504":0,"514":0,"522":0,"531":0,"533":0,"541":0,"550":0,"553":0,"556":0,"558":0,"560":0,"562":0,"564":0,"566":0,"568":0,"570":0,"572":0,"575":0,"577":0,"599":0,"608":1,"618":0,"629":0,"631":0,"632":0,"633":0,"635":0,"637":0,"638":0,"639":0,"641":0,"644":0,"657":0,"658":0,"659":0,"660":0,"661":0,"665":0,"666":0,"671":0,"672":0,"674":0,"683":0,"684":0,"687":0,"688":0,"689":0,"694":0,"695":0,"698":0,"699":0,"700":0,"709":0,"710":0,"711":0,"713":0,"714":0,"716":0,"719":0,"721":0,"724":0,"725":0,"727":0,"728":0,"732":0,"744":0,"754":0,"757":0,"763":0,"765":0,"766":0,"769":0,"776":0,"777":0,"778":0,"780":0,"782":0,"783":0,"784":0,"785":0,"787":0,"789":0,"791":0,"792":0,"793":0,"794":0,"797":0,"800":0,"821":0,"822":0,"823":0,"825":0,"828":0,"829":0,"830":0,"832":0,"833":0,"836":0,"838":0,"842":0,"847":0,"849":0,"852":0,"854":0,"864":0,"872":0,"880":0,"883":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/support.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/support.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":1},"b":{"1":[1,1],"2":[0,1],"3":[1,0,0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":22}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":21}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":22}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":94}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":51}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":55}},"7":{"start":{"line":13,"column":0},"end":{"line":34,"column":1}},"8":{"start":{"line":14,"column":4},"end":{"line":14,"column":25}},"9":{"start":{"line":17,"column":4},"end":{"line":17,"column":36}},"10":{"start":{"line":18,"column":4},"end":{"line":33,"column":5}},"11":{"start":{"line":19,"column":8},"end":{"line":21,"column":22}},"12":{"start":{"line":24,"column":8},"end":{"line":32,"column":9}},"13":{"start":{"line":25,"column":12},"end":{"line":25,"column":122}},"14":{"start":{"line":26,"column":12},"end":{"line":26,"column":40}},"15":{"start":{"line":27,"column":12},"end":{"line":27,"column":35}},"16":{"start":{"line":28,"column":12},"end":{"line":28,"column":73}},"17":{"start":{"line":31,"column":12},"end":{"line":31,"column":33}}},"branchMap":{"1":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":22},"end":{"line":5,"column":56}},{"start":{"line":5,"column":60},"end":{"line":5,"column":93}}]},"2":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":0},"end":{"line":13,"column":0}},{"start":{"line":13,"column":0},"end":{"line":13,"column":0}}]},"3":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":26},"end":{"line":25,"column":44}},{"start":{"line":25,"column":48},"end":{"line":25,"column":72}},{"start":{"line":25,"column":76},"end":{"line":25,"column":97}},{"start":{"line":25,"column":101},"end":{"line":25,"column":121}}]}},"code":["'use strict';","exports.base64 = true;","exports.array = true;","exports.string = true;","exports.arraybuffer = typeof ArrayBuffer !== \"undefined\" && typeof Uint8Array !== \"undefined\";","// contains true if JSZip can read/generate nodejs Buffer, false otherwise.","// Browserify will provide a Buffer implementation for browsers, which is","// an augmented Uint8Array (i.e., can be used as either Buffer or U8).","exports.nodebuffer = typeof Buffer !== \"undefined\";","// contains true if JSZip can read/generate Uint8Array, false otherwise.","exports.uint8array = typeof Uint8Array !== \"undefined\";","","if (typeof ArrayBuffer === \"undefined\") {","    exports.blob = false;","}","else {","    var buffer = new ArrayBuffer(0);","    try {","        exports.blob = new Blob([buffer], {","            type: \"application/zip\"","        }).size === 0;","    }","    catch (e) {","        try {","            var Builder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;","            var builder = new Builder();","            builder.append(buffer);","            exports.blob = builder.getBlob('application/zip').size === 0;","        }","        catch (e) {","            exports.blob = false;","        }","    }","}",""],"l":{"2":1,"3":1,"4":1,"5":1,"9":1,"11":1,"13":1,"14":0,"17":1,"18":1,"19":1,"24":1,"25":1,"26":0,"27":0,"28":0,"31":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/utils.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":1,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":1,"51":0,"52":0,"53":0,"54":1,"55":1,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":1,"74":0,"75":0,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":1,"102":1,"103":1,"104":0,"105":0,"106":0,"107":0,"108":0,"109":1,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":1,"117":0},"b":{"1":[0,0],"2":[0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":24},"end":{"line":10,"column":38}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":27},"end":{"line":17,"column":54}}},"3":{"name":"identity","line":50,"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":25}}},"4":{"name":"stringToArrayLike","line":60,"loc":{"start":{"line":60,"column":0},"end":{"line":60,"column":39}}},"5":{"name":"arrayLikeToString","line":72,"loc":{"start":{"line":72,"column":0},"end":{"line":72,"column":34}}},"6":{"name":"arrayLikeToArrayLike","line":136,"loc":{"start":{"line":136,"column":0},"end":{"line":136,"column":50}}},"7":{"name":"(anonymous_7)","line":149,"loc":{"start":{"line":149,"column":13},"end":{"line":149,"column":29}}},"8":{"name":"(anonymous_8)","line":152,"loc":{"start":{"line":152,"column":19},"end":{"line":152,"column":35}}},"9":{"name":"(anonymous_9)","line":155,"loc":{"start":{"line":155,"column":18},"end":{"line":155,"column":34}}},"10":{"name":"(anonymous_10)","line":158,"loc":{"start":{"line":158,"column":18},"end":{"line":158,"column":34}}},"11":{"name":"(anonymous_11)","line":167,"loc":{"start":{"line":167,"column":19},"end":{"line":167,"column":35}}},"12":{"name":"(anonymous_12)","line":170,"loc":{"start":{"line":170,"column":18},"end":{"line":170,"column":34}}},"13":{"name":"(anonymous_13)","line":173,"loc":{"start":{"line":173,"column":18},"end":{"line":173,"column":34}}},"14":{"name":"(anonymous_14)","line":180,"loc":{"start":{"line":180,"column":14},"end":{"line":180,"column":30}}},"15":{"name":"(anonymous_15)","line":183,"loc":{"start":{"line":183,"column":13},"end":{"line":183,"column":29}}},"16":{"name":"(anonymous_16)","line":187,"loc":{"start":{"line":187,"column":18},"end":{"line":187,"column":34}}},"17":{"name":"(anonymous_17)","line":190,"loc":{"start":{"line":190,"column":18},"end":{"line":190,"column":34}}},"18":{"name":"(anonymous_18)","line":198,"loc":{"start":{"line":198,"column":13},"end":{"line":198,"column":29}}},"19":{"name":"(anonymous_19)","line":201,"loc":{"start":{"line":201,"column":19},"end":{"line":201,"column":35}}},"20":{"name":"(anonymous_20)","line":205,"loc":{"start":{"line":205,"column":18},"end":{"line":205,"column":34}}},"21":{"name":"(anonymous_21)","line":213,"loc":{"start":{"line":213,"column":13},"end":{"line":213,"column":29}}},"22":{"name":"(anonymous_22)","line":216,"loc":{"start":{"line":216,"column":19},"end":{"line":216,"column":35}}},"23":{"name":"(anonymous_23)","line":219,"loc":{"start":{"line":219,"column":18},"end":{"line":219,"column":34}}},"24":{"name":"(anonymous_24)","line":233,"loc":{"start":{"line":233,"column":22},"end":{"line":233,"column":50}}},"25":{"name":"(anonymous_25)","line":254,"loc":{"start":{"line":254,"column":20},"end":{"line":254,"column":36}}},"26":{"name":"(anonymous_26)","line":277,"loc":{"start":{"line":277,"column":23},"end":{"line":277,"column":38}}},"27":{"name":"(anonymous_27)","line":291,"loc":{"start":{"line":291,"column":17},"end":{"line":291,"column":31}}},"28":{"name":"(anonymous_28)","line":306,"loc":{"start":{"line":306,"column":26},"end":{"line":306,"column":54}}},"29":{"name":"(anonymous_29)","line":323,"loc":{"start":{"line":323,"column":19},"end":{"line":323,"column":37}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":45}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":41}},"4":{"start":{"line":10,"column":0},"end":{"line":16,"column":2}},"5":{"start":{"line":11,"column":4},"end":{"line":11,"column":20}},"6":{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},"7":{"start":{"line":13,"column":8},"end":{"line":13,"column":64}},"8":{"start":{"line":15,"column":4},"end":{"line":15,"column":18}},"9":{"start":{"line":17,"column":0},"end":{"line":44,"column":2}},"10":{"start":{"line":18,"column":4},"end":{"line":18,"column":33}},"11":{"start":{"line":19,"column":1},"end":{"line":19,"column":42}},"12":{"start":{"line":21,"column":4},"end":{"line":41,"column":5}},"13":{"start":{"line":23,"column":8},"end":{"line":25,"column":11}},"14":{"start":{"line":29,"column":8},"end":{"line":40,"column":9}},"15":{"start":{"line":31,"column":12},"end":{"line":31,"column":122}},"16":{"start":{"line":32,"column":12},"end":{"line":32,"column":40}},"17":{"start":{"line":33,"column":12},"end":{"line":33,"column":35}},"18":{"start":{"line":34,"column":12},"end":{"line":34,"column":45}},"19":{"start":{"line":39,"column":12},"end":{"line":39,"column":63}},"20":{"start":{"line":50,"column":0},"end":{"line":52,"column":1}},"21":{"start":{"line":51,"column":4},"end":{"line":51,"column":17}},"22":{"start":{"line":60,"column":0},"end":{"line":65,"column":1}},"23":{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},"24":{"start":{"line":62,"column":8},"end":{"line":62,"column":44}},"25":{"start":{"line":64,"column":4},"end":{"line":64,"column":17}},"26":{"start":{"line":72,"column":0},"end":{"line":125,"column":1}},"27":{"start":{"line":82,"column":4},"end":{"line":82,"column":22}},"28":{"start":{"line":83,"column":4},"end":{"line":87,"column":27}},"29":{"start":{"line":88,"column":6},"end":{"line":99,"column":7}},"30":{"start":{"line":89,"column":9},"end":{"line":96,"column":10}},"31":{"start":{"line":91,"column":15},"end":{"line":91,"column":66}},"32":{"start":{"line":92,"column":15},"end":{"line":92,"column":21}},"33":{"start":{"line":94,"column":15},"end":{"line":94,"column":62}},"34":{"start":{"line":95,"column":15},"end":{"line":95,"column":21}},"35":{"start":{"line":98,"column":9},"end":{"line":98,"column":29}},"36":{"start":{"line":103,"column":6},"end":{"line":109,"column":5}},"37":{"start":{"line":104,"column":9},"end":{"line":104,"column":28}},"38":{"start":{"line":105,"column":9},"end":{"line":107,"column":10}},"39":{"start":{"line":106,"column":12},"end":{"line":106,"column":55}},"40":{"start":{"line":108,"column":4},"end":{"line":108,"column":21}},"41":{"start":{"line":110,"column":4},"end":{"line":123,"column":5}},"42":{"start":{"line":111,"column":8},"end":{"line":122,"column":9}},"43":{"start":{"line":112,"column":12},"end":{"line":117,"column":13}},"44":{"start":{"line":113,"column":16},"end":{"line":113,"column":103}},"45":{"start":{"line":116,"column":16},"end":{"line":116,"column":106}},"46":{"start":{"line":118,"column":12},"end":{"line":118,"column":23}},"47":{"start":{"line":121,"column":12},"end":{"line":121,"column":42}},"48":{"start":{"line":124,"column":4},"end":{"line":124,"column":27}},"49":{"start":{"line":127,"column":0},"end":{"line":127,"column":46}},"50":{"start":{"line":136,"column":0},"end":{"line":141,"column":1}},"51":{"start":{"line":137,"column":4},"end":{"line":139,"column":5}},"52":{"start":{"line":138,"column":8},"end":{"line":138,"column":34}},"53":{"start":{"line":140,"column":4},"end":{"line":140,"column":19}},"54":{"start":{"line":144,"column":0},"end":{"line":144,"column":19}},"55":{"start":{"line":147,"column":0},"end":{"line":161,"column":2}},"56":{"start":{"line":150,"column":8},"end":{"line":150,"column":65}},"57":{"start":{"line":153,"column":8},"end":{"line":153,"column":63}},"58":{"start":{"line":156,"column":8},"end":{"line":156,"column":70}},"59":{"start":{"line":159,"column":8},"end":{"line":159,"column":66}},"60":{"start":{"line":164,"column":0},"end":{"line":176,"column":2}},"61":{"start":{"line":168,"column":8},"end":{"line":168,"column":46}},"62":{"start":{"line":171,"column":8},"end":{"line":171,"column":37}},"63":{"start":{"line":174,"column":8},"end":{"line":174,"column":33}},"64":{"start":{"line":179,"column":0},"end":{"line":193,"column":2}},"65":{"start":{"line":181,"column":8},"end":{"line":181,"column":56}},"66":{"start":{"line":184,"column":8},"end":{"line":184,"column":88}},"67":{"start":{"line":188,"column":8},"end":{"line":188,"column":37}},"68":{"start":{"line":191,"column":8},"end":{"line":191,"column":49}},"69":{"start":{"line":196,"column":0},"end":{"line":208,"column":2}},"70":{"start":{"line":199,"column":8},"end":{"line":199,"column":68}},"71":{"start":{"line":202,"column":8},"end":{"line":202,"column":28}},"72":{"start":{"line":206,"column":8},"end":{"line":206,"column":33}},"73":{"start":{"line":211,"column":0},"end":{"line":223,"column":2}},"74":{"start":{"line":214,"column":8},"end":{"line":214,"column":68}},"75":{"start":{"line":217,"column":8},"end":{"line":217,"column":67}},"76":{"start":{"line":220,"column":8},"end":{"line":220,"column":73}},"77":{"start":{"line":233,"column":0},"end":{"line":246,"column":2}},"78":{"start":{"line":234,"column":4},"end":{"line":238,"column":5}},"79":{"start":{"line":237,"column":8},"end":{"line":237,"column":19}},"80":{"start":{"line":239,"column":4},"end":{"line":241,"column":5}},"81":{"start":{"line":240,"column":8},"end":{"line":240,"column":21}},"82":{"start":{"line":242,"column":4},"end":{"line":242,"column":37}},"83":{"start":{"line":243,"column":4},"end":{"line":243,"column":45}},"84":{"start":{"line":244,"column":4},"end":{"line":244,"column":57}},"85":{"start":{"line":245,"column":4},"end":{"line":245,"column":18}},"86":{"start":{"line":254,"column":0},"end":{"line":270,"column":2}},"87":{"start":{"line":255,"column":4},"end":{"line":257,"column":5}},"88":{"start":{"line":256,"column":8},"end":{"line":256,"column":24}},"89":{"start":{"line":258,"column":4},"end":{"line":260,"column":5}},"90":{"start":{"line":259,"column":8},"end":{"line":259,"column":23}},"91":{"start":{"line":261,"column":4},"end":{"line":263,"column":5}},"92":{"start":{"line":262,"column":8},"end":{"line":262,"column":28}},"93":{"start":{"line":264,"column":4},"end":{"line":266,"column":5}},"94":{"start":{"line":265,"column":8},"end":{"line":265,"column":28}},"95":{"start":{"line":267,"column":4},"end":{"line":269,"column":5}},"96":{"start":{"line":268,"column":8},"end":{"line":268,"column":29}},"97":{"start":{"line":277,"column":0},"end":{"line":282,"column":2}},"98":{"start":{"line":278,"column":4},"end":{"line":278,"column":48}},"99":{"start":{"line":279,"column":4},"end":{"line":281,"column":5}},"100":{"start":{"line":280,"column":8},"end":{"line":280,"column":68}},"101":{"start":{"line":283,"column":0},"end":{"line":283,"column":33}},"102":{"start":{"line":284,"column":0},"end":{"line":284,"column":30}},"103":{"start":{"line":291,"column":0},"end":{"line":299,"column":2}},"104":{"start":{"line":292,"column":4},"end":{"line":293,"column":16}},"105":{"start":{"line":294,"column":4},"end":{"line":297,"column":5}},"106":{"start":{"line":295,"column":8},"end":{"line":295,"column":33}},"107":{"start":{"line":296,"column":8},"end":{"line":296,"column":80}},"108":{"start":{"line":298,"column":4},"end":{"line":298,"column":15}},"109":{"start":{"line":306,"column":0},"end":{"line":316,"column":2}},"110":{"start":{"line":307,"column":4},"end":{"line":314,"column":5}},"111":{"start":{"line":308,"column":8},"end":{"line":310,"column":9}},"112":{"start":{"line":309,"column":12},"end":{"line":309,"column":21}},"113":{"start":{"line":311,"column":8},"end":{"line":313,"column":9}},"114":{"start":{"line":312,"column":12},"end":{"line":312,"column":40}},"115":{"start":{"line":315,"column":4},"end":{"line":315,"column":16}},"116":{"start":{"line":323,"column":0},"end":{"line":325,"column":2}},"117":{"start":{"line":324,"column":4},"end":{"line":324,"column":72}}},"branchMap":{"1":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":12},"end":{"line":19,"column":20}},{"start":{"line":19,"column":24},"end":{"line":19,"column":41}}]},"2":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":26},"end":{"line":31,"column":44}},{"start":{"line":31,"column":48},"end":{"line":31,"column":72}},{"start":{"line":31,"column":76},"end":{"line":31,"column":97}},{"start":{"line":31,"column":101},"end":{"line":31,"column":121}}]},"3":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":92,"column":21}},{"start":{"line":93,"column":12},"end":{"line":95,"column":21}}]},"4":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":6},"end":{"line":103,"column":6}},{"start":{"line":103,"column":6},"end":{"line":103,"column":6}}]},"5":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":11},"end":{"line":110,"column":18}},{"start":{"line":110,"column":22},"end":{"line":110,"column":31}}]},"6":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":12},"end":{"line":112,"column":12}},{"start":{"line":112,"column":12},"end":{"line":112,"column":12}}]},"7":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":16},"end":{"line":112,"column":32}},{"start":{"line":112,"column":36},"end":{"line":112,"column":57}}]},"8":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":4},"end":{"line":234,"column":4}},{"start":{"line":234,"column":4},"end":{"line":234,"column":4}}]},"9":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":4},"end":{"line":239,"column":4}},{"start":{"line":239,"column":4},"end":{"line":239,"column":4}}]},"10":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":4},"end":{"line":255,"column":4}},{"start":{"line":255,"column":4},"end":{"line":255,"column":4}}]},"11":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":4},"end":{"line":258,"column":4}},{"start":{"line":258,"column":4},"end":{"line":258,"column":4}}]},"12":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":4},"end":{"line":261,"column":4}},{"start":{"line":261,"column":4},"end":{"line":261,"column":4}}]},"13":{"line":261,"type":"binary-expr","locations":[{"start":{"line":261,"column":8},"end":{"line":261,"column":26}},{"start":{"line":261,"column":30},"end":{"line":261,"column":52}}]},"14":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":4},"end":{"line":264,"column":4}},{"start":{"line":264,"column":4},"end":{"line":264,"column":4}}]},"15":{"line":264,"type":"binary-expr","locations":[{"start":{"line":264,"column":8},"end":{"line":264,"column":26}},{"start":{"line":264,"column":30},"end":{"line":264,"column":57}}]},"16":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":4},"end":{"line":267,"column":4}},{"start":{"line":267,"column":4},"end":{"line":267,"column":4}}]},"17":{"line":267,"type":"binary-expr","locations":[{"start":{"line":267,"column":8},"end":{"line":267,"column":27}},{"start":{"line":267,"column":31},"end":{"line":267,"column":59}}]},"18":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":4},"end":{"line":279,"column":4}},{"start":{"line":279,"column":4},"end":{"line":279,"column":4}}]},"19":{"line":294,"type":"binary-expr","locations":[{"start":{"line":294,"column":21},"end":{"line":294,"column":24}},{"start":{"line":294,"column":28},"end":{"line":294,"column":30}}]},"20":{"line":296,"type":"cond-expr","locations":[{"start":{"line":296,"column":36},"end":{"line":296,"column":39}},{"start":{"line":296,"column":42},"end":{"line":296,"column":44}}]},"21":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":8},"end":{"line":308,"column":8}},{"start":{"line":308,"column":8},"end":{"line":308,"column":8}}]},"22":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":8},"end":{"line":311,"column":8}},{"start":{"line":311,"column":8},"end":{"line":311,"column":8}}]}},"code":["'use strict';","var support = require('./support');","var compressions = require('./compressions');","var nodeBuffer = require('./nodeBuffer');","/**"," * Convert a string to a \"binary string\" : a string containing only char codes between 0 and 255."," * @param {string} str the string to transform."," * @return {String} the binary string."," */","exports.string2binary = function(str) {","    var result = \"\";","    for (var i = 0; i < str.length; i++) {","        result += String.fromCharCode(str.charCodeAt(i) & 0xff);","    }","    return result;","};","exports.arrayBuffer2Blob = function(buffer, mimeType) {","    exports.checkSupport(\"blob\");","\tmimeType = mimeType || 'application/zip';","","    try {","        // Blob constructor","        return new Blob([buffer], {","            type: mimeType","        });","    }","    catch (e) {","","        try {","            // deprecated, browser only, old way","            var Builder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;","            var builder = new Builder();","            builder.append(buffer);","            return builder.getBlob(mimeType);","        }","        catch (e) {","","            // well, fuck ?!","            throw new Error(\"Bug : can't construct the Blob.\");","        }","    }","","","};","/**"," * The identity function."," * @param {Object} input the input."," * @return {Object} the same input."," */","function identity(input) {","    return input;","}","","/**"," * Fill in an array with a string."," * @param {String} str the string to use."," * @param {Array|ArrayBuffer|Uint8Array|Buffer} array the array to fill in (will be mutated)."," * @return {Array|ArrayBuffer|Uint8Array|Buffer} the updated array."," */","function stringToArrayLike(str, array) {","    for (var i = 0; i < str.length; ++i) {","        array[i] = str.charCodeAt(i) & 0xFF;","    }","    return array;","}","","/**"," * Transform an array-like object to a string."," * @param {Array|ArrayBuffer|Uint8Array|Buffer} array the array to transform."," * @return {String} the result."," */","function arrayLikeToString(array) {","    // Performances notes :","    // --------------------","    // String.fromCharCode.apply(null, array) is the fastest, see","    // see http://jsperf.com/converting-a-uint8array-to-a-string/2","    // but the stack is limited (and we can get huge arrays !).","    //","    // result += String.fromCharCode(array[i]); generate too many strings !","    //","    // This code is inspired by http://jsperf.com/arraybuffer-to-string-apply-performance/2","    var chunk = 65536;","    var result = [],","        len = array.length,","        type = exports.getTypeOf(array),","        k = 0,","        canUseApply = true;","      try {","         switch(type) {","            case \"uint8array\":","               String.fromCharCode.apply(null, new Uint8Array(0));","               break;","            case \"nodebuffer\":","               String.fromCharCode.apply(null, nodeBuffer(0));","               break;","         }","      } catch(e) {","         canUseApply = false;","      }","","      // no apply : slow and painful algorithm","      // default browser on android 4.*","      if (!canUseApply) {","         var resultStr = \"\";","         for(var i = 0; i < array.length;i++) {","            resultStr += String.fromCharCode(array[i]);","         }","    return resultStr;","    }","    while (k < len && chunk > 1) {","        try {","            if (type === \"array\" || type === \"nodebuffer\") {","                result.push(String.fromCharCode.apply(null, array.slice(k, Math.min(k + chunk, len))));","            }","            else {","                result.push(String.fromCharCode.apply(null, array.subarray(k, Math.min(k + chunk, len))));","            }","            k += chunk;","        }","        catch (e) {","            chunk = Math.floor(chunk / 2);","        }","    }","    return result.join(\"\");","}","","exports.applyFromCharCode = arrayLikeToString;","","","/**"," * Copy the data from an array-like to an other array-like."," * @param {Array|ArrayBuffer|Uint8Array|Buffer} arrayFrom the origin array."," * @param {Array|ArrayBuffer|Uint8Array|Buffer} arrayTo the destination array which will be mutated."," * @return {Array|ArrayBuffer|Uint8Array|Buffer} the updated destination array."," */","function arrayLikeToArrayLike(arrayFrom, arrayTo) {","    for (var i = 0; i < arrayFrom.length; i++) {","        arrayTo[i] = arrayFrom[i];","    }","    return arrayTo;","}","","// a matrix containing functions to transform everything into everything.","var transform = {};","","// string to ?","transform[\"string\"] = {","    \"string\": identity,","    \"array\": function(input) {","        return stringToArrayLike(input, new Array(input.length));","    },","    \"arraybuffer\": function(input) {","        return transform[\"string\"][\"uint8array\"](input).buffer;","    },","    \"uint8array\": function(input) {","        return stringToArrayLike(input, new Uint8Array(input.length));","    },","    \"nodebuffer\": function(input) {","        return stringToArrayLike(input, nodeBuffer(input.length));","    }","};","","// array to ?","transform[\"array\"] = {","    \"string\": arrayLikeToString,","    \"array\": identity,","    \"arraybuffer\": function(input) {","        return (new Uint8Array(input)).buffer;","    },","    \"uint8array\": function(input) {","        return new Uint8Array(input);","    },","    \"nodebuffer\": function(input) {","        return nodeBuffer(input);","    }","};","","// arraybuffer to ?","transform[\"arraybuffer\"] = {","    \"string\": function(input) {","        return arrayLikeToString(new Uint8Array(input));","    },","    \"array\": function(input) {","        return arrayLikeToArrayLike(new Uint8Array(input), new Array(input.byteLength));","    },","    \"arraybuffer\": identity,","    \"uint8array\": function(input) {","        return new Uint8Array(input);","    },","    \"nodebuffer\": function(input) {","        return nodeBuffer(new Uint8Array(input));","    }","};","","// uint8array to ?","transform[\"uint8array\"] = {","    \"string\": arrayLikeToString,","    \"array\": function(input) {","        return arrayLikeToArrayLike(input, new Array(input.length));","    },","    \"arraybuffer\": function(input) {","        return input.buffer;","    },","    \"uint8array\": identity,","    \"nodebuffer\": function(input) {","        return nodeBuffer(input);","    }","};","","// nodebuffer to ?","transform[\"nodebuffer\"] = {","    \"string\": arrayLikeToString,","    \"array\": function(input) {","        return arrayLikeToArrayLike(input, new Array(input.length));","    },","    \"arraybuffer\": function(input) {","        return transform[\"nodebuffer\"][\"uint8array\"](input).buffer;","    },","    \"uint8array\": function(input) {","        return arrayLikeToArrayLike(input, new Uint8Array(input.length));","    },","    \"nodebuffer\": identity","};","","/**"," * Transform an input into any type."," * The supported output type are : string, array, uint8array, arraybuffer, nodebuffer."," * If no output type is specified, the unmodified input will be returned."," * @param {String} outputType the output type."," * @param {String|Array|ArrayBuffer|Uint8Array|Buffer} input the input to convert."," * @throws {Error} an Error if the browser doesn't support the requested output type."," */","exports.transformTo = function(outputType, input) {","    if (!input) {","        // undefined, null, etc","        // an empty string won't harm.","        input = \"\";","    }","    if (!outputType) {","        return input;","    }","    exports.checkSupport(outputType);","    var inputType = exports.getTypeOf(input);","    var result = transform[inputType][outputType](input);","    return result;","};","","/**"," * Return the type of the input."," * The type will be in a format valid for JSZip.utils.transformTo : string, array, uint8array, arraybuffer."," * @param {Object} input the input to identify."," * @return {String} the (lowercase) type of the input."," */","exports.getTypeOf = function(input) {","    if (typeof input === \"string\") {","        return \"string\";","    }","    if (Object.prototype.toString.call(input) === \"[object Array]\") {","        return \"array\";","    }","    if (support.nodebuffer && nodeBuffer.test(input)) {","        return \"nodebuffer\";","    }","    if (support.uint8array && input instanceof Uint8Array) {","        return \"uint8array\";","    }","    if (support.arraybuffer && input instanceof ArrayBuffer) {","        return \"arraybuffer\";","    }","};","","/**"," * Throw an exception if the type is not supported."," * @param {String} type the type to check."," * @throws {Error} an Error if the browser doesn't support the requested type."," */","exports.checkSupport = function(type) {","    var supported = support[type.toLowerCase()];","    if (!supported) {","        throw new Error(type + \" is not supported by this browser\");","    }","};","exports.MAX_VALUE_16BITS = 65535;","exports.MAX_VALUE_32BITS = -1; // well, \"\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\" is parsed as -1","","/**"," * Prettify a string read as binary."," * @param {string} str the string to prettify."," * @return {string} a pretty string."," */","exports.pretty = function(str) {","    var res = '',","        code, i;","    for (i = 0; i < (str || \"\").length; i++) {","        code = str.charCodeAt(i);","        res += '\\\\x' + (code < 16 ? \"0\" : \"\") + code.toString(16).toUpperCase();","    }","    return res;","};","","/**"," * Find a compression registered in JSZip."," * @param {string} compressionMethod the method magic to find."," * @return {Object|null} the JSZip compression object, null if none found."," */","exports.findCompression = function(compressionMethod) {","    for (var method in compressions) {","        if (!compressions.hasOwnProperty(method)) {","            continue;","        }","        if (compressions[method].magic === compressionMethod) {","            return compressions[method];","        }","    }","    return null;","};","/**","* Cross-window, cross-Node-context regular expression detection","* @param  {Object}  object Anything","* @return {Boolean}        true if the object is a regular expression,","* false otherwise","*/","exports.isRegExp = function (object) {","    return Object.prototype.toString.call(object) === \"[object RegExp]\";","};","",""],"l":{"2":1,"3":1,"4":1,"10":1,"11":0,"12":0,"13":0,"15":0,"17":1,"18":0,"19":0,"21":0,"23":0,"29":0,"31":0,"32":0,"33":0,"34":0,"39":0,"50":1,"51":0,"60":1,"61":0,"62":0,"64":0,"72":1,"82":0,"83":0,"88":0,"89":0,"91":0,"92":0,"94":0,"95":0,"98":0,"103":0,"104":0,"105":0,"106":0,"108":0,"110":0,"111":0,"112":0,"113":0,"116":0,"118":0,"121":0,"124":0,"127":1,"136":1,"137":0,"138":0,"140":0,"144":1,"147":1,"150":0,"153":0,"156":0,"159":0,"164":1,"168":0,"171":0,"174":0,"179":1,"181":0,"184":0,"188":0,"191":0,"196":1,"199":0,"202":0,"206":0,"211":1,"214":0,"217":0,"220":0,"233":1,"234":0,"237":0,"239":0,"240":0,"242":0,"243":0,"244":0,"245":0,"254":1,"255":0,"256":0,"258":0,"259":0,"261":0,"262":0,"264":0,"265":0,"267":0,"268":0,"277":1,"278":0,"279":0,"280":0,"283":1,"284":1,"291":1,"292":0,"294":0,"295":0,"296":0,"298":0,"306":1,"307":0,"308":0,"309":0,"311":0,"312":0,"315":0,"323":1,"324":0}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/compressions.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/compressions.js","s":{"1":1,"2":0,"3":0,"4":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":14},"end":{"line":4,"column":52}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":16},"end":{"line":7,"column":34}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":12,"column":2}},"2":{"start":{"line":5,"column":8},"end":{"line":5,"column":23}},"3":{"start":{"line":8,"column":8},"end":{"line":8,"column":23}},"4":{"start":{"line":13,"column":0},"end":{"line":13,"column":37}}},"branchMap":{},"code":["'use strict';","exports.STORE = {","    magic: \"\\x00\\x00\",","    compress: function(content, compressionOptions) {","        return content; // no compression","    },","    uncompress: function(content) {","        return content; // no compression","    },","    compressInputType: null,","    uncompressInputType: null","};","exports.DEFLATE = require('./flate');",""],"l":{"2":1,"5":0,"8":0,"13":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/flate.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/flate.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":1,"9":0},"b":{"1":[1,1,1],"2":[1,0],"3":[1,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":19},"end":{"line":9,"column":55}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":22},"end":{"line":14,"column":38}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":137}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":70}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":68}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":27}},"6":{"start":{"line":9,"column":0},"end":{"line":13,"column":2}},"7":{"start":{"line":10,"column":4},"end":{"line":12,"column":7}},"8":{"start":{"line":14,"column":0},"end":{"line":16,"column":2}},"9":{"start":{"line":15,"column":4},"end":{"line":15,"column":34}}},"branchMap":{"1":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":22},"end":{"line":2,"column":55}},{"start":{"line":2,"column":61},"end":{"line":2,"column":95}},{"start":{"line":2,"column":101},"end":{"line":2,"column":135}}]},"2":{"line":5,"type":"cond-expr","locations":[{"start":{"line":5,"column":47},"end":{"line":5,"column":59}},{"start":{"line":5,"column":62},"end":{"line":5,"column":69}}]},"3":{"line":6,"type":"cond-expr","locations":[{"start":{"line":6,"column":45},"end":{"line":6,"column":57}},{"start":{"line":6,"column":60},"end":{"line":6,"column":67}}]},"4":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":16},"end":{"line":11,"column":40}},{"start":{"line":11,"column":44},"end":{"line":11,"column":46}}]}},"code":["'use strict';","var USE_TYPEDARRAY = (typeof Uint8Array !== 'undefined') && (typeof Uint16Array !== 'undefined') && (typeof Uint32Array !== 'undefined');","","var pako = require(\"pako\");","exports.uncompressInputType = USE_TYPEDARRAY ? \"uint8array\" : \"array\";","exports.compressInputType = USE_TYPEDARRAY ? \"uint8array\" : \"array\";","","exports.magic = \"\\x08\\x00\";","exports.compress = function(input, compressionOptions) {","    return pako.deflateRaw(input, {","        level : compressionOptions.level || -1 // default compression","    });","};","exports.uncompress =  function(input) {","    return pako.inflateRaw(input);","};",""],"l":{"2":1,"4":1,"5":1,"6":1,"8":1,"9":1,"10":0,"14":1,"15":0}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":53}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":41}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":41}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":48}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":14}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":42}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":22}}},"branchMap":{},"code":["// Top level file is just a mixin of submodules & constants","'use strict';","","var assign    = require('./lib/utils/common').assign;","","var deflate   = require('./lib/deflate');","var inflate   = require('./lib/inflate');","var constants = require('./lib/zlib/constants');","","var pako = {};","","assign(pako, deflate, inflate, constants);","","module.exports = pako;",""],"l":{"4":1,"6":1,"7":1,"8":1,"10":1,"12":1,"14":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/utils/common.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/utils/common.js","s":{"1":1,"2":1,"3":2,"4":2,"5":4,"6":4,"7":0,"8":4,"9":0,"10":4,"11":37,"12":37,"13":2,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":0,"49":0,"50":0,"51":0,"52":1},"b":{"1":[1,1,1],"2":[0,4],"3":[0,4],"4":[37,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[1,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":17},"end":{"line":9,"column":61}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":20},"end":{"line":31,"column":41}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":12},"end":{"line":40,"column":59}}},"4":{"name":"(anonymous_4)","line":51,"loc":{"start":{"line":51,"column":17},"end":{"line":51,"column":34}}},"5":{"name":"(anonymous_5)","line":74,"loc":{"start":{"line":74,"column":12},"end":{"line":74,"column":59}}},"6":{"name":"(anonymous_6)","line":80,"loc":{"start":{"line":80,"column":17},"end":{"line":80,"column":34}}},"7":{"name":"(anonymous_7)","line":88,"loc":{"start":{"line":88,"column":19},"end":{"line":88,"column":33}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":6,"column":52}},"2":{"start":{"line":9,"column":0},"end":{"line":27,"column":2}},"3":{"start":{"line":10,"column":2},"end":{"line":10,"column":57}},"4":{"start":{"line":11,"column":2},"end":{"line":24,"column":3}},"5":{"start":{"line":12,"column":4},"end":{"line":12,"column":33}},"6":{"start":{"line":13,"column":4},"end":{"line":13,"column":30}},"7":{"start":{"line":13,"column":19},"end":{"line":13,"column":28}},"8":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"9":{"start":{"line":16,"column":6},"end":{"line":16,"column":57}},"10":{"start":{"line":19,"column":4},"end":{"line":23,"column":5}},"11":{"start":{"line":20,"column":6},"end":{"line":22,"column":7}},"12":{"start":{"line":21,"column":8},"end":{"line":21,"column":27}},"13":{"start":{"line":26,"column":2},"end":{"line":26,"column":13}},"14":{"start":{"line":31,"column":0},"end":{"line":36,"column":2}},"15":{"start":{"line":32,"column":2},"end":{"line":32,"column":42}},"16":{"start":{"line":32,"column":29},"end":{"line":32,"column":40}},"17":{"start":{"line":33,"column":2},"end":{"line":33,"column":53}},"18":{"start":{"line":33,"column":22},"end":{"line":33,"column":51}},"19":{"start":{"line":34,"column":2},"end":{"line":34,"column":20}},"20":{"start":{"line":35,"column":2},"end":{"line":35,"column":13}},"21":{"start":{"line":39,"column":0},"end":{"line":71,"column":2}},"22":{"start":{"line":41,"column":4},"end":{"line":44,"column":5}},"23":{"start":{"line":42,"column":6},"end":{"line":42,"column":64}},"24":{"start":{"line":43,"column":6},"end":{"line":43,"column":13}},"25":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"26":{"start":{"line":47,"column":6},"end":{"line":47,"column":46}},"27":{"start":{"line":52,"column":4},"end":{"line":52,"column":38}},"28":{"start":{"line":55,"column":4},"end":{"line":55,"column":12}},"29":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"30":{"start":{"line":57,"column":6},"end":{"line":57,"column":30}},"31":{"start":{"line":61,"column":4},"end":{"line":61,"column":33}},"32":{"start":{"line":62,"column":4},"end":{"line":62,"column":12}},"33":{"start":{"line":63,"column":4},"end":{"line":67,"column":5}},"34":{"start":{"line":64,"column":6},"end":{"line":64,"column":24}},"35":{"start":{"line":65,"column":6},"end":{"line":65,"column":29}},"36":{"start":{"line":66,"column":6},"end":{"line":66,"column":26}},"37":{"start":{"line":69,"column":4},"end":{"line":69,"column":18}},"38":{"start":{"line":73,"column":0},"end":{"line":83,"column":2}},"39":{"start":{"line":75,"column":4},"end":{"line":77,"column":5}},"40":{"start":{"line":76,"column":6},"end":{"line":76,"column":46}},"41":{"start":{"line":81,"column":4},"end":{"line":81,"column":39}},"42":{"start":{"line":88,"column":0},"end":{"line":100,"column":2}},"43":{"start":{"line":89,"column":2},"end":{"line":99,"column":3}},"44":{"start":{"line":90,"column":4},"end":{"line":90,"column":31}},"45":{"start":{"line":91,"column":4},"end":{"line":91,"column":32}},"46":{"start":{"line":92,"column":4},"end":{"line":92,"column":31}},"47":{"start":{"line":93,"column":4},"end":{"line":93,"column":37}},"48":{"start":{"line":95,"column":4},"end":{"line":95,"column":26}},"49":{"start":{"line":96,"column":4},"end":{"line":96,"column":26}},"50":{"start":{"line":97,"column":4},"end":{"line":97,"column":26}},"51":{"start":{"line":98,"column":4},"end":{"line":98,"column":39}},"52":{"start":{"line":102,"column":0},"end":{"line":102,"column":27}}},"branchMap":{"1":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":17},"end":{"line":4,"column":50}},{"start":{"line":5,"column":17},"end":{"line":5,"column":51}},{"start":{"line":6,"column":17},"end":{"line":6,"column":50}}]},"2":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":13,"column":4}},{"start":{"line":13,"column":4},"end":{"line":13,"column":4}}]},"3":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]},"4":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":6}},{"start":{"line":20,"column":6},"end":{"line":20,"column":6}}]},"5":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"6":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"7":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"8":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":8},"end":{"line":41,"column":20}},{"start":{"line":41,"column":24},"end":{"line":41,"column":37}}]},"9":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":2},"end":{"line":89,"column":2}},{"start":{"line":89,"column":2},"end":{"line":89,"column":2}}]}},"code":["'use strict';","","","var TYPED_OK =  (typeof Uint8Array !== 'undefined') &&","                (typeof Uint16Array !== 'undefined') &&","                (typeof Int32Array !== 'undefined');","","","exports.assign = function (obj /*from1, from2, from3, ...*/) {","  var sources = Array.prototype.slice.call(arguments, 1);","  while (sources.length) {","    var source = sources.shift();","    if (!source) { continue; }","","    if (typeof source !== 'object') {","      throw new TypeError(source + 'must be non-object');","    }","","    for (var p in source) {","      if (source.hasOwnProperty(p)) {","        obj[p] = source[p];","      }","    }","  }","","  return obj;","};","","","// reduce buffer size, avoiding mem copy","exports.shrinkBuf = function (buf, size) {","  if (buf.length === size) { return buf; }","  if (buf.subarray) { return buf.subarray(0, size); }","  buf.length = size;","  return buf;","};","","","var fnTyped = {","  arraySet: function (dest, src, src_offs, len, dest_offs) {","    if (src.subarray && dest.subarray) {","      dest.set(src.subarray(src_offs, src_offs+len), dest_offs);","      return;","    }","    // Fallback to ordinary array","    for (var i=0; i<len; i++) {","      dest[dest_offs + i] = src[src_offs + i];","    }","  },","  // Join array of chunks to single array.","  flattenChunks: function(chunks) {","    var i, l, len, pos, chunk, result;","","    // calculate data length","    len = 0;","    for (i=0, l=chunks.length; i<l; i++) {","      len += chunks[i].length;","    }","","    // join chunks","    result = new Uint8Array(len);","    pos = 0;","    for (i=0, l=chunks.length; i<l; i++) {","      chunk = chunks[i];","      result.set(chunk, pos);","      pos += chunk.length;","    }","","    return result;","  }","};","","var fnUntyped = {","  arraySet: function (dest, src, src_offs, len, dest_offs) {","    for (var i=0; i<len; i++) {","      dest[dest_offs + i] = src[src_offs + i];","    }","  },","  // Join array of chunks to single array.","  flattenChunks: function(chunks) {","    return [].concat.apply([], chunks);","  }","};","","","// Enable/Disable typed arrays use, for testing","//","exports.setTyped = function (on) {","  if (on) {","    exports.Buf8  = Uint8Array;","    exports.Buf16 = Uint16Array;","    exports.Buf32 = Int32Array;","    exports.assign(exports, fnTyped);","  } else {","    exports.Buf8  = Array;","    exports.Buf16 = Array;","    exports.Buf32 = Array;","    exports.assign(exports, fnUntyped);","  }","};","","exports.setTyped(TYPED_OK);",""],"l":{"4":1,"9":1,"10":2,"11":2,"12":4,"13":4,"15":4,"16":0,"19":4,"20":37,"21":37,"26":2,"31":1,"32":0,"33":0,"34":0,"35":0,"39":1,"41":0,"42":0,"43":0,"46":0,"47":0,"52":0,"55":0,"56":0,"57":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"69":0,"73":1,"75":0,"76":0,"81":0,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"95":0,"96":0,"97":0,"98":0,"102":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/deflate.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/deflate.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":1,"92":0,"93":0,"94":0,"95":1,"96":1,"97":1,"98":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0,0],"18":[0,0],"19":[0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":119,"loc":{"start":{"line":119,"column":14},"end":{"line":119,"column":32}}},"2":{"name":"(anonymous_2)","line":196,"loc":{"start":{"line":196,"column":25},"end":{"line":196,"column":46}}},"3":{"name":"(anonymous_3)","line":268,"loc":{"start":{"line":268,"column":27},"end":{"line":268,"column":43}}},"4":{"name":"(anonymous_4)","line":283,"loc":{"start":{"line":283,"column":26},"end":{"line":283,"column":43}}},"5":{"name":"deflate","line":331,"loc":{"start":{"line":331,"column":0},"end":{"line":331,"column":33}}},"6":{"name":"deflateRaw","line":351,"loc":{"start":{"line":351,"column":0},"end":{"line":351,"column":36}}},"7":{"name":"gzip","line":366,"loc":{"start":{"line":366,"column":0},"end":{"line":366,"column":30}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":48}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":38}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":41}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":41}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":24}},"8":{"start":{"line":16,"column":0},"end":{"line":16,"column":24}},"9":{"start":{"line":18,"column":0},"end":{"line":18,"column":24}},"10":{"start":{"line":19,"column":0},"end":{"line":19,"column":24}},"11":{"start":{"line":20,"column":0},"end":{"line":20,"column":24}},"12":{"start":{"line":22,"column":0},"end":{"line":22,"column":31}},"13":{"start":{"line":24,"column":0},"end":{"line":24,"column":30}},"14":{"start":{"line":26,"column":0},"end":{"line":26,"column":20}},"15":{"start":{"line":119,"column":0},"end":{"line":165,"column":2}},"16":{"start":{"line":121,"column":2},"end":{"line":129,"column":20}},"17":{"start":{"line":131,"column":2},"end":{"line":131,"column":25}},"18":{"start":{"line":133,"column":2},"end":{"line":139,"column":3}},"19":{"start":{"line":134,"column":4},"end":{"line":134,"column":37}},"20":{"start":{"line":137,"column":7},"end":{"line":139,"column":3}},"21":{"start":{"line":138,"column":4},"end":{"line":138,"column":25}},"22":{"start":{"line":141,"column":2},"end":{"line":141,"column":18}},"23":{"start":{"line":142,"column":2},"end":{"line":142,"column":19}},"24":{"start":{"line":143,"column":2},"end":{"line":143,"column":22}},"25":{"start":{"line":144,"column":2},"end":{"line":144,"column":19}},"26":{"start":{"line":146,"column":2},"end":{"line":146,"column":28}},"27":{"start":{"line":147,"column":2},"end":{"line":147,"column":26}},"28":{"start":{"line":149,"column":2},"end":{"line":156,"column":4}},"29":{"start":{"line":158,"column":2},"end":{"line":160,"column":3}},"30":{"start":{"line":159,"column":4},"end":{"line":159,"column":33}},"31":{"start":{"line":162,"column":2},"end":{"line":164,"column":3}},"32":{"start":{"line":163,"column":4},"end":{"line":163,"column":57}},"33":{"start":{"line":196,"column":0},"end":{"line":256,"column":2}},"34":{"start":{"line":197,"column":2},"end":{"line":197,"column":23}},"35":{"start":{"line":198,"column":2},"end":{"line":198,"column":41}},"36":{"start":{"line":199,"column":2},"end":{"line":199,"column":20}},"37":{"start":{"line":201,"column":2},"end":{"line":201,"column":35}},"38":{"start":{"line":201,"column":20},"end":{"line":201,"column":33}},"39":{"start":{"line":203,"column":2},"end":{"line":203,"column":79}},"40":{"start":{"line":206,"column":2},"end":{"line":213,"column":3}},"41":{"start":{"line":208,"column":4},"end":{"line":208,"column":42}},"42":{"start":{"line":209,"column":9},"end":{"line":213,"column":3}},"43":{"start":{"line":210,"column":4},"end":{"line":210,"column":38}},"44":{"start":{"line":212,"column":4},"end":{"line":212,"column":22}},"45":{"start":{"line":215,"column":2},"end":{"line":215,"column":19}},"46":{"start":{"line":216,"column":2},"end":{"line":216,"column":36}},"47":{"start":{"line":218,"column":2},"end":{"line":238,"column":83}},"48":{"start":{"line":219,"column":4},"end":{"line":223,"column":5}},"49":{"start":{"line":220,"column":6},"end":{"line":220,"column":46}},"50":{"start":{"line":221,"column":6},"end":{"line":221,"column":24}},"51":{"start":{"line":222,"column":6},"end":{"line":222,"column":33}},"52":{"start":{"line":224,"column":4},"end":{"line":224,"column":47}},"53":{"start":{"line":226,"column":4},"end":{"line":230,"column":5}},"54":{"start":{"line":227,"column":6},"end":{"line":227,"column":25}},"55":{"start":{"line":228,"column":6},"end":{"line":228,"column":24}},"56":{"start":{"line":229,"column":6},"end":{"line":229,"column":19}},"57":{"start":{"line":231,"column":4},"end":{"line":237,"column":5}},"58":{"start":{"line":232,"column":6},"end":{"line":236,"column":7}},"59":{"start":{"line":233,"column":8},"end":{"line":233,"column":88}},"60":{"start":{"line":235,"column":8},"end":{"line":235,"column":65}},"61":{"start":{"line":241,"column":2},"end":{"line":246,"column":3}},"62":{"start":{"line":242,"column":4},"end":{"line":242,"column":48}},"63":{"start":{"line":243,"column":4},"end":{"line":243,"column":23}},"64":{"start":{"line":244,"column":4},"end":{"line":244,"column":22}},"65":{"start":{"line":245,"column":4},"end":{"line":245,"column":27}},"66":{"start":{"line":249,"column":2},"end":{"line":253,"column":3}},"67":{"start":{"line":250,"column":4},"end":{"line":250,"column":21}},"68":{"start":{"line":251,"column":4},"end":{"line":251,"column":23}},"69":{"start":{"line":252,"column":4},"end":{"line":252,"column":16}},"70":{"start":{"line":255,"column":2},"end":{"line":255,"column":14}},"71":{"start":{"line":268,"column":0},"end":{"line":270,"column":2}},"72":{"start":{"line":269,"column":2},"end":{"line":269,"column":26}},"73":{"start":{"line":283,"column":0},"end":{"line":295,"column":2}},"74":{"start":{"line":285,"column":2},"end":{"line":291,"column":3}},"75":{"start":{"line":286,"column":4},"end":{"line":290,"column":5}},"76":{"start":{"line":287,"column":6},"end":{"line":287,"column":41}},"77":{"start":{"line":289,"column":6},"end":{"line":289,"column":53}},"78":{"start":{"line":292,"column":2},"end":{"line":292,"column":19}},"79":{"start":{"line":293,"column":2},"end":{"line":293,"column":20}},"80":{"start":{"line":294,"column":2},"end":{"line":294,"column":27}},"81":{"start":{"line":331,"column":0},"end":{"line":340,"column":1}},"82":{"start":{"line":332,"column":2},"end":{"line":332,"column":38}},"83":{"start":{"line":334,"column":2},"end":{"line":334,"column":29}},"84":{"start":{"line":337,"column":2},"end":{"line":337,"column":43}},"85":{"start":{"line":337,"column":22},"end":{"line":337,"column":41}},"86":{"start":{"line":339,"column":2},"end":{"line":339,"column":25}},"87":{"start":{"line":351,"column":0},"end":{"line":355,"column":1}},"88":{"start":{"line":352,"column":2},"end":{"line":352,"column":26}},"89":{"start":{"line":353,"column":2},"end":{"line":353,"column":21}},"90":{"start":{"line":354,"column":2},"end":{"line":354,"column":33}},"91":{"start":{"line":366,"column":0},"end":{"line":370,"column":1}},"92":{"start":{"line":367,"column":2},"end":{"line":367,"column":26}},"93":{"start":{"line":368,"column":2},"end":{"line":368,"column":22}},"94":{"start":{"line":369,"column":2},"end":{"line":369,"column":33}},"95":{"start":{"line":373,"column":0},"end":{"line":373,"column":26}},"96":{"start":{"line":374,"column":0},"end":{"line":374,"column":26}},"97":{"start":{"line":375,"column":0},"end":{"line":375,"column":32}},"98":{"start":{"line":376,"column":0},"end":{"line":376,"column":20}}},"branchMap":{"1":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":5},"end":{"line":129,"column":12}},{"start":{"line":129,"column":16},"end":{"line":129,"column":18}}]},"2":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":2},"end":{"line":133,"column":2}},{"start":{"line":133,"column":2},"end":{"line":133,"column":2}}]},"3":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":6},"end":{"line":133,"column":13}},{"start":{"line":133,"column":18},"end":{"line":133,"column":36}}]},"4":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":7},"end":{"line":137,"column":7}},{"start":{"line":137,"column":7},"end":{"line":137,"column":7}}]},"5":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":11},"end":{"line":137,"column":19}},{"start":{"line":137,"column":24},"end":{"line":137,"column":42}},{"start":{"line":137,"column":48},"end":{"line":137,"column":67}}]},"6":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":2},"end":{"line":158,"column":2}},{"start":{"line":158,"column":2},"end":{"line":158,"column":2}}]},"7":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":2},"end":{"line":162,"column":2}},{"start":{"line":162,"column":2},"end":{"line":162,"column":2}}]},"8":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":2},"end":{"line":201,"column":2}},{"start":{"line":201,"column":2},"end":{"line":201,"column":2}}]},"9":{"line":203,"type":"cond-expr","locations":[{"start":{"line":203,"column":30},"end":{"line":203,"column":34}},{"start":{"line":203,"column":38},"end":{"line":203,"column":77}}]},"10":{"line":203,"type":"cond-expr","locations":[{"start":{"line":203,"column":56},"end":{"line":203,"column":64}},{"start":{"line":203,"column":67},"end":{"line":203,"column":77}}]},"11":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":2},"end":{"line":206,"column":2}},{"start":{"line":206,"column":2},"end":{"line":206,"column":2}}]},"12":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":9},"end":{"line":209,"column":9}},{"start":{"line":209,"column":9},"end":{"line":209,"column":9}}]},"13":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":4},"end":{"line":219,"column":4}},{"start":{"line":219,"column":4},"end":{"line":219,"column":4}}]},"14":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":4},"end":{"line":226,"column":4}},{"start":{"line":226,"column":4},"end":{"line":226,"column":4}}]},"15":{"line":226,"type":"binary-expr","locations":[{"start":{"line":226,"column":8},"end":{"line":226,"column":31}},{"start":{"line":226,"column":35},"end":{"line":226,"column":50}}]},"16":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":4},"end":{"line":231,"column":4}},{"start":{"line":231,"column":4},"end":{"line":231,"column":4}}]},"17":{"line":231,"type":"binary-expr","locations":[{"start":{"line":231,"column":8},"end":{"line":231,"column":28}},{"start":{"line":231,"column":33},"end":{"line":231,"column":52}},{"start":{"line":231,"column":57},"end":{"line":231,"column":75}},{"start":{"line":231,"column":79},"end":{"line":231,"column":101}}]},"18":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":6},"end":{"line":232,"column":6}},{"start":{"line":232,"column":6},"end":{"line":232,"column":6}}]},"19":{"line":238,"type":"binary-expr","locations":[{"start":{"line":238,"column":12},"end":{"line":238,"column":29}},{"start":{"line":238,"column":33},"end":{"line":238,"column":53}},{"start":{"line":238,"column":58},"end":{"line":238,"column":81}}]},"20":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":2},"end":{"line":241,"column":2}},{"start":{"line":241,"column":2},"end":{"line":241,"column":2}}]},"21":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":2},"end":{"line":249,"column":2}},{"start":{"line":249,"column":2},"end":{"line":249,"column":2}}]},"22":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":2},"end":{"line":285,"column":2}},{"start":{"line":285,"column":2},"end":{"line":285,"column":2}}]},"23":{"line":286,"type":"if","locations":[{"start":{"line":286,"column":4},"end":{"line":286,"column":4}},{"start":{"line":286,"column":4},"end":{"line":286,"column":4}}]},"24":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":2},"end":{"line":337,"column":2}},{"start":{"line":337,"column":2},"end":{"line":337,"column":2}}]},"25":{"line":352,"type":"binary-expr","locations":[{"start":{"line":352,"column":12},"end":{"line":352,"column":19}},{"start":{"line":352,"column":23},"end":{"line":352,"column":25}}]},"26":{"line":367,"type":"binary-expr","locations":[{"start":{"line":367,"column":12},"end":{"line":367,"column":19}},{"start":{"line":367,"column":23},"end":{"line":367,"column":25}}]}},"code":["'use strict';","","","var zlib_deflate = require('./zlib/deflate.js');","var utils = require('./utils/common');","var strings = require('./utils/strings');","var msg = require('./zlib/messages');","var zstream = require('./zlib/zstream');","","var toString = Object.prototype.toString;","","/* Public constants ==========================================================*/","/* ===========================================================================*/","","var Z_NO_FLUSH      = 0;","var Z_FINISH        = 4;","","var Z_OK            = 0;","var Z_STREAM_END    = 1;","var Z_SYNC_FLUSH    = 2;","","var Z_DEFAULT_COMPRESSION = -1;","","var Z_DEFAULT_STRATEGY    = 0;","","var Z_DEFLATED  = 8;","","/* ===========================================================================*/","","","/**"," * class Deflate"," *"," * Generic JS-style wrapper for zlib calls. If you don't need"," * streaming behaviour - use more simple functions: [[deflate]],"," * [[deflateRaw]] and [[gzip]]."," **/","","/* internal"," * Deflate.chunks -> Array"," *"," * Chunks of output data, if [[Deflate#onData]] not overriden."," **/","","/**"," * Deflate.result -> Uint8Array|Array"," *"," * Compressed result, generated by default [[Deflate#onData]]"," * and [[Deflate#onEnd]] handlers. Filled after you push last chunk"," * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you"," * push a chunk with explicit flush (call [[Deflate#push]] with"," * `Z_SYNC_FLUSH` param)."," **/","","/**"," * Deflate.err -> Number"," *"," * Error code after deflate finished. 0 (Z_OK) on success."," * You will not need it in real life, because deflate errors"," * are possible only on wrong options or bad `onData` / `onEnd`"," * custom handlers."," **/","","/**"," * Deflate.msg -> String"," *"," * Error message, if [[Deflate.err]] != 0"," **/","","","/**"," * new Deflate(options)"," * - options (Object): zlib deflate options."," *"," * Creates new deflator instance with specified params. Throws exception"," * on bad params. Supported options:"," *"," * - `level`"," * - `windowBits`"," * - `memLevel`"," * - `strategy`"," *"," * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)"," * for more information on these."," *"," * Additional options, for internal needs:"," *"," * - `chunkSize` - size of generated data chunks (16K by default)"," * - `raw` (Boolean) - do raw deflate"," * - `gzip` (Boolean) - create gzip wrapper"," * - `to` (String) - if equal to 'string', then result will be \"binary string\""," *    (each char code [0..255])"," * - `header` (Object) - custom header for gzip"," *   - `text` (Boolean) - true if compressed data believed to be text"," *   - `time` (Number) - modification time, unix timestamp"," *   - `os` (Number) - operation system code"," *   - `extra` (Array) - array of bytes with extra data (max 65536)"," *   - `name` (String) - file name (binary string)"," *   - `comment` (String) - comment (binary string)"," *   - `hcrc` (Boolean) - true if header crc should be added"," *"," * ##### Example:"," *"," * ```javascript"," * var pako = require('pako')"," *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])"," *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);"," *"," * var deflate = new pako.Deflate({ level: 3});"," *"," * deflate.push(chunk1, false);"," * deflate.push(chunk2, true);  // true -> last chunk"," *"," * if (deflate.err) { throw new Error(deflate.err); }"," *"," * console.log(deflate.result);"," * ```"," **/","var Deflate = function(options) {","","  this.options = utils.assign({","    level: Z_DEFAULT_COMPRESSION,","    method: Z_DEFLATED,","    chunkSize: 16384,","    windowBits: 15,","    memLevel: 8,","    strategy: Z_DEFAULT_STRATEGY,","    to: ''","  }, options || {});","","  var opt = this.options;","","  if (opt.raw && (opt.windowBits > 0)) {","    opt.windowBits = -opt.windowBits;","  }","","  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {","    opt.windowBits += 16;","  }","","  this.err    = 0;      // error code, if happens (0 = Z_OK)","  this.msg    = '';     // error message","  this.ended  = false;  // used to avoid multiple onEnd() calls","  this.chunks = [];     // chunks of compressed data","","  this.strm = new zstream();","  this.strm.avail_out = 0;","","  var status = zlib_deflate.deflateInit2(","    this.strm,","    opt.level,","    opt.method,","    opt.windowBits,","    opt.memLevel,","    opt.strategy","  );","","  if (status !== Z_OK) {","    throw new Error(msg[status]);","  }","","  if (opt.header) {","    zlib_deflate.deflateSetHeader(this.strm, opt.header);","  }","};","","/**"," * Deflate#push(data[, mode]) -> Boolean"," * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be"," *   converted to utf8 byte sequence."," * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes."," *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` meansh Z_FINISH."," *"," * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with"," * new compressed chunks. Returns `true` on success. The last data block must have"," * mode Z_FINISH (or `true`). That will flush internal pending buffers and call"," * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you"," * can use mode Z_SYNC_FLUSH, keeping the compression context."," *"," * On fail call [[Deflate#onEnd]] with error code and return false."," *"," * We strongly recommend to use `Uint8Array` on input for best speed (output"," * array format is detected automatically). Also, don't skip last param and always"," * use the same type in your code (boolean or number). That will improve JS speed."," *"," * For regular `Array`-s make sure all elements are [0..255]."," *"," * ##### Example"," *"," * ```javascript"," * push(chunk, false); // push one of data chunks"," * ..."," * push(chunk, true);  // push last chunk"," * ```"," **/","Deflate.prototype.push = function(data, mode) {","  var strm = this.strm;","  var chunkSize = this.options.chunkSize;","  var status, _mode;","","  if (this.ended) { return false; }","","  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);","","  // Convert data if needed","  if (typeof data === 'string') {","    // If we need to compress text, change encoding to utf8.","    strm.input = strings.string2buf(data);","  } else if (toString.call(data) === '[object ArrayBuffer]') {","    strm.input = new Uint8Array(data);","  } else {","    strm.input = data;","  }","","  strm.next_in = 0;","  strm.avail_in = strm.input.length;","","  do {","    if (strm.avail_out === 0) {","      strm.output = new utils.Buf8(chunkSize);","      strm.next_out = 0;","      strm.avail_out = chunkSize;","    }","    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */","","    if (status !== Z_STREAM_END && status !== Z_OK) {","      this.onEnd(status);","      this.ended = true;","      return false;","    }","    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {","      if (this.options.to === 'string') {","        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));","      } else {","        this.onData(utils.shrinkBuf(strm.output, strm.next_out));","      }","    }","  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);","","  // Finalize on the last chunk.","  if (_mode === Z_FINISH) {","    status = zlib_deflate.deflateEnd(this.strm);","    this.onEnd(status);","    this.ended = true;","    return status === Z_OK;","  }","","  // callback interim results if Z_SYNC_FLUSH.","  if (_mode === Z_SYNC_FLUSH) {","    this.onEnd(Z_OK);","    strm.avail_out = 0;","    return true;","  }","","  return true;","};","","","/**"," * Deflate#onData(chunk) -> Void"," * - chunk (Uint8Array|Array|String): ouput data. Type of array depends"," *   on js engine support. When string output requested, each chunk"," *   will be string."," *"," * By default, stores data blocks in `chunks[]` property and glue"," * those in `onEnd`. Override this handler, if you need another behaviour."," **/","Deflate.prototype.onData = function(chunk) {","  this.chunks.push(chunk);","};","","","/**"," * Deflate#onEnd(status) -> Void"," * - status (Number): deflate status. 0 (Z_OK) on success,"," *   other if not."," *"," * Called once after you tell deflate that the input stream is"," * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)"," * or if an error happened. By default - join collected chunks,"," * free memory and fill `results` / `err` properties."," **/","Deflate.prototype.onEnd = function(status) {","  // On success - join","  if (status === Z_OK) {","    if (this.options.to === 'string') {","      this.result = this.chunks.join('');","    } else {","      this.result = utils.flattenChunks(this.chunks);","    }","  }","  this.chunks = [];","  this.err = status;","  this.msg = this.strm.msg;","};","","","/**"," * deflate(data[, options]) -> Uint8Array|Array|String"," * - data (Uint8Array|Array|String): input data to compress."," * - options (Object): zlib deflate options."," *"," * Compress `data` with deflate alrorythm and `options`."," *"," * Supported options are:"," *"," * - level"," * - windowBits"," * - memLevel"," * - strategy"," *"," * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)"," * for more information on these."," *"," * Sugar (options):"," *"," * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify"," *   negative windowBits implicitly."," * - `to` (String) - if equal to 'string', then result will be \"binary string\""," *    (each char code [0..255])"," *"," * ##### Example:"," *"," * ```javascript"," * var pako = require('pako')"," *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);"," *"," * console.log(pako.deflate(data));"," * ```"," **/","function deflate(input, options) {","  var deflator = new Deflate(options);","","  deflator.push(input, true);","","  // That will never happens, if you don't cheat with options :)","  if (deflator.err) { throw deflator.msg; }","","  return deflator.result;","}","","","/**"," * deflateRaw(data[, options]) -> Uint8Array|Array|String"," * - data (Uint8Array|Array|String): input data to compress."," * - options (Object): zlib deflate options."," *"," * The same as [[deflate]], but creates raw data, without wrapper"," * (header and adler32 crc)."," **/","function deflateRaw(input, options) {","  options = options || {};","  options.raw = true;","  return deflate(input, options);","}","","","/**"," * gzip(data[, options]) -> Uint8Array|Array|String"," * - data (Uint8Array|Array|String): input data to compress."," * - options (Object): zlib deflate options."," *"," * The same as [[deflate]], but create gzip wrapper instead of"," * deflate one."," **/","function gzip(input, options) {","  options = options || {};","  options.gzip = true;","  return deflate(input, options);","}","","","exports.Deflate = Deflate;","exports.deflate = deflate;","exports.deflateRaw = deflateRaw;","exports.gzip = gzip;",""],"l":{"4":1,"5":1,"6":1,"7":1,"8":1,"10":1,"15":1,"16":1,"18":1,"19":1,"20":1,"22":1,"24":1,"26":1,"119":1,"121":0,"131":0,"133":0,"134":0,"137":0,"138":0,"141":0,"142":0,"143":0,"144":0,"146":0,"147":0,"149":0,"158":0,"159":0,"162":0,"163":0,"196":1,"197":0,"198":0,"199":0,"201":0,"203":0,"206":0,"208":0,"209":0,"210":0,"212":0,"215":0,"216":0,"218":0,"219":0,"220":0,"221":0,"222":0,"224":0,"226":0,"227":0,"228":0,"229":0,"231":0,"232":0,"233":0,"235":0,"241":0,"242":0,"243":0,"244":0,"245":0,"249":0,"250":0,"251":0,"252":0,"255":0,"268":1,"269":0,"283":1,"285":0,"286":0,"287":0,"289":0,"292":0,"293":0,"294":0,"331":1,"332":0,"334":0,"337":0,"339":0,"351":1,"352":0,"353":0,"354":0,"366":1,"367":0,"368":0,"369":0,"373":1,"374":1,"375":1,"376":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/zlib/deflate.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/zlib/deflate.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":0,"52":0,"53":1,"54":0,"55":1,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":0,"76":0,"77":0,"78":1,"79":0,"80":1,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":1,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":1,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":1,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":1,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":1,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":1,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":1,"396":10,"397":10,"398":10,"399":10,"400":10,"401":1,"402":1,"403":1,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":1,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":1,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":1,"498":0,"499":0,"500":0,"501":0,"502":1,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":1,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":1,"550":0,"551":1,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":1,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":1,"743":1,"744":1,"745":1,"746":1,"747":1,"748":1,"749":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0,0],"15":[0,0,0,0,0,0,0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0,0],"65":[0,0],"66":[0,0,0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0,0],"89":[0,0,0,0,0,0,0,0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0,0,0,0,0,0,0,0],"122":[0,0],"123":[0,0],"124":[0,0,0,0],"125":[0,0],"126":[0,0],"127":[0,0,0,0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0,0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0,0,0,0,0,0],"215":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":10,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"fnMap":{"1":{"name":"err","line":106,"loc":{"start":{"line":106,"column":0},"end":{"line":106,"column":30}}},"2":{"name":"rank","line":111,"loc":{"start":{"line":111,"column":0},"end":{"line":111,"column":17}}},"3":{"name":"zero","line":115,"loc":{"start":{"line":115,"column":0},"end":{"line":115,"column":19}}},"4":{"name":"flush_pending","line":124,"loc":{"start":{"line":124,"column":0},"end":{"line":124,"column":29}}},"5":{"name":"flush_block_only","line":146,"loc":{"start":{"line":146,"column":0},"end":{"line":146,"column":36}}},"6":{"name":"put_byte","line":153,"loc":{"start":{"line":153,"column":0},"end":{"line":153,"column":24}}},"7":{"name":"putShortMSB","line":163,"loc":{"start":{"line":163,"column":0},"end":{"line":163,"column":27}}},"8":{"name":"read_buf","line":178,"loc":{"start":{"line":178,"column":0},"end":{"line":178,"column":42}}},"9":{"name":"longest_match","line":211,"loc":{"start":{"line":211,"column":0},"end":{"line":211,"column":37}}},"10":{"name":"fill_window","line":324,"loc":{"start":{"line":324,"column":0},"end":{"line":324,"column":24}}},"11":{"name":"deflate_stored","line":480,"loc":{"start":{"line":480,"column":0},"end":{"line":480,"column":34}}},"12":{"name":"deflate_fast","line":578,"loc":{"start":{"line":578,"column":0},"end":{"line":578,"column":32}}},"13":{"name":"deflate_slow","line":706,"loc":{"start":{"line":706,"column":0},"end":{"line":706,"column":32}}},"14":{"name":"deflate_rle","line":868,"loc":{"start":{"line":868,"column":0},"end":{"line":868,"column":31}}},"15":{"name":"deflate_huff","line":963,"loc":{"start":{"line":963,"column":0},"end":{"line":963,"column":32}}},"16":{"name":"(anonymous_16)","line":1020,"loc":{"start":{"line":1020,"column":13},"end":{"line":1020,"column":76}}},"17":{"name":"lm_init","line":1049,"loc":{"start":{"line":1049,"column":0},"end":{"line":1049,"column":20}}},"18":{"name":"DeflateState","line":1072,"loc":{"start":{"line":1072,"column":0},"end":{"line":1072,"column":24}}},"19":{"name":"deflateResetKeep","line":1261,"loc":{"start":{"line":1261,"column":0},"end":{"line":1261,"column":32}}},"20":{"name":"deflateReset","line":1290,"loc":{"start":{"line":1290,"column":0},"end":{"line":1290,"column":28}}},"21":{"name":"deflateSetHeader","line":1299,"loc":{"start":{"line":1299,"column":0},"end":{"line":1299,"column":38}}},"22":{"name":"deflateInit2","line":1307,"loc":{"start":{"line":1307,"column":0},"end":{"line":1307,"column":75}}},"23":{"name":"deflateInit","line":1378,"loc":{"start":{"line":1378,"column":0},"end":{"line":1378,"column":34}}},"24":{"name":"deflate","line":1383,"loc":{"start":{"line":1383,"column":0},"end":{"line":1383,"column":30}}},"25":{"name":"deflateEnd","line":1717,"loc":{"start":{"line":1717,"column":0},"end":{"line":1717,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":41}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":33}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":33}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":24}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":24}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":24}},"9":{"start":{"line":18,"column":0},"end":{"line":18,"column":24}},"10":{"start":{"line":19,"column":0},"end":{"line":19,"column":24}},"11":{"start":{"line":26,"column":0},"end":{"line":26,"column":24}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":24}},"13":{"start":{"line":30,"column":0},"end":{"line":30,"column":25}},"14":{"start":{"line":31,"column":0},"end":{"line":31,"column":25}},"15":{"start":{"line":33,"column":0},"end":{"line":33,"column":25}},"16":{"start":{"line":41,"column":0},"end":{"line":41,"column":31}},"17":{"start":{"line":44,"column":0},"end":{"line":44,"column":30}},"18":{"start":{"line":45,"column":0},"end":{"line":45,"column":30}},"19":{"start":{"line":46,"column":0},"end":{"line":46,"column":30}},"20":{"start":{"line":47,"column":0},"end":{"line":47,"column":30}},"21":{"start":{"line":48,"column":0},"end":{"line":48,"column":30}},"22":{"start":{"line":54,"column":0},"end":{"line":54,"column":30}},"23":{"start":{"line":58,"column":0},"end":{"line":58,"column":20}},"24":{"start":{"line":63,"column":0},"end":{"line":63,"column":22}},"25":{"start":{"line":65,"column":0},"end":{"line":65,"column":19}},"26":{"start":{"line":67,"column":0},"end":{"line":67,"column":22}},"27":{"start":{"line":70,"column":0},"end":{"line":70,"column":23}},"28":{"start":{"line":72,"column":0},"end":{"line":72,"column":24}},"29":{"start":{"line":74,"column":0},"end":{"line":74,"column":48}},"30":{"start":{"line":76,"column":0},"end":{"line":76,"column":23}},"31":{"start":{"line":78,"column":0},"end":{"line":78,"column":23}},"32":{"start":{"line":80,"column":0},"end":{"line":80,"column":34}},"33":{"start":{"line":82,"column":0},"end":{"line":82,"column":19}},"34":{"start":{"line":85,"column":0},"end":{"line":85,"column":18}},"35":{"start":{"line":86,"column":0},"end":{"line":86,"column":20}},"36":{"start":{"line":87,"column":0},"end":{"line":87,"column":48}},"37":{"start":{"line":89,"column":0},"end":{"line":89,"column":23}},"38":{"start":{"line":91,"column":0},"end":{"line":91,"column":20}},"39":{"start":{"line":92,"column":0},"end":{"line":92,"column":21}},"40":{"start":{"line":93,"column":0},"end":{"line":93,"column":20}},"41":{"start":{"line":94,"column":0},"end":{"line":94,"column":23}},"42":{"start":{"line":95,"column":0},"end":{"line":95,"column":21}},"43":{"start":{"line":96,"column":0},"end":{"line":96,"column":21}},"44":{"start":{"line":97,"column":0},"end":{"line":97,"column":23}},"45":{"start":{"line":99,"column":0},"end":{"line":99,"column":26}},"46":{"start":{"line":100,"column":0},"end":{"line":100,"column":26}},"47":{"start":{"line":101,"column":0},"end":{"line":101,"column":26}},"48":{"start":{"line":102,"column":0},"end":{"line":102,"column":26}},"49":{"start":{"line":104,"column":0},"end":{"line":104,"column":19}},"50":{"start":{"line":106,"column":0},"end":{"line":109,"column":1}},"51":{"start":{"line":107,"column":2},"end":{"line":107,"column":28}},"52":{"start":{"line":108,"column":2},"end":{"line":108,"column":19}},"53":{"start":{"line":111,"column":0},"end":{"line":113,"column":1}},"54":{"start":{"line":112,"column":2},"end":{"line":112,"column":40}},"55":{"start":{"line":115,"column":0},"end":{"line":115,"column":81}},"56":{"start":{"line":115,"column":21},"end":{"line":115,"column":42}},"57":{"start":{"line":115,"column":43},"end":{"line":115,"column":79}},"58":{"start":{"line":115,"column":64},"end":{"line":115,"column":77}},"59":{"start":{"line":124,"column":0},"end":{"line":143,"column":1}},"60":{"start":{"line":125,"column":2},"end":{"line":125,"column":21}},"61":{"start":{"line":128,"column":2},"end":{"line":128,"column":22}},"62":{"start":{"line":129,"column":2},"end":{"line":131,"column":3}},"63":{"start":{"line":130,"column":4},"end":{"line":130,"column":25}},"64":{"start":{"line":132,"column":2},"end":{"line":132,"column":28}},"65":{"start":{"line":132,"column":19},"end":{"line":132,"column":26}},"66":{"start":{"line":134,"column":2},"end":{"line":134,"column":80}},"67":{"start":{"line":135,"column":2},"end":{"line":135,"column":23}},"68":{"start":{"line":136,"column":2},"end":{"line":136,"column":23}},"69":{"start":{"line":137,"column":2},"end":{"line":137,"column":24}},"70":{"start":{"line":138,"column":2},"end":{"line":138,"column":24}},"71":{"start":{"line":139,"column":2},"end":{"line":139,"column":19}},"72":{"start":{"line":140,"column":2},"end":{"line":142,"column":3}},"73":{"start":{"line":141,"column":4},"end":{"line":141,"column":22}},"74":{"start":{"line":146,"column":0},"end":{"line":150,"column":1}},"75":{"start":{"line":147,"column":2},"end":{"line":147,"column":104}},"76":{"start":{"line":148,"column":2},"end":{"line":148,"column":29}},"77":{"start":{"line":149,"column":2},"end":{"line":149,"column":24}},"78":{"start":{"line":153,"column":0},"end":{"line":155,"column":1}},"79":{"start":{"line":154,"column":2},"end":{"line":154,"column":33}},"80":{"start":{"line":163,"column":0},"end":{"line":168,"column":1}},"81":{"start":{"line":166,"column":2},"end":{"line":166,"column":48}},"82":{"start":{"line":167,"column":2},"end":{"line":167,"column":40}},"83":{"start":{"line":178,"column":0},"end":{"line":199,"column":1}},"84":{"start":{"line":179,"column":2},"end":{"line":179,"column":26}},"85":{"start":{"line":181,"column":2},"end":{"line":181,"column":33}},"86":{"start":{"line":181,"column":20},"end":{"line":181,"column":31}},"87":{"start":{"line":182,"column":2},"end":{"line":182,"column":30}},"88":{"start":{"line":182,"column":19},"end":{"line":182,"column":28}},"89":{"start":{"line":184,"column":2},"end":{"line":184,"column":23}},"90":{"start":{"line":186,"column":2},"end":{"line":186,"column":60}},"91":{"start":{"line":187,"column":2},"end":{"line":193,"column":3}},"92":{"start":{"line":188,"column":4},"end":{"line":188,"column":54}},"93":{"start":{"line":191,"column":7},"end":{"line":193,"column":3}},"94":{"start":{"line":192,"column":4},"end":{"line":192,"column":52}},"95":{"start":{"line":195,"column":2},"end":{"line":195,"column":22}},"96":{"start":{"line":196,"column":2},"end":{"line":196,"column":23}},"97":{"start":{"line":198,"column":2},"end":{"line":198,"column":13}},"98":{"start":{"line":211,"column":0},"end":{"line":311,"column":1}},"99":{"start":{"line":212,"column":2},"end":{"line":212,"column":40}},"100":{"start":{"line":213,"column":2},"end":{"line":213,"column":24}},"101":{"start":{"line":214,"column":2},"end":{"line":214,"column":12}},"102":{"start":{"line":215,"column":2},"end":{"line":215,"column":10}},"103":{"start":{"line":216,"column":2},"end":{"line":216,"column":31}},"104":{"start":{"line":217,"column":2},"end":{"line":217,"column":32}},"105":{"start":{"line":218,"column":2},"end":{"line":219,"column":57}},"106":{"start":{"line":221,"column":2},"end":{"line":221,"column":22}},"107":{"start":{"line":223,"column":2},"end":{"line":223,"column":23}},"108":{"start":{"line":224,"column":2},"end":{"line":224,"column":21}},"109":{"start":{"line":230,"column":2},"end":{"line":230,"column":38}},"110":{"start":{"line":231,"column":2},"end":{"line":231,"column":45}},"111":{"start":{"line":232,"column":2},"end":{"line":232,"column":41}},"112":{"start":{"line":240,"column":2},"end":{"line":242,"column":3}},"113":{"start":{"line":241,"column":4},"end":{"line":241,"column":23}},"114":{"start":{"line":246,"column":2},"end":{"line":246,"column":61}},"115":{"start":{"line":246,"column":34},"end":{"line":246,"column":59}},"116":{"start":{"line":250,"column":2},"end":{"line":305,"column":82}},"117":{"start":{"line":252,"column":4},"end":{"line":252,"column":22}},"118":{"start":{"line":263,"column":4},"end":{"line":268,"column":5}},"119":{"start":{"line":267,"column":6},"end":{"line":267,"column":15}},"120":{"start":{"line":276,"column":4},"end":{"line":276,"column":14}},"121":{"start":{"line":277,"column":4},"end":{"line":277,"column":12}},"122":{"start":{"line":283,"column":4},"end":{"line":289,"column":28}},"123":{"start":{"line":293,"column":4},"end":{"line":293,"column":38}},"124":{"start":{"line":294,"column":4},"end":{"line":294,"column":30}},"125":{"start":{"line":296,"column":4},"end":{"line":304,"column":5}},"126":{"start":{"line":297,"column":6},"end":{"line":297,"column":32}},"127":{"start":{"line":298,"column":6},"end":{"line":298,"column":21}},"128":{"start":{"line":299,"column":6},"end":{"line":301,"column":7}},"129":{"start":{"line":300,"column":8},"end":{"line":300,"column":14}},"130":{"start":{"line":302,"column":6},"end":{"line":302,"column":45}},"131":{"start":{"line":303,"column":6},"end":{"line":303,"column":41}},"132":{"start":{"line":307,"column":2},"end":{"line":309,"column":3}},"133":{"start":{"line":308,"column":4},"end":{"line":308,"column":20}},"134":{"start":{"line":310,"column":2},"end":{"line":310,"column":21}},"135":{"start":{"line":324,"column":0},"end":{"line":469,"column":1}},"136":{"start":{"line":325,"column":2},"end":{"line":325,"column":25}},"137":{"start":{"line":326,"column":2},"end":{"line":326,"column":25}},"138":{"start":{"line":330,"column":2},"end":{"line":431,"column":65}},"139":{"start":{"line":331,"column":4},"end":{"line":331,"column":52}},"140":{"start":{"line":351,"column":4},"end":{"line":384,"column":5}},"141":{"start":{"line":353,"column":6},"end":{"line":353,"column":62}},"142":{"start":{"line":354,"column":6},"end":{"line":354,"column":31}},"143":{"start":{"line":355,"column":6},"end":{"line":355,"column":28}},"144":{"start":{"line":357,"column":6},"end":{"line":357,"column":31}},"145":{"start":{"line":366,"column":6},"end":{"line":366,"column":22}},"146":{"start":{"line":367,"column":6},"end":{"line":367,"column":12}},"147":{"start":{"line":368,"column":6},"end":{"line":371,"column":20}},"148":{"start":{"line":369,"column":8},"end":{"line":369,"column":24}},"149":{"start":{"line":370,"column":8},"end":{"line":370,"column":53}},"150":{"start":{"line":373,"column":6},"end":{"line":373,"column":18}},"151":{"start":{"line":374,"column":6},"end":{"line":374,"column":12}},"152":{"start":{"line":375,"column":6},"end":{"line":381,"column":20}},"153":{"start":{"line":376,"column":8},"end":{"line":376,"column":24}},"154":{"start":{"line":377,"column":8},"end":{"line":377,"column":53}},"155":{"start":{"line":383,"column":6},"end":{"line":383,"column":22}},"156":{"start":{"line":385,"column":4},"end":{"line":387,"column":5}},"157":{"start":{"line":386,"column":6},"end":{"line":386,"column":12}},"158":{"start":{"line":401,"column":4},"end":{"line":401,"column":67}},"159":{"start":{"line":402,"column":4},"end":{"line":402,"column":21}},"160":{"start":{"line":405,"column":4},"end":{"line":426,"column":5}},"161":{"start":{"line":406,"column":6},"end":{"line":406,"column":34}},"162":{"start":{"line":407,"column":6},"end":{"line":407,"column":30}},"163":{"start":{"line":410,"column":6},"end":{"line":410,"column":78}},"164":{"start":{"line":414,"column":6},"end":{"line":425,"column":7}},"165":{"start":{"line":416,"column":8},"end":{"line":416,"column":90}},"166":{"start":{"line":418,"column":8},"end":{"line":418,"column":49}},"167":{"start":{"line":419,"column":8},"end":{"line":419,"column":30}},"168":{"start":{"line":420,"column":8},"end":{"line":420,"column":14}},"169":{"start":{"line":421,"column":8},"end":{"line":421,"column":19}},"170":{"start":{"line":422,"column":8},"end":{"line":424,"column":9}},"171":{"start":{"line":423,"column":10},"end":{"line":423,"column":16}},"172":{"start":{"line":480,"column":0},"end":{"line":569,"column":1}},"173":{"start":{"line":484,"column":2},"end":{"line":484,"column":30}},"174":{"start":{"line":486,"column":2},"end":{"line":488,"column":3}},"175":{"start":{"line":487,"column":4},"end":{"line":487,"column":44}},"176":{"start":{"line":491,"column":2},"end":{"line":545,"column":3}},"177":{"start":{"line":493,"column":4},"end":{"line":511,"column":5}},"178":{"start":{"line":502,"column":6},"end":{"line":502,"column":21}},"179":{"start":{"line":503,"column":6},"end":{"line":505,"column":7}},"180":{"start":{"line":504,"column":8},"end":{"line":504,"column":28}},"181":{"start":{"line":507,"column":6},"end":{"line":509,"column":7}},"182":{"start":{"line":508,"column":8},"end":{"line":508,"column":14}},"183":{"start":{"line":515,"column":4},"end":{"line":515,"column":30}},"184":{"start":{"line":516,"column":4},"end":{"line":516,"column":20}},"185":{"start":{"line":519,"column":4},"end":{"line":519,"column":51}},"186":{"start":{"line":521,"column":4},"end":{"line":533,"column":5}},"187":{"start":{"line":523,"column":6},"end":{"line":523,"column":43}},"188":{"start":{"line":524,"column":6},"end":{"line":524,"column":29}},"189":{"start":{"line":526,"column":6},"end":{"line":526,"column":33}},"190":{"start":{"line":527,"column":6},"end":{"line":529,"column":7}},"191":{"start":{"line":528,"column":8},"end":{"line":528,"column":28}},"192":{"start":{"line":537,"column":4},"end":{"line":544,"column":5}},"193":{"start":{"line":539,"column":6},"end":{"line":539,"column":33}},"194":{"start":{"line":540,"column":6},"end":{"line":542,"column":7}},"195":{"start":{"line":541,"column":8},"end":{"line":541,"column":28}},"196":{"start":{"line":547,"column":2},"end":{"line":547,"column":15}},"197":{"start":{"line":549,"column":2},"end":{"line":557,"column":3}},"198":{"start":{"line":551,"column":4},"end":{"line":551,"column":30}},"199":{"start":{"line":552,"column":4},"end":{"line":554,"column":5}},"200":{"start":{"line":553,"column":6},"end":{"line":553,"column":31}},"201":{"start":{"line":556,"column":4},"end":{"line":556,"column":26}},"202":{"start":{"line":559,"column":2},"end":{"line":566,"column":3}},"203":{"start":{"line":561,"column":4},"end":{"line":561,"column":31}},"204":{"start":{"line":562,"column":4},"end":{"line":564,"column":5}},"205":{"start":{"line":563,"column":6},"end":{"line":563,"column":26}},"206":{"start":{"line":568,"column":2},"end":{"line":568,"column":22}},"207":{"start":{"line":578,"column":0},"end":{"line":699,"column":1}},"208":{"start":{"line":579,"column":2},"end":{"line":579,"column":16}},"209":{"start":{"line":580,"column":2},"end":{"line":580,"column":13}},"210":{"start":{"line":582,"column":2},"end":{"line":679,"column":3}},"211":{"start":{"line":588,"column":4},"end":{"line":596,"column":5}},"212":{"start":{"line":589,"column":6},"end":{"line":589,"column":21}},"213":{"start":{"line":590,"column":6},"end":{"line":592,"column":7}},"214":{"start":{"line":591,"column":8},"end":{"line":591,"column":28}},"215":{"start":{"line":593,"column":6},"end":{"line":595,"column":7}},"216":{"start":{"line":594,"column":8},"end":{"line":594,"column":14}},"217":{"start":{"line":601,"column":4},"end":{"line":601,"column":25}},"218":{"start":{"line":602,"column":4},"end":{"line":608,"column":5}},"219":{"start":{"line":604,"column":6},"end":{"line":604,"column":97}},"220":{"start":{"line":605,"column":6},"end":{"line":605,"column":66}},"221":{"start":{"line":606,"column":6},"end":{"line":606,"column":35}},"222":{"start":{"line":613,"column":4},"end":{"line":620,"column":5}},"223":{"start":{"line":618,"column":6},"end":{"line":618,"column":51}},"224":{"start":{"line":621,"column":4},"end":{"line":670,"column":5}},"225":{"start":{"line":626,"column":6},"end":{"line":626,"column":90}},"226":{"start":{"line":628,"column":6},"end":{"line":628,"column":36}},"227":{"start":{"line":633,"column":6},"end":{"line":661,"column":7}},"228":{"start":{"line":634,"column":8},"end":{"line":634,"column":25}},"229":{"start":{"line":635,"column":8},"end":{"line":645,"column":41}},"230":{"start":{"line":636,"column":10},"end":{"line":636,"column":23}},"231":{"start":{"line":638,"column":10},"end":{"line":638,"column":101}},"232":{"start":{"line":639,"column":10},"end":{"line":639,"column":70}},"233":{"start":{"line":640,"column":10},"end":{"line":640,"column":39}},"234":{"start":{"line":646,"column":8},"end":{"line":646,"column":21}},"235":{"start":{"line":649,"column":8},"end":{"line":649,"column":37}},"236":{"start":{"line":650,"column":8},"end":{"line":650,"column":27}},"237":{"start":{"line":651,"column":8},"end":{"line":651,"column":39}},"238":{"start":{"line":653,"column":8},"end":{"line":653,"column":87}},"239":{"start":{"line":666,"column":6},"end":{"line":666,"column":59}},"240":{"start":{"line":668,"column":6},"end":{"line":668,"column":20}},"241":{"start":{"line":669,"column":6},"end":{"line":669,"column":19}},"242":{"start":{"line":671,"column":4},"end":{"line":678,"column":5}},"243":{"start":{"line":673,"column":6},"end":{"line":673,"column":33}},"244":{"start":{"line":674,"column":6},"end":{"line":676,"column":7}},"245":{"start":{"line":675,"column":8},"end":{"line":675,"column":28}},"246":{"start":{"line":680,"column":2},"end":{"line":680,"column":71}},"247":{"start":{"line":681,"column":2},"end":{"line":689,"column":3}},"248":{"start":{"line":683,"column":4},"end":{"line":683,"column":30}},"249":{"start":{"line":684,"column":4},"end":{"line":686,"column":5}},"250":{"start":{"line":685,"column":6},"end":{"line":685,"column":31}},"251":{"start":{"line":688,"column":4},"end":{"line":688,"column":26}},"252":{"start":{"line":690,"column":2},"end":{"line":697,"column":3}},"253":{"start":{"line":692,"column":4},"end":{"line":692,"column":31}},"254":{"start":{"line":693,"column":4},"end":{"line":695,"column":5}},"255":{"start":{"line":694,"column":6},"end":{"line":694,"column":26}},"256":{"start":{"line":698,"column":2},"end":{"line":698,"column":23}},"257":{"start":{"line":706,"column":0},"end":{"line":860,"column":1}},"258":{"start":{"line":707,"column":2},"end":{"line":707,"column":16}},"259":{"start":{"line":708,"column":2},"end":{"line":708,"column":13}},"260":{"start":{"line":710,"column":2},"end":{"line":710,"column":17}},"261":{"start":{"line":713,"column":2},"end":{"line":831,"column":3}},"262":{"start":{"line":719,"column":4},"end":{"line":725,"column":5}},"263":{"start":{"line":720,"column":6},"end":{"line":720,"column":21}},"264":{"start":{"line":721,"column":6},"end":{"line":723,"column":7}},"265":{"start":{"line":722,"column":8},"end":{"line":722,"column":28}},"266":{"start":{"line":724,"column":6},"end":{"line":724,"column":39}},"267":{"start":{"line":724,"column":31},"end":{"line":724,"column":37}},"268":{"start":{"line":730,"column":4},"end":{"line":730,"column":25}},"269":{"start":{"line":731,"column":4},"end":{"line":737,"column":5}},"270":{"start":{"line":733,"column":6},"end":{"line":733,"column":97}},"271":{"start":{"line":734,"column":6},"end":{"line":734,"column":66}},"272":{"start":{"line":735,"column":6},"end":{"line":735,"column":35}},"273":{"start":{"line":741,"column":4},"end":{"line":741,"column":35}},"274":{"start":{"line":742,"column":4},"end":{"line":742,"column":33}},"275":{"start":{"line":743,"column":4},"end":{"line":743,"column":33}},"276":{"start":{"line":745,"column":4},"end":{"line":762,"column":5}},"277":{"start":{"line":751,"column":6},"end":{"line":751,"column":51}},"278":{"start":{"line":754,"column":6},"end":{"line":761,"column":7}},"279":{"start":{"line":760,"column":8},"end":{"line":760,"column":37}},"280":{"start":{"line":766,"column":4},"end":{"line":830,"column":5}},"281":{"start":{"line":767,"column":6},"end":{"line":767,"column":56}},"282":{"start":{"line":774,"column":6},"end":{"line":774,"column":91}},"283":{"start":{"line":780,"column":6},"end":{"line":780,"column":37}},"284":{"start":{"line":781,"column":6},"end":{"line":781,"column":25}},"285":{"start":{"line":782,"column":6},"end":{"line":790,"column":38}},"286":{"start":{"line":783,"column":8},"end":{"line":789,"column":9}},"287":{"start":{"line":785,"column":10},"end":{"line":785,"column":101}},"288":{"start":{"line":786,"column":10},"end":{"line":786,"column":70}},"289":{"start":{"line":787,"column":10},"end":{"line":787,"column":39}},"290":{"start":{"line":791,"column":6},"end":{"line":791,"column":28}},"291":{"start":{"line":792,"column":6},"end":{"line":792,"column":35}},"292":{"start":{"line":793,"column":6},"end":{"line":793,"column":19}},"293":{"start":{"line":795,"column":6},"end":{"line":802,"column":7}},"294":{"start":{"line":797,"column":8},"end":{"line":797,"column":35}},"295":{"start":{"line":798,"column":8},"end":{"line":800,"column":9}},"296":{"start":{"line":799,"column":10},"end":{"line":799,"column":30}},"297":{"start":{"line":804,"column":11},"end":{"line":830,"column":5}},"298":{"start":{"line":811,"column":6},"end":{"line":811,"column":61}},"299":{"start":{"line":813,"column":6},"end":{"line":817,"column":7}},"300":{"start":{"line":815,"column":8},"end":{"line":815,"column":35}},"301":{"start":{"line":818,"column":6},"end":{"line":818,"column":19}},"302":{"start":{"line":819,"column":6},"end":{"line":819,"column":20}},"303":{"start":{"line":820,"column":6},"end":{"line":822,"column":7}},"304":{"start":{"line":821,"column":8},"end":{"line":821,"column":28}},"305":{"start":{"line":827,"column":6},"end":{"line":827,"column":28}},"306":{"start":{"line":828,"column":6},"end":{"line":828,"column":19}},"307":{"start":{"line":829,"column":6},"end":{"line":829,"column":20}},"308":{"start":{"line":833,"column":2},"end":{"line":839,"column":3}},"309":{"start":{"line":836,"column":4},"end":{"line":836,"column":59}},"310":{"start":{"line":838,"column":4},"end":{"line":838,"column":26}},"311":{"start":{"line":840,"column":2},"end":{"line":840,"column":65}},"312":{"start":{"line":841,"column":2},"end":{"line":849,"column":3}},"313":{"start":{"line":843,"column":4},"end":{"line":843,"column":30}},"314":{"start":{"line":844,"column":4},"end":{"line":846,"column":5}},"315":{"start":{"line":845,"column":6},"end":{"line":845,"column":31}},"316":{"start":{"line":848,"column":4},"end":{"line":848,"column":26}},"317":{"start":{"line":850,"column":2},"end":{"line":857,"column":3}},"318":{"start":{"line":852,"column":4},"end":{"line":852,"column":31}},"319":{"start":{"line":853,"column":4},"end":{"line":855,"column":5}},"320":{"start":{"line":854,"column":6},"end":{"line":854,"column":26}},"321":{"start":{"line":859,"column":2},"end":{"line":859,"column":23}},"322":{"start":{"line":868,"column":0},"end":{"line":957,"column":1}},"323":{"start":{"line":869,"column":2},"end":{"line":869,"column":13}},"324":{"start":{"line":870,"column":2},"end":{"line":870,"column":11}},"325":{"start":{"line":871,"column":2},"end":{"line":871,"column":19}},"326":{"start":{"line":873,"column":2},"end":{"line":873,"column":22}},"327":{"start":{"line":875,"column":2},"end":{"line":937,"column":3}},"328":{"start":{"line":880,"column":4},"end":{"line":886,"column":5}},"329":{"start":{"line":881,"column":6},"end":{"line":881,"column":21}},"330":{"start":{"line":882,"column":6},"end":{"line":884,"column":7}},"331":{"start":{"line":883,"column":8},"end":{"line":883,"column":28}},"332":{"start":{"line":885,"column":6},"end":{"line":885,"column":39}},"333":{"start":{"line":885,"column":31},"end":{"line":885,"column":37}},"334":{"start":{"line":889,"column":4},"end":{"line":889,"column":23}},"335":{"start":{"line":890,"column":4},"end":{"line":908,"column":5}},"336":{"start":{"line":891,"column":6},"end":{"line":891,"column":28}},"337":{"start":{"line":892,"column":6},"end":{"line":892,"column":24}},"338":{"start":{"line":893,"column":6},"end":{"line":906,"column":7}},"339":{"start":{"line":894,"column":8},"end":{"line":894,"column":40}},"340":{"start":{"line":895,"column":8},"end":{"line":901,"column":32}},"341":{"start":{"line":902,"column":8},"end":{"line":902,"column":53}},"342":{"start":{"line":903,"column":8},"end":{"line":905,"column":9}},"343":{"start":{"line":904,"column":10},"end":{"line":904,"column":39}},"344":{"start":{"line":911,"column":4},"end":{"line":928,"column":5}},"345":{"start":{"line":915,"column":6},"end":{"line":915,"column":65}},"346":{"start":{"line":917,"column":6},"end":{"line":917,"column":36}},"347":{"start":{"line":918,"column":6},"end":{"line":918,"column":35}},"348":{"start":{"line":919,"column":6},"end":{"line":919,"column":25}},"349":{"start":{"line":924,"column":6},"end":{"line":924,"column":59}},"350":{"start":{"line":926,"column":6},"end":{"line":926,"column":20}},"351":{"start":{"line":927,"column":6},"end":{"line":927,"column":19}},"352":{"start":{"line":929,"column":4},"end":{"line":936,"column":5}},"353":{"start":{"line":931,"column":6},"end":{"line":931,"column":33}},"354":{"start":{"line":932,"column":6},"end":{"line":934,"column":7}},"355":{"start":{"line":933,"column":8},"end":{"line":933,"column":28}},"356":{"start":{"line":938,"column":2},"end":{"line":938,"column":15}},"357":{"start":{"line":939,"column":2},"end":{"line":947,"column":3}},"358":{"start":{"line":941,"column":4},"end":{"line":941,"column":30}},"359":{"start":{"line":942,"column":4},"end":{"line":944,"column":5}},"360":{"start":{"line":943,"column":6},"end":{"line":943,"column":31}},"361":{"start":{"line":946,"column":4},"end":{"line":946,"column":26}},"362":{"start":{"line":948,"column":2},"end":{"line":955,"column":3}},"363":{"start":{"line":950,"column":4},"end":{"line":950,"column":31}},"364":{"start":{"line":951,"column":4},"end":{"line":953,"column":5}},"365":{"start":{"line":952,"column":6},"end":{"line":952,"column":26}},"366":{"start":{"line":956,"column":2},"end":{"line":956,"column":23}},"367":{"start":{"line":963,"column":0},"end":{"line":1013,"column":1}},"368":{"start":{"line":964,"column":2},"end":{"line":964,"column":13}},"369":{"start":{"line":966,"column":2},"end":{"line":993,"column":3}},"370":{"start":{"line":968,"column":4},"end":{"line":976,"column":5}},"371":{"start":{"line":969,"column":6},"end":{"line":969,"column":21}},"372":{"start":{"line":970,"column":6},"end":{"line":975,"column":7}},"373":{"start":{"line":971,"column":8},"end":{"line":973,"column":9}},"374":{"start":{"line":972,"column":10},"end":{"line":972,"column":30}},"375":{"start":{"line":974,"column":8},"end":{"line":974,"column":14}},"376":{"start":{"line":979,"column":4},"end":{"line":979,"column":23}},"377":{"start":{"line":982,"column":4},"end":{"line":982,"column":57}},"378":{"start":{"line":983,"column":4},"end":{"line":983,"column":18}},"379":{"start":{"line":984,"column":4},"end":{"line":984,"column":17}},"380":{"start":{"line":985,"column":4},"end":{"line":992,"column":5}},"381":{"start":{"line":987,"column":6},"end":{"line":987,"column":33}},"382":{"start":{"line":988,"column":6},"end":{"line":990,"column":7}},"383":{"start":{"line":989,"column":8},"end":{"line":989,"column":28}},"384":{"start":{"line":994,"column":2},"end":{"line":994,"column":15}},"385":{"start":{"line":995,"column":2},"end":{"line":1003,"column":3}},"386":{"start":{"line":997,"column":4},"end":{"line":997,"column":30}},"387":{"start":{"line":998,"column":4},"end":{"line":1000,"column":5}},"388":{"start":{"line":999,"column":6},"end":{"line":999,"column":31}},"389":{"start":{"line":1002,"column":4},"end":{"line":1002,"column":26}},"390":{"start":{"line":1004,"column":2},"end":{"line":1011,"column":3}},"391":{"start":{"line":1006,"column":4},"end":{"line":1006,"column":31}},"392":{"start":{"line":1007,"column":4},"end":{"line":1009,"column":5}},"393":{"start":{"line":1008,"column":6},"end":{"line":1008,"column":26}},"394":{"start":{"line":1012,"column":2},"end":{"line":1012,"column":23}},"395":{"start":{"line":1020,"column":0},"end":{"line":1026,"column":2}},"396":{"start":{"line":1021,"column":2},"end":{"line":1021,"column":33}},"397":{"start":{"line":1022,"column":2},"end":{"line":1022,"column":27}},"398":{"start":{"line":1023,"column":2},"end":{"line":1023,"column":33}},"399":{"start":{"line":1024,"column":2},"end":{"line":1024,"column":29}},"400":{"start":{"line":1025,"column":2},"end":{"line":1025,"column":19}},"401":{"start":{"line":1028,"column":0},"end":{"line":1028,"column":24}},"402":{"start":{"line":1030,"column":0},"end":{"line":1043,"column":2}},"403":{"start":{"line":1049,"column":0},"end":{"line":1069,"column":1}},"404":{"start":{"line":1050,"column":2},"end":{"line":1050,"column":31}},"405":{"start":{"line":1053,"column":2},"end":{"line":1053,"column":15}},"406":{"start":{"line":1057,"column":2},"end":{"line":1057,"column":59}},"407":{"start":{"line":1058,"column":2},"end":{"line":1058,"column":58}},"408":{"start":{"line":1059,"column":2},"end":{"line":1059,"column":58}},"409":{"start":{"line":1060,"column":2},"end":{"line":1060,"column":62}},"410":{"start":{"line":1062,"column":2},"end":{"line":1062,"column":17}},"411":{"start":{"line":1063,"column":2},"end":{"line":1063,"column":20}},"412":{"start":{"line":1064,"column":2},"end":{"line":1064,"column":18}},"413":{"start":{"line":1065,"column":2},"end":{"line":1065,"column":15}},"414":{"start":{"line":1066,"column":2},"end":{"line":1066,"column":49}},"415":{"start":{"line":1067,"column":2},"end":{"line":1067,"column":24}},"416":{"start":{"line":1068,"column":2},"end":{"line":1068,"column":14}},"417":{"start":{"line":1072,"column":0},"end":{"line":1258,"column":1}},"418":{"start":{"line":1073,"column":2},"end":{"line":1073,"column":19}},"419":{"start":{"line":1074,"column":2},"end":{"line":1074,"column":18}},"420":{"start":{"line":1075,"column":2},"end":{"line":1075,"column":26}},"421":{"start":{"line":1076,"column":2},"end":{"line":1076,"column":28}},"422":{"start":{"line":1077,"column":2},"end":{"line":1077,"column":23}},"423":{"start":{"line":1078,"column":2},"end":{"line":1078,"column":19}},"424":{"start":{"line":1079,"column":2},"end":{"line":1079,"column":16}},"425":{"start":{"line":1080,"column":2},"end":{"line":1080,"column":21}},"426":{"start":{"line":1081,"column":2},"end":{"line":1081,"column":19}},"427":{"start":{"line":1082,"column":2},"end":{"line":1082,"column":27}},"428":{"start":{"line":1083,"column":2},"end":{"line":1083,"column":23}},"429":{"start":{"line":1085,"column":2},"end":{"line":1085,"column":18}},"430":{"start":{"line":1086,"column":2},"end":{"line":1086,"column":18}},"431":{"start":{"line":1087,"column":2},"end":{"line":1087,"column":18}},"432":{"start":{"line":1089,"column":2},"end":{"line":1089,"column":21}},"433":{"start":{"line":1097,"column":2},"end":{"line":1097,"column":23}},"434":{"start":{"line":1102,"column":2},"end":{"line":1102,"column":19}},"435":{"start":{"line":1108,"column":2},"end":{"line":1108,"column":19}},"436":{"start":{"line":1110,"column":2},"end":{"line":1110,"column":17}},"437":{"start":{"line":1111,"column":2},"end":{"line":1111,"column":21}},"438":{"start":{"line":1112,"column":2},"end":{"line":1112,"column":21}},"439":{"start":{"line":1113,"column":2},"end":{"line":1113,"column":21}},"440":{"start":{"line":1115,"column":2},"end":{"line":1115,"column":22}},"441":{"start":{"line":1122,"column":2},"end":{"line":1122,"column":23}},"442":{"start":{"line":1127,"column":2},"end":{"line":1127,"column":24}},"443":{"start":{"line":1128,"column":2},"end":{"line":1128,"column":22}},"444":{"start":{"line":1129,"column":2},"end":{"line":1129,"column":27}},"445":{"start":{"line":1130,"column":2},"end":{"line":1130,"column":20}},"446":{"start":{"line":1131,"column":2},"end":{"line":1131,"column":23}},"447":{"start":{"line":1132,"column":2},"end":{"line":1132,"column":21}},"448":{"start":{"line":1134,"column":2},"end":{"line":1134,"column":23}},"449":{"start":{"line":1139,"column":2},"end":{"line":1139,"column":28}},"450":{"start":{"line":1145,"column":2},"end":{"line":1145,"column":26}},"451":{"start":{"line":1157,"column":2},"end":{"line":1157,"column":17}},"452":{"start":{"line":1158,"column":2},"end":{"line":1158,"column":20}},"453":{"start":{"line":1160,"column":2},"end":{"line":1160,"column":22}},"454":{"start":{"line":1163,"column":2},"end":{"line":1163,"column":22}},"455":{"start":{"line":1175,"column":2},"end":{"line":1175,"column":51}},"456":{"start":{"line":1176,"column":2},"end":{"line":1176,"column":55}},"457":{"start":{"line":1177,"column":2},"end":{"line":1177,"column":56}},"458":{"start":{"line":1178,"column":2},"end":{"line":1178,"column":23}},"459":{"start":{"line":1179,"column":2},"end":{"line":1179,"column":23}},"460":{"start":{"line":1180,"column":2},"end":{"line":1180,"column":21}},"461":{"start":{"line":1182,"column":2},"end":{"line":1182,"column":23}},"462":{"start":{"line":1183,"column":2},"end":{"line":1183,"column":23}},"463":{"start":{"line":1184,"column":2},"end":{"line":1184,"column":23}},"464":{"start":{"line":1187,"column":2},"end":{"line":1187,"column":46}},"465":{"start":{"line":1191,"column":2},"end":{"line":1191,"column":43}},"466":{"start":{"line":1192,"column":2},"end":{"line":1192,"column":18}},"467":{"start":{"line":1194,"column":2},"end":{"line":1194,"column":20}},"468":{"start":{"line":1195,"column":2},"end":{"line":1195,"column":20}},"469":{"start":{"line":1200,"column":2},"end":{"line":1200,"column":44}},"470":{"start":{"line":1201,"column":2},"end":{"line":1201,"column":19}},"471":{"start":{"line":1205,"column":2},"end":{"line":1205,"column":17}},"472":{"start":{"line":1207,"column":2},"end":{"line":1207,"column":23}},"473":{"start":{"line":1227,"column":2},"end":{"line":1227,"column":20}},"474":{"start":{"line":1229,"column":2},"end":{"line":1229,"column":17}},"475":{"start":{"line":1235,"column":2},"end":{"line":1235,"column":19}},"476":{"start":{"line":1236,"column":2},"end":{"line":1236,"column":22}},"477":{"start":{"line":1237,"column":2},"end":{"line":1237,"column":19}},"478":{"start":{"line":1238,"column":2},"end":{"line":1238,"column":18}},"479":{"start":{"line":1241,"column":2},"end":{"line":1241,"column":18}},"480":{"start":{"line":1245,"column":2},"end":{"line":1245,"column":20}},"481":{"start":{"line":1261,"column":0},"end":{"line":1287,"column":1}},"482":{"start":{"line":1262,"column":2},"end":{"line":1262,"column":8}},"483":{"start":{"line":1264,"column":2},"end":{"line":1266,"column":3}},"484":{"start":{"line":1265,"column":4},"end":{"line":1265,"column":37}},"485":{"start":{"line":1268,"column":2},"end":{"line":1268,"column":37}},"486":{"start":{"line":1269,"column":2},"end":{"line":1269,"column":29}},"487":{"start":{"line":1271,"column":2},"end":{"line":1271,"column":17}},"488":{"start":{"line":1272,"column":2},"end":{"line":1272,"column":16}},"489":{"start":{"line":1273,"column":2},"end":{"line":1273,"column":20}},"490":{"start":{"line":1275,"column":2},"end":{"line":1278,"column":3}},"491":{"start":{"line":1276,"column":4},"end":{"line":1276,"column":21}},"492":{"start":{"line":1279,"column":2},"end":{"line":1279,"column":48}},"493":{"start":{"line":1280,"column":2},"end":{"line":1283,"column":6}},"494":{"start":{"line":1284,"column":2},"end":{"line":1284,"column":28}},"495":{"start":{"line":1285,"column":2},"end":{"line":1285,"column":20}},"496":{"start":{"line":1286,"column":2},"end":{"line":1286,"column":14}},"497":{"start":{"line":1290,"column":0},"end":{"line":1296,"column":1}},"498":{"start":{"line":1291,"column":2},"end":{"line":1291,"column":35}},"499":{"start":{"line":1292,"column":2},"end":{"line":1294,"column":3}},"500":{"start":{"line":1293,"column":4},"end":{"line":1293,"column":24}},"501":{"start":{"line":1295,"column":2},"end":{"line":1295,"column":13}},"502":{"start":{"line":1299,"column":0},"end":{"line":1304,"column":1}},"503":{"start":{"line":1300,"column":2},"end":{"line":1300,"column":54}},"504":{"start":{"line":1300,"column":30},"end":{"line":1300,"column":52}},"505":{"start":{"line":1301,"column":2},"end":{"line":1301,"column":55}},"506":{"start":{"line":1301,"column":31},"end":{"line":1301,"column":53}},"507":{"start":{"line":1302,"column":2},"end":{"line":1302,"column":27}},"508":{"start":{"line":1303,"column":2},"end":{"line":1303,"column":14}},"509":{"start":{"line":1307,"column":0},"end":{"line":1376,"column":1}},"510":{"start":{"line":1308,"column":2},"end":{"line":1310,"column":3}},"511":{"start":{"line":1309,"column":4},"end":{"line":1309,"column":26}},"512":{"start":{"line":1311,"column":2},"end":{"line":1311,"column":15}},"513":{"start":{"line":1313,"column":2},"end":{"line":1315,"column":3}},"514":{"start":{"line":1314,"column":4},"end":{"line":1314,"column":14}},"515":{"start":{"line":1317,"column":2},"end":{"line":1325,"column":3}},"516":{"start":{"line":1318,"column":4},"end":{"line":1318,"column":13}},"517":{"start":{"line":1319,"column":4},"end":{"line":1319,"column":29}},"518":{"start":{"line":1322,"column":7},"end":{"line":1325,"column":3}},"519":{"start":{"line":1323,"column":4},"end":{"line":1323,"column":13}},"520":{"start":{"line":1324,"column":4},"end":{"line":1324,"column":21}},"521":{"start":{"line":1328,"column":2},"end":{"line":1332,"column":3}},"522":{"start":{"line":1331,"column":4},"end":{"line":1331,"column":37}},"523":{"start":{"line":1335,"column":2},"end":{"line":1337,"column":3}},"524":{"start":{"line":1336,"column":4},"end":{"line":1336,"column":19}},"525":{"start":{"line":1340,"column":2},"end":{"line":1340,"column":29}},"526":{"start":{"line":1342,"column":2},"end":{"line":1342,"column":17}},"527":{"start":{"line":1343,"column":2},"end":{"line":1343,"column":16}},"528":{"start":{"line":1345,"column":2},"end":{"line":1345,"column":16}},"529":{"start":{"line":1346,"column":2},"end":{"line":1346,"column":18}},"530":{"start":{"line":1347,"column":2},"end":{"line":1347,"column":24}},"531":{"start":{"line":1348,"column":2},"end":{"line":1348,"column":27}},"532":{"start":{"line":1349,"column":2},"end":{"line":1349,"column":26}},"533":{"start":{"line":1351,"column":2},"end":{"line":1351,"column":29}},"534":{"start":{"line":1352,"column":2},"end":{"line":1352,"column":33}},"535":{"start":{"line":1353,"column":2},"end":{"line":1353,"column":32}},"536":{"start":{"line":1354,"column":2},"end":{"line":1354,"column":63}},"537":{"start":{"line":1356,"column":2},"end":{"line":1356,"column":42}},"538":{"start":{"line":1357,"column":2},"end":{"line":1357,"column":40}},"539":{"start":{"line":1358,"column":2},"end":{"line":1358,"column":37}},"540":{"start":{"line":1363,"column":2},"end":{"line":1363,"column":38}},"541":{"start":{"line":1365,"column":2},"end":{"line":1365,"column":41}},"542":{"start":{"line":1366,"column":2},"end":{"line":1366,"column":53}},"543":{"start":{"line":1368,"column":2},"end":{"line":1368,"column":31}},"544":{"start":{"line":1369,"column":2},"end":{"line":1369,"column":36}},"545":{"start":{"line":1371,"column":2},"end":{"line":1371,"column":18}},"546":{"start":{"line":1372,"column":2},"end":{"line":1372,"column":24}},"547":{"start":{"line":1373,"column":2},"end":{"line":1373,"column":20}},"548":{"start":{"line":1375,"column":2},"end":{"line":1375,"column":28}},"549":{"start":{"line":1378,"column":0},"end":{"line":1380,"column":1}},"550":{"start":{"line":1379,"column":2},"end":{"line":1379,"column":93}},"551":{"start":{"line":1383,"column":0},"end":{"line":1715,"column":1}},"552":{"start":{"line":1384,"column":2},"end":{"line":1384,"column":19}},"553":{"start":{"line":1385,"column":2},"end":{"line":1385,"column":15}},"554":{"start":{"line":1387,"column":2},"end":{"line":1390,"column":3}},"555":{"start":{"line":1389,"column":4},"end":{"line":1389,"column":61}},"556":{"start":{"line":1392,"column":2},"end":{"line":1392,"column":17}},"557":{"start":{"line":1394,"column":2},"end":{"line":1398,"column":3}},"558":{"start":{"line":1397,"column":4},"end":{"line":1397,"column":76}},"559":{"start":{"line":1400,"column":2},"end":{"line":1400,"column":16}},"560":{"start":{"line":1401,"column":2},"end":{"line":1401,"column":27}},"561":{"start":{"line":1402,"column":2},"end":{"line":1402,"column":23}},"562":{"start":{"line":1405,"column":2},"end":{"line":1478,"column":3}},"563":{"start":{"line":1407,"column":4},"end":{"line":1477,"column":5}},"564":{"start":{"line":1408,"column":6},"end":{"line":1408,"column":21}},"565":{"start":{"line":1409,"column":6},"end":{"line":1409,"column":22}},"566":{"start":{"line":1410,"column":6},"end":{"line":1410,"column":23}},"567":{"start":{"line":1411,"column":6},"end":{"line":1411,"column":21}},"568":{"start":{"line":1412,"column":6},"end":{"line":1448,"column":7}},"569":{"start":{"line":1413,"column":8},"end":{"line":1413,"column":23}},"570":{"start":{"line":1414,"column":8},"end":{"line":1414,"column":23}},"571":{"start":{"line":1415,"column":8},"end":{"line":1415,"column":23}},"572":{"start":{"line":1416,"column":8},"end":{"line":1416,"column":23}},"573":{"start":{"line":1417,"column":8},"end":{"line":1417,"column":23}},"574":{"start":{"line":1418,"column":8},"end":{"line":1420,"column":29}},"575":{"start":{"line":1421,"column":8},"end":{"line":1421,"column":29}},"576":{"start":{"line":1422,"column":8},"end":{"line":1422,"column":30}},"577":{"start":{"line":1425,"column":8},"end":{"line":1430,"column":18}},"578":{"start":{"line":1431,"column":8},"end":{"line":1431,"column":42}},"579":{"start":{"line":1432,"column":8},"end":{"line":1432,"column":49}},"580":{"start":{"line":1433,"column":8},"end":{"line":1433,"column":50}},"581":{"start":{"line":1434,"column":8},"end":{"line":1434,"column":50}},"582":{"start":{"line":1435,"column":8},"end":{"line":1437,"column":29}},"583":{"start":{"line":1438,"column":8},"end":{"line":1438,"column":40}},"584":{"start":{"line":1439,"column":8},"end":{"line":1442,"column":9}},"585":{"start":{"line":1440,"column":10},"end":{"line":1440,"column":52}},"586":{"start":{"line":1441,"column":10},"end":{"line":1441,"column":59}},"587":{"start":{"line":1443,"column":8},"end":{"line":1445,"column":9}},"588":{"start":{"line":1444,"column":10},"end":{"line":1444,"column":70}},"589":{"start":{"line":1446,"column":8},"end":{"line":1446,"column":22}},"590":{"start":{"line":1447,"column":8},"end":{"line":1447,"column":31}},"591":{"start":{"line":1452,"column":6},"end":{"line":1452,"column":61}},"592":{"start":{"line":1453,"column":6},"end":{"line":1453,"column":27}},"593":{"start":{"line":1455,"column":6},"end":{"line":1463,"column":7}},"594":{"start":{"line":1456,"column":8},"end":{"line":1456,"column":24}},"595":{"start":{"line":1457,"column":13},"end":{"line":1463,"column":7}},"596":{"start":{"line":1458,"column":8},"end":{"line":1458,"column":24}},"597":{"start":{"line":1459,"column":13},"end":{"line":1463,"column":7}},"598":{"start":{"line":1460,"column":8},"end":{"line":1460,"column":24}},"599":{"start":{"line":1462,"column":8},"end":{"line":1462,"column":24}},"600":{"start":{"line":1464,"column":6},"end":{"line":1464,"column":35}},"601":{"start":{"line":1465,"column":6},"end":{"line":1465,"column":54}},"602":{"start":{"line":1465,"column":30},"end":{"line":1465,"column":52}},"603":{"start":{"line":1466,"column":6},"end":{"line":1466,"column":35}},"604":{"start":{"line":1468,"column":6},"end":{"line":1468,"column":28}},"605":{"start":{"line":1469,"column":6},"end":{"line":1469,"column":29}},"606":{"start":{"line":1472,"column":6},"end":{"line":1475,"column":7}},"607":{"start":{"line":1473,"column":8},"end":{"line":1473,"column":42}},"608":{"start":{"line":1474,"column":8},"end":{"line":1474,"column":44}},"609":{"start":{"line":1476,"column":6},"end":{"line":1476,"column":21}},"610":{"start":{"line":1481,"column":2},"end":{"line":1510,"column":3}},"611":{"start":{"line":1482,"column":4},"end":{"line":1509,"column":5}},"612":{"start":{"line":1483,"column":6},"end":{"line":1483,"column":22}},"613":{"start":{"line":1485,"column":6},"end":{"line":1498,"column":7}},"614":{"start":{"line":1486,"column":8},"end":{"line":1495,"column":9}},"615":{"start":{"line":1487,"column":10},"end":{"line":1489,"column":11}},"616":{"start":{"line":1488,"column":12},"end":{"line":1488,"column":80}},"617":{"start":{"line":1490,"column":10},"end":{"line":1490,"column":30}},"618":{"start":{"line":1491,"column":10},"end":{"line":1491,"column":26}},"619":{"start":{"line":1492,"column":10},"end":{"line":1494,"column":11}},"620":{"start":{"line":1493,"column":12},"end":{"line":1493,"column":18}},"621":{"start":{"line":1496,"column":8},"end":{"line":1496,"column":54}},"622":{"start":{"line":1497,"column":8},"end":{"line":1497,"column":20}},"623":{"start":{"line":1499,"column":6},"end":{"line":1501,"column":7}},"624":{"start":{"line":1500,"column":8},"end":{"line":1500,"column":76}},"625":{"start":{"line":1502,"column":6},"end":{"line":1505,"column":7}},"626":{"start":{"line":1503,"column":8},"end":{"line":1503,"column":22}},"627":{"start":{"line":1504,"column":8},"end":{"line":1504,"column":30}},"628":{"start":{"line":1508,"column":6},"end":{"line":1508,"column":28}},"629":{"start":{"line":1511,"column":2},"end":{"line":1548,"column":3}},"630":{"start":{"line":1512,"column":4},"end":{"line":1547,"column":5}},"631":{"start":{"line":1513,"column":6},"end":{"line":1513,"column":22}},"632":{"start":{"line":1516,"column":6},"end":{"line":1535,"column":26}},"633":{"start":{"line":1517,"column":8},"end":{"line":1527,"column":9}},"634":{"start":{"line":1518,"column":10},"end":{"line":1520,"column":11}},"635":{"start":{"line":1519,"column":12},"end":{"line":1519,"column":80}},"636":{"start":{"line":1521,"column":10},"end":{"line":1521,"column":30}},"637":{"start":{"line":1522,"column":10},"end":{"line":1522,"column":26}},"638":{"start":{"line":1523,"column":10},"end":{"line":1526,"column":11}},"639":{"start":{"line":1524,"column":12},"end":{"line":1524,"column":20}},"640":{"start":{"line":1525,"column":12},"end":{"line":1525,"column":18}},"641":{"start":{"line":1529,"column":8},"end":{"line":1533,"column":9}},"642":{"start":{"line":1530,"column":10},"end":{"line":1530,"column":61}},"643":{"start":{"line":1532,"column":10},"end":{"line":1532,"column":18}},"644":{"start":{"line":1534,"column":8},"end":{"line":1534,"column":25}},"645":{"start":{"line":1537,"column":6},"end":{"line":1539,"column":7}},"646":{"start":{"line":1538,"column":8},"end":{"line":1538,"column":76}},"647":{"start":{"line":1540,"column":6},"end":{"line":1543,"column":7}},"648":{"start":{"line":1541,"column":8},"end":{"line":1541,"column":22}},"649":{"start":{"line":1542,"column":8},"end":{"line":1542,"column":33}},"650":{"start":{"line":1546,"column":6},"end":{"line":1546,"column":31}},"651":{"start":{"line":1549,"column":2},"end":{"line":1585,"column":3}},"652":{"start":{"line":1550,"column":4},"end":{"line":1584,"column":5}},"653":{"start":{"line":1551,"column":6},"end":{"line":1551,"column":22}},"654":{"start":{"line":1554,"column":6},"end":{"line":1573,"column":26}},"655":{"start":{"line":1555,"column":8},"end":{"line":1565,"column":9}},"656":{"start":{"line":1556,"column":10},"end":{"line":1558,"column":11}},"657":{"start":{"line":1557,"column":12},"end":{"line":1557,"column":80}},"658":{"start":{"line":1559,"column":10},"end":{"line":1559,"column":30}},"659":{"start":{"line":1560,"column":10},"end":{"line":1560,"column":26}},"660":{"start":{"line":1561,"column":10},"end":{"line":1564,"column":11}},"661":{"start":{"line":1562,"column":12},"end":{"line":1562,"column":20}},"662":{"start":{"line":1563,"column":12},"end":{"line":1563,"column":18}},"663":{"start":{"line":1567,"column":8},"end":{"line":1571,"column":9}},"664":{"start":{"line":1568,"column":10},"end":{"line":1568,"column":64}},"665":{"start":{"line":1570,"column":10},"end":{"line":1570,"column":18}},"666":{"start":{"line":1572,"column":8},"end":{"line":1572,"column":25}},"667":{"start":{"line":1575,"column":6},"end":{"line":1577,"column":7}},"668":{"start":{"line":1576,"column":8},"end":{"line":1576,"column":76}},"669":{"start":{"line":1578,"column":6},"end":{"line":1580,"column":7}},"670":{"start":{"line":1579,"column":8},"end":{"line":1579,"column":30}},"671":{"start":{"line":1583,"column":6},"end":{"line":1583,"column":28}},"672":{"start":{"line":1586,"column":2},"end":{"line":1601,"column":3}},"673":{"start":{"line":1587,"column":4},"end":{"line":1600,"column":5}},"674":{"start":{"line":1588,"column":6},"end":{"line":1590,"column":7}},"675":{"start":{"line":1589,"column":8},"end":{"line":1589,"column":28}},"676":{"start":{"line":1591,"column":6},"end":{"line":1596,"column":7}},"677":{"start":{"line":1592,"column":8},"end":{"line":1592,"column":39}},"678":{"start":{"line":1593,"column":8},"end":{"line":1593,"column":46}},"679":{"start":{"line":1594,"column":8},"end":{"line":1594,"column":23}},"680":{"start":{"line":1595,"column":8},"end":{"line":1595,"column":30}},"681":{"start":{"line":1599,"column":6},"end":{"line":1599,"column":28}},"682":{"start":{"line":1605,"column":2},"end":{"line":1625,"column":3}},"683":{"start":{"line":1606,"column":4},"end":{"line":1606,"column":24}},"684":{"start":{"line":1607,"column":4},"end":{"line":1616,"column":5}},"685":{"start":{"line":1614,"column":6},"end":{"line":1614,"column":24}},"686":{"start":{"line":1615,"column":6},"end":{"line":1615,"column":18}},"687":{"start":{"line":1622,"column":9},"end":{"line":1625,"column":3}},"688":{"start":{"line":1624,"column":4},"end":{"line":1624,"column":34}},"689":{"start":{"line":1628,"column":2},"end":{"line":1630,"column":3}},"690":{"start":{"line":1629,"column":4},"end":{"line":1629,"column":34}},"691":{"start":{"line":1634,"column":2},"end":{"line":1684,"column":3}},"692":{"start":{"line":1636,"column":4},"end":{"line":1638,"column":53}},"693":{"start":{"line":1640,"column":4},"end":{"line":1642,"column":5}},"694":{"start":{"line":1641,"column":6},"end":{"line":1641,"column":30}},"695":{"start":{"line":1643,"column":4},"end":{"line":1656,"column":5}},"696":{"start":{"line":1644,"column":6},"end":{"line":1647,"column":7}},"697":{"start":{"line":1645,"column":8},"end":{"line":1645,"column":26}},"698":{"start":{"line":1648,"column":6},"end":{"line":1648,"column":18}},"699":{"start":{"line":1657,"column":4},"end":{"line":1683,"column":5}},"700":{"start":{"line":1658,"column":6},"end":{"line":1677,"column":7}},"701":{"start":{"line":1659,"column":8},"end":{"line":1659,"column":27}},"702":{"start":{"line":1661,"column":11},"end":{"line":1677,"column":7}},"703":{"start":{"line":1663,"column":8},"end":{"line":1663,"column":47}},"704":{"start":{"line":1667,"column":8},"end":{"line":1676,"column":9}},"705":{"start":{"line":1669,"column":10},"end":{"line":1669,"column":23}},"706":{"start":{"line":1671,"column":10},"end":{"line":1675,"column":11}},"707":{"start":{"line":1672,"column":12},"end":{"line":1672,"column":27}},"708":{"start":{"line":1673,"column":12},"end":{"line":1673,"column":30}},"709":{"start":{"line":1674,"column":12},"end":{"line":1674,"column":25}},"710":{"start":{"line":1678,"column":6},"end":{"line":1678,"column":26}},"711":{"start":{"line":1679,"column":6},"end":{"line":1682,"column":7}},"712":{"start":{"line":1680,"column":8},"end":{"line":1680,"column":26}},"713":{"start":{"line":1681,"column":8},"end":{"line":1681,"column":20}},"714":{"start":{"line":1688,"column":2},"end":{"line":1688,"column":42}},"715":{"start":{"line":1688,"column":28},"end":{"line":1688,"column":40}},"716":{"start":{"line":1689,"column":2},"end":{"line":1689,"column":43}},"717":{"start":{"line":1689,"column":21},"end":{"line":1689,"column":41}},"718":{"start":{"line":1692,"column":2},"end":{"line":1706,"column":3}},"719":{"start":{"line":1693,"column":4},"end":{"line":1693,"column":35}},"720":{"start":{"line":1694,"column":4},"end":{"line":1694,"column":42}},"721":{"start":{"line":1695,"column":4},"end":{"line":1695,"column":43}},"722":{"start":{"line":1696,"column":4},"end":{"line":1696,"column":43}},"723":{"start":{"line":1697,"column":4},"end":{"line":1697,"column":38}},"724":{"start":{"line":1698,"column":4},"end":{"line":1698,"column":45}},"725":{"start":{"line":1699,"column":4},"end":{"line":1699,"column":46}},"726":{"start":{"line":1700,"column":4},"end":{"line":1700,"column":46}},"727":{"start":{"line":1704,"column":4},"end":{"line":1704,"column":38}},"728":{"start":{"line":1705,"column":4},"end":{"line":1705,"column":40}},"729":{"start":{"line":1708,"column":2},"end":{"line":1708,"column":22}},"730":{"start":{"line":1712,"column":2},"end":{"line":1712,"column":39}},"731":{"start":{"line":1712,"column":20},"end":{"line":1712,"column":37}},"732":{"start":{"line":1714,"column":2},"end":{"line":1714,"column":47}},"733":{"start":{"line":1717,"column":0},"end":{"line":1739,"column":1}},"734":{"start":{"line":1718,"column":2},"end":{"line":1718,"column":13}},"735":{"start":{"line":1720,"column":2},"end":{"line":1722,"column":3}},"736":{"start":{"line":1721,"column":4},"end":{"line":1721,"column":26}},"737":{"start":{"line":1724,"column":2},"end":{"line":1724,"column":29}},"738":{"start":{"line":1725,"column":2},"end":{"line":1734,"column":3}},"739":{"start":{"line":1733,"column":4},"end":{"line":1733,"column":37}},"740":{"start":{"line":1736,"column":2},"end":{"line":1736,"column":20}},"741":{"start":{"line":1738,"column":2},"end":{"line":1738,"column":64}},"742":{"start":{"line":1748,"column":0},"end":{"line":1748,"column":34}},"743":{"start":{"line":1749,"column":0},"end":{"line":1749,"column":36}},"744":{"start":{"line":1750,"column":0},"end":{"line":1750,"column":36}},"745":{"start":{"line":1751,"column":0},"end":{"line":1751,"column":44}},"746":{"start":{"line":1752,"column":0},"end":{"line":1752,"column":44}},"747":{"start":{"line":1753,"column":0},"end":{"line":1753,"column":26}},"748":{"start":{"line":1754,"column":0},"end":{"line":1754,"column":32}},"749":{"start":{"line":1755,"column":0},"end":{"line":1755,"column":59}}},"branchMap":{"1":{"line":112,"type":"cond-expr","locations":[{"start":{"line":112,"column":33},"end":{"line":112,"column":34}},{"start":{"line":112,"column":37},"end":{"line":112,"column":38}}]},"2":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":129,"column":2}},{"start":{"line":129,"column":2},"end":{"line":129,"column":2}}]},"3":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":2},"end":{"line":132,"column":2}},{"start":{"line":132,"column":2},"end":{"line":132,"column":2}}]},"4":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":2},"end":{"line":140,"column":2}},{"start":{"line":140,"column":2},"end":{"line":140,"column":2}}]},"5":{"line":147,"type":"cond-expr","locations":[{"start":{"line":147,"column":49},"end":{"line":147,"column":62}},{"start":{"line":147,"column":65},"end":{"line":147,"column":67}}]},"6":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":2},"end":{"line":181,"column":2}},{"start":{"line":181,"column":2},"end":{"line":181,"column":2}}]},"7":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":2},"end":{"line":182,"column":2}},{"start":{"line":182,"column":2},"end":{"line":182,"column":2}}]},"8":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":2},"end":{"line":187,"column":2}},{"start":{"line":187,"column":2},"end":{"line":187,"column":2}}]},"9":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":7},"end":{"line":191,"column":7}},{"start":{"line":191,"column":7},"end":{"line":191,"column":7}}]},"10":{"line":218,"type":"cond-expr","locations":[{"start":{"line":219,"column":6},"end":{"line":219,"column":45}},{"start":{"line":219,"column":48},"end":{"line":219,"column":49}}]},"11":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":2},"end":{"line":240,"column":2}},{"start":{"line":240,"column":2},"end":{"line":240,"column":2}}]},"12":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":2},"end":{"line":246,"column":2}},{"start":{"line":246,"column":2},"end":{"line":246,"column":2}}]},"13":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":4},"end":{"line":263,"column":4}},{"start":{"line":263,"column":4},"end":{"line":263,"column":4}}]},"14":{"line":263,"type":"binary-expr","locations":[{"start":{"line":263,"column":8},"end":{"line":263,"column":47}},{"start":{"line":264,"column":8},"end":{"line":264,"column":48}},{"start":{"line":265,"column":8},"end":{"line":265,"column":49}},{"start":{"line":266,"column":8},"end":{"line":266,"column":53}}]},"15":{"line":285,"type":"binary-expr","locations":[{"start":{"line":285,"column":13},"end":{"line":285,"column":43}},{"start":{"line":285,"column":47},"end":{"line":285,"column":77}},{"start":{"line":286,"column":13},"end":{"line":286,"column":43}},{"start":{"line":286,"column":47},"end":{"line":286,"column":77}},{"start":{"line":287,"column":13},"end":{"line":287,"column":43}},{"start":{"line":287,"column":47},"end":{"line":287,"column":77}},{"start":{"line":288,"column":13},"end":{"line":288,"column":43}},{"start":{"line":288,"column":47},"end":{"line":288,"column":77}},{"start":{"line":289,"column":13},"end":{"line":289,"column":26}}]},"16":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":4},"end":{"line":296,"column":4}},{"start":{"line":296,"column":4},"end":{"line":296,"column":4}}]},"17":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":6},"end":{"line":299,"column":6}},{"start":{"line":299,"column":6},"end":{"line":299,"column":6}}]},"18":{"line":305,"type":"binary-expr","locations":[{"start":{"line":305,"column":11},"end":{"line":305,"column":56}},{"start":{"line":305,"column":60},"end":{"line":305,"column":80}}]},"19":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":2},"end":{"line":307,"column":2}},{"start":{"line":307,"column":2},"end":{"line":307,"column":2}}]},"20":{"line":351,"type":"if","locations":[{"start":{"line":351,"column":4},"end":{"line":351,"column":4}},{"start":{"line":351,"column":4},"end":{"line":351,"column":4}}]},"21":{"line":370,"type":"cond-expr","locations":[{"start":{"line":370,"column":36},"end":{"line":370,"column":47}},{"start":{"line":370,"column":50},"end":{"line":370,"column":51}}]},"22":{"line":377,"type":"cond-expr","locations":[{"start":{"line":377,"column":36},"end":{"line":377,"column":47}},{"start":{"line":377,"column":50},"end":{"line":377,"column":51}}]},"23":{"line":385,"type":"if","locations":[{"start":{"line":385,"column":4},"end":{"line":385,"column":4}},{"start":{"line":385,"column":4},"end":{"line":385,"column":4}}]},"24":{"line":405,"type":"if","locations":[{"start":{"line":405,"column":4},"end":{"line":405,"column":4}},{"start":{"line":405,"column":4},"end":{"line":405,"column":4}}]},"25":{"line":422,"type":"if","locations":[{"start":{"line":422,"column":8},"end":{"line":422,"column":8}},{"start":{"line":422,"column":8},"end":{"line":422,"column":8}}]},"26":{"line":431,"type":"binary-expr","locations":[{"start":{"line":431,"column":11},"end":{"line":431,"column":38}},{"start":{"line":431,"column":42},"end":{"line":431,"column":63}}]},"27":{"line":486,"type":"if","locations":[{"start":{"line":486,"column":2},"end":{"line":486,"column":2}},{"start":{"line":486,"column":2},"end":{"line":486,"column":2}}]},"28":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":4},"end":{"line":493,"column":4}},{"start":{"line":493,"column":4},"end":{"line":493,"column":4}}]},"29":{"line":503,"type":"if","locations":[{"start":{"line":503,"column":6},"end":{"line":503,"column":6}},{"start":{"line":503,"column":6},"end":{"line":503,"column":6}}]},"30":{"line":503,"type":"binary-expr","locations":[{"start":{"line":503,"column":10},"end":{"line":503,"column":27}},{"start":{"line":503,"column":31},"end":{"line":503,"column":51}}]},"31":{"line":507,"type":"if","locations":[{"start":{"line":507,"column":6},"end":{"line":507,"column":6}},{"start":{"line":507,"column":6},"end":{"line":507,"column":6}}]},"32":{"line":521,"type":"if","locations":[{"start":{"line":521,"column":4},"end":{"line":521,"column":4}},{"start":{"line":521,"column":4},"end":{"line":521,"column":4}}]},"33":{"line":521,"type":"binary-expr","locations":[{"start":{"line":521,"column":8},"end":{"line":521,"column":24}},{"start":{"line":521,"column":28},"end":{"line":521,"column":51}}]},"34":{"line":527,"type":"if","locations":[{"start":{"line":527,"column":6},"end":{"line":527,"column":6}},{"start":{"line":527,"column":6},"end":{"line":527,"column":6}}]},"35":{"line":537,"type":"if","locations":[{"start":{"line":537,"column":4},"end":{"line":537,"column":4}},{"start":{"line":537,"column":4},"end":{"line":537,"column":4}}]},"36":{"line":540,"type":"if","locations":[{"start":{"line":540,"column":6},"end":{"line":540,"column":6}},{"start":{"line":540,"column":6},"end":{"line":540,"column":6}}]},"37":{"line":549,"type":"if","locations":[{"start":{"line":549,"column":2},"end":{"line":549,"column":2}},{"start":{"line":549,"column":2},"end":{"line":549,"column":2}}]},"38":{"line":552,"type":"if","locations":[{"start":{"line":552,"column":4},"end":{"line":552,"column":4}},{"start":{"line":552,"column":4},"end":{"line":552,"column":4}}]},"39":{"line":559,"type":"if","locations":[{"start":{"line":559,"column":2},"end":{"line":559,"column":2}},{"start":{"line":559,"column":2},"end":{"line":559,"column":2}}]},"40":{"line":562,"type":"if","locations":[{"start":{"line":562,"column":4},"end":{"line":562,"column":4}},{"start":{"line":562,"column":4},"end":{"line":562,"column":4}}]},"41":{"line":588,"type":"if","locations":[{"start":{"line":588,"column":4},"end":{"line":588,"column":4}},{"start":{"line":588,"column":4},"end":{"line":588,"column":4}}]},"42":{"line":590,"type":"if","locations":[{"start":{"line":590,"column":6},"end":{"line":590,"column":6}},{"start":{"line":590,"column":6},"end":{"line":590,"column":6}}]},"43":{"line":590,"type":"binary-expr","locations":[{"start":{"line":590,"column":10},"end":{"line":590,"column":37}},{"start":{"line":590,"column":41},"end":{"line":590,"column":61}}]},"44":{"line":593,"type":"if","locations":[{"start":{"line":593,"column":6},"end":{"line":593,"column":6}},{"start":{"line":593,"column":6},"end":{"line":593,"column":6}}]},"45":{"line":602,"type":"if","locations":[{"start":{"line":602,"column":4},"end":{"line":602,"column":4}},{"start":{"line":602,"column":4},"end":{"line":602,"column":4}}]},"46":{"line":613,"type":"if","locations":[{"start":{"line":613,"column":4},"end":{"line":613,"column":4}},{"start":{"line":613,"column":4},"end":{"line":613,"column":4}}]},"47":{"line":613,"type":"binary-expr","locations":[{"start":{"line":613,"column":8},"end":{"line":613,"column":23}},{"start":{"line":613,"column":35},"end":{"line":613,"column":89}}]},"48":{"line":621,"type":"if","locations":[{"start":{"line":621,"column":4},"end":{"line":621,"column":4}},{"start":{"line":621,"column":4},"end":{"line":621,"column":4}}]},"49":{"line":633,"type":"if","locations":[{"start":{"line":633,"column":6},"end":{"line":633,"column":6}},{"start":{"line":633,"column":6},"end":{"line":633,"column":6}}]},"50":{"line":633,"type":"binary-expr","locations":[{"start":{"line":633,"column":10},"end":{"line":633,"column":44}},{"start":{"line":633,"column":69},"end":{"line":633,"column":93}}]},"51":{"line":671,"type":"if","locations":[{"start":{"line":671,"column":4},"end":{"line":671,"column":4}},{"start":{"line":671,"column":4},"end":{"line":671,"column":4}}]},"52":{"line":674,"type":"if","locations":[{"start":{"line":674,"column":6},"end":{"line":674,"column":6}},{"start":{"line":674,"column":6},"end":{"line":674,"column":6}}]},"53":{"line":680,"type":"cond-expr","locations":[{"start":{"line":680,"column":45},"end":{"line":680,"column":55}},{"start":{"line":680,"column":58},"end":{"line":680,"column":69}}]},"54":{"line":681,"type":"if","locations":[{"start":{"line":681,"column":2},"end":{"line":681,"column":2}},{"start":{"line":681,"column":2},"end":{"line":681,"column":2}}]},"55":{"line":684,"type":"if","locations":[{"start":{"line":684,"column":4},"end":{"line":684,"column":4}},{"start":{"line":684,"column":4},"end":{"line":684,"column":4}}]},"56":{"line":690,"type":"if","locations":[{"start":{"line":690,"column":2},"end":{"line":690,"column":2}},{"start":{"line":690,"column":2},"end":{"line":690,"column":2}}]},"57":{"line":693,"type":"if","locations":[{"start":{"line":693,"column":4},"end":{"line":693,"column":4}},{"start":{"line":693,"column":4},"end":{"line":693,"column":4}}]},"58":{"line":719,"type":"if","locations":[{"start":{"line":719,"column":4},"end":{"line":719,"column":4}},{"start":{"line":719,"column":4},"end":{"line":719,"column":4}}]},"59":{"line":721,"type":"if","locations":[{"start":{"line":721,"column":6},"end":{"line":721,"column":6}},{"start":{"line":721,"column":6},"end":{"line":721,"column":6}}]},"60":{"line":721,"type":"binary-expr","locations":[{"start":{"line":721,"column":10},"end":{"line":721,"column":37}},{"start":{"line":721,"column":41},"end":{"line":721,"column":61}}]},"61":{"line":724,"type":"if","locations":[{"start":{"line":724,"column":6},"end":{"line":724,"column":6}},{"start":{"line":724,"column":6},"end":{"line":724,"column":6}}]},"62":{"line":731,"type":"if","locations":[{"start":{"line":731,"column":4},"end":{"line":731,"column":4}},{"start":{"line":731,"column":4},"end":{"line":731,"column":4}}]},"63":{"line":745,"type":"if","locations":[{"start":{"line":745,"column":4},"end":{"line":745,"column":4}},{"start":{"line":745,"column":4},"end":{"line":745,"column":4}}]},"64":{"line":745,"type":"binary-expr","locations":[{"start":{"line":745,"column":8},"end":{"line":745,"column":23}},{"start":{"line":745,"column":34},"end":{"line":745,"column":66}},{"start":{"line":746,"column":8},"end":{"line":746,"column":58}}]},"65":{"line":754,"type":"if","locations":[{"start":{"line":754,"column":6},"end":{"line":754,"column":6}},{"start":{"line":754,"column":6},"end":{"line":754,"column":6}}]},"66":{"line":754,"type":"binary-expr","locations":[{"start":{"line":754,"column":10},"end":{"line":754,"column":29}},{"start":{"line":755,"column":10},"end":{"line":755,"column":35}},{"start":{"line":755,"column":40},"end":{"line":755,"column":68}},{"start":{"line":755,"column":72},"end":{"line":755,"column":105}}]},"67":{"line":766,"type":"if","locations":[{"start":{"line":766,"column":4},"end":{"line":766,"column":4}},{"start":{"line":766,"column":4},"end":{"line":766,"column":4}}]},"68":{"line":766,"type":"binary-expr","locations":[{"start":{"line":766,"column":8},"end":{"line":766,"column":34}},{"start":{"line":766,"column":38},"end":{"line":766,"column":69}}]},"69":{"line":783,"type":"if","locations":[{"start":{"line":783,"column":8},"end":{"line":783,"column":8}},{"start":{"line":783,"column":8},"end":{"line":783,"column":8}}]},"70":{"line":795,"type":"if","locations":[{"start":{"line":795,"column":6},"end":{"line":795,"column":6}},{"start":{"line":795,"column":6},"end":{"line":795,"column":6}}]},"71":{"line":798,"type":"if","locations":[{"start":{"line":798,"column":8},"end":{"line":798,"column":8}},{"start":{"line":798,"column":8},"end":{"line":798,"column":8}}]},"72":{"line":804,"type":"if","locations":[{"start":{"line":804,"column":11},"end":{"line":804,"column":11}},{"start":{"line":804,"column":11},"end":{"line":804,"column":11}}]},"73":{"line":813,"type":"if","locations":[{"start":{"line":813,"column":6},"end":{"line":813,"column":6}},{"start":{"line":813,"column":6},"end":{"line":813,"column":6}}]},"74":{"line":820,"type":"if","locations":[{"start":{"line":820,"column":6},"end":{"line":820,"column":6}},{"start":{"line":820,"column":6},"end":{"line":820,"column":6}}]},"75":{"line":833,"type":"if","locations":[{"start":{"line":833,"column":2},"end":{"line":833,"column":2}},{"start":{"line":833,"column":2},"end":{"line":833,"column":2}}]},"76":{"line":840,"type":"cond-expr","locations":[{"start":{"line":840,"column":40},"end":{"line":840,"column":50}},{"start":{"line":840,"column":53},"end":{"line":840,"column":64}}]},"77":{"line":841,"type":"if","locations":[{"start":{"line":841,"column":2},"end":{"line":841,"column":2}},{"start":{"line":841,"column":2},"end":{"line":841,"column":2}}]},"78":{"line":844,"type":"if","locations":[{"start":{"line":844,"column":4},"end":{"line":844,"column":4}},{"start":{"line":844,"column":4},"end":{"line":844,"column":4}}]},"79":{"line":850,"type":"if","locations":[{"start":{"line":850,"column":2},"end":{"line":850,"column":2}},{"start":{"line":850,"column":2},"end":{"line":850,"column":2}}]},"80":{"line":853,"type":"if","locations":[{"start":{"line":853,"column":4},"end":{"line":853,"column":4}},{"start":{"line":853,"column":4},"end":{"line":853,"column":4}}]},"81":{"line":880,"type":"if","locations":[{"start":{"line":880,"column":4},"end":{"line":880,"column":4}},{"start":{"line":880,"column":4},"end":{"line":880,"column":4}}]},"82":{"line":882,"type":"if","locations":[{"start":{"line":882,"column":6},"end":{"line":882,"column":6}},{"start":{"line":882,"column":6},"end":{"line":882,"column":6}}]},"83":{"line":882,"type":"binary-expr","locations":[{"start":{"line":882,"column":10},"end":{"line":882,"column":34}},{"start":{"line":882,"column":38},"end":{"line":882,"column":58}}]},"84":{"line":885,"type":"if","locations":[{"start":{"line":885,"column":6},"end":{"line":885,"column":6}},{"start":{"line":885,"column":6},"end":{"line":885,"column":6}}]},"85":{"line":890,"type":"if","locations":[{"start":{"line":890,"column":4},"end":{"line":890,"column":4}},{"start":{"line":890,"column":4},"end":{"line":890,"column":4}}]},"86":{"line":890,"type":"binary-expr","locations":[{"start":{"line":890,"column":8},"end":{"line":890,"column":32}},{"start":{"line":890,"column":36},"end":{"line":890,"column":50}}]},"87":{"line":893,"type":"if","locations":[{"start":{"line":893,"column":6},"end":{"line":893,"column":6}},{"start":{"line":893,"column":6},"end":{"line":893,"column":6}}]},"88":{"line":893,"type":"binary-expr","locations":[{"start":{"line":893,"column":10},"end":{"line":893,"column":31}},{"start":{"line":893,"column":35},"end":{"line":893,"column":56}},{"start":{"line":893,"column":60},"end":{"line":893,"column":81}}]},"89":{"line":897,"type":"binary-expr","locations":[{"start":{"line":897,"column":17},"end":{"line":897,"column":38}},{"start":{"line":897,"column":42},"end":{"line":897,"column":63}},{"start":{"line":898,"column":17},"end":{"line":898,"column":38}},{"start":{"line":898,"column":42},"end":{"line":898,"column":63}},{"start":{"line":899,"column":17},"end":{"line":899,"column":38}},{"start":{"line":899,"column":42},"end":{"line":899,"column":63}},{"start":{"line":900,"column":17},"end":{"line":900,"column":38}},{"start":{"line":900,"column":42},"end":{"line":900,"column":63}},{"start":{"line":901,"column":17},"end":{"line":901,"column":30}}]},"90":{"line":903,"type":"if","locations":[{"start":{"line":903,"column":8},"end":{"line":903,"column":8}},{"start":{"line":903,"column":8},"end":{"line":903,"column":8}}]},"91":{"line":911,"type":"if","locations":[{"start":{"line":911,"column":4},"end":{"line":911,"column":4}},{"start":{"line":911,"column":4},"end":{"line":911,"column":4}}]},"92":{"line":929,"type":"if","locations":[{"start":{"line":929,"column":4},"end":{"line":929,"column":4}},{"start":{"line":929,"column":4},"end":{"line":929,"column":4}}]},"93":{"line":932,"type":"if","locations":[{"start":{"line":932,"column":6},"end":{"line":932,"column":6}},{"start":{"line":932,"column":6},"end":{"line":932,"column":6}}]},"94":{"line":939,"type":"if","locations":[{"start":{"line":939,"column":2},"end":{"line":939,"column":2}},{"start":{"line":939,"column":2},"end":{"line":939,"column":2}}]},"95":{"line":942,"type":"if","locations":[{"start":{"line":942,"column":4},"end":{"line":942,"column":4}},{"start":{"line":942,"column":4},"end":{"line":942,"column":4}}]},"96":{"line":948,"type":"if","locations":[{"start":{"line":948,"column":2},"end":{"line":948,"column":2}},{"start":{"line":948,"column":2},"end":{"line":948,"column":2}}]},"97":{"line":951,"type":"if","locations":[{"start":{"line":951,"column":4},"end":{"line":951,"column":4}},{"start":{"line":951,"column":4},"end":{"line":951,"column":4}}]},"98":{"line":968,"type":"if","locations":[{"start":{"line":968,"column":4},"end":{"line":968,"column":4}},{"start":{"line":968,"column":4},"end":{"line":968,"column":4}}]},"99":{"line":970,"type":"if","locations":[{"start":{"line":970,"column":6},"end":{"line":970,"column":6}},{"start":{"line":970,"column":6},"end":{"line":970,"column":6}}]},"100":{"line":971,"type":"if","locations":[{"start":{"line":971,"column":8},"end":{"line":971,"column":8}},{"start":{"line":971,"column":8},"end":{"line":971,"column":8}}]},"101":{"line":985,"type":"if","locations":[{"start":{"line":985,"column":4},"end":{"line":985,"column":4}},{"start":{"line":985,"column":4},"end":{"line":985,"column":4}}]},"102":{"line":988,"type":"if","locations":[{"start":{"line":988,"column":6},"end":{"line":988,"column":6}},{"start":{"line":988,"column":6},"end":{"line":988,"column":6}}]},"103":{"line":995,"type":"if","locations":[{"start":{"line":995,"column":2},"end":{"line":995,"column":2}},{"start":{"line":995,"column":2},"end":{"line":995,"column":2}}]},"104":{"line":998,"type":"if","locations":[{"start":{"line":998,"column":4},"end":{"line":998,"column":4}},{"start":{"line":998,"column":4},"end":{"line":998,"column":4}}]},"105":{"line":1004,"type":"if","locations":[{"start":{"line":1004,"column":2},"end":{"line":1004,"column":2}},{"start":{"line":1004,"column":2},"end":{"line":1004,"column":2}}]},"106":{"line":1007,"type":"if","locations":[{"start":{"line":1007,"column":4},"end":{"line":1007,"column":4}},{"start":{"line":1007,"column":4},"end":{"line":1007,"column":4}}]},"107":{"line":1264,"type":"if","locations":[{"start":{"line":1264,"column":2},"end":{"line":1264,"column":2}},{"start":{"line":1264,"column":2},"end":{"line":1264,"column":2}}]},"108":{"line":1264,"type":"binary-expr","locations":[{"start":{"line":1264,"column":6},"end":{"line":1264,"column":11}},{"start":{"line":1264,"column":15},"end":{"line":1264,"column":26}}]},"109":{"line":1275,"type":"if","locations":[{"start":{"line":1275,"column":2},"end":{"line":1275,"column":2}},{"start":{"line":1275,"column":2},"end":{"line":1275,"column":2}}]},"110":{"line":1279,"type":"cond-expr","locations":[{"start":{"line":1279,"column":23},"end":{"line":1279,"column":33}},{"start":{"line":1279,"column":36},"end":{"line":1279,"column":46}}]},"111":{"line":1280,"type":"cond-expr","locations":[{"start":{"line":1281,"column":4},"end":{"line":1281,"column":5}},{"start":{"line":1283,"column":4},"end":{"line":1283,"column":5}}]},"112":{"line":1292,"type":"if","locations":[{"start":{"line":1292,"column":2},"end":{"line":1292,"column":2}},{"start":{"line":1292,"column":2},"end":{"line":1292,"column":2}}]},"113":{"line":1300,"type":"if","locations":[{"start":{"line":1300,"column":2},"end":{"line":1300,"column":2}},{"start":{"line":1300,"column":2},"end":{"line":1300,"column":2}}]},"114":{"line":1300,"type":"binary-expr","locations":[{"start":{"line":1300,"column":6},"end":{"line":1300,"column":11}},{"start":{"line":1300,"column":15},"end":{"line":1300,"column":26}}]},"115":{"line":1301,"type":"if","locations":[{"start":{"line":1301,"column":2},"end":{"line":1301,"column":2}},{"start":{"line":1301,"column":2},"end":{"line":1301,"column":2}}]},"116":{"line":1308,"type":"if","locations":[{"start":{"line":1308,"column":2},"end":{"line":1308,"column":2}},{"start":{"line":1308,"column":2},"end":{"line":1308,"column":2}}]},"117":{"line":1313,"type":"if","locations":[{"start":{"line":1313,"column":2},"end":{"line":1313,"column":2}},{"start":{"line":1313,"column":2},"end":{"line":1313,"column":2}}]},"118":{"line":1317,"type":"if","locations":[{"start":{"line":1317,"column":2},"end":{"line":1317,"column":2}},{"start":{"line":1317,"column":2},"end":{"line":1317,"column":2}}]},"119":{"line":1322,"type":"if","locations":[{"start":{"line":1322,"column":7},"end":{"line":1322,"column":7}},{"start":{"line":1322,"column":7},"end":{"line":1322,"column":7}}]},"120":{"line":1328,"type":"if","locations":[{"start":{"line":1328,"column":2},"end":{"line":1328,"column":2}},{"start":{"line":1328,"column":2},"end":{"line":1328,"column":2}}]},"121":{"line":1328,"type":"binary-expr","locations":[{"start":{"line":1328,"column":6},"end":{"line":1328,"column":18}},{"start":{"line":1328,"column":22},"end":{"line":1328,"column":46}},{"start":{"line":1328,"column":50},"end":{"line":1328,"column":71}},{"start":{"line":1329,"column":4},"end":{"line":1329,"column":18}},{"start":{"line":1329,"column":22},"end":{"line":1329,"column":37}},{"start":{"line":1329,"column":41},"end":{"line":1329,"column":50}},{"start":{"line":1329,"column":54},"end":{"line":1329,"column":63}},{"start":{"line":1330,"column":4},"end":{"line":1330,"column":16}},{"start":{"line":1330,"column":20},"end":{"line":1330,"column":38}}]},"122":{"line":1335,"type":"if","locations":[{"start":{"line":1335,"column":2},"end":{"line":1335,"column":2}},{"start":{"line":1335,"column":2},"end":{"line":1335,"column":2}}]},"123":{"line":1387,"type":"if","locations":[{"start":{"line":1387,"column":2},"end":{"line":1387,"column":2}},{"start":{"line":1387,"column":2},"end":{"line":1387,"column":2}}]},"124":{"line":1387,"type":"binary-expr","locations":[{"start":{"line":1387,"column":6},"end":{"line":1387,"column":11}},{"start":{"line":1387,"column":15},"end":{"line":1387,"column":26}},{"start":{"line":1388,"column":4},"end":{"line":1388,"column":19}},{"start":{"line":1388,"column":23},"end":{"line":1388,"column":32}}]},"125":{"line":1389,"type":"cond-expr","locations":[{"start":{"line":1389,"column":18},"end":{"line":1389,"column":43}},{"start":{"line":1389,"column":46},"end":{"line":1389,"column":60}}]},"126":{"line":1394,"type":"if","locations":[{"start":{"line":1394,"column":2},"end":{"line":1394,"column":2}},{"start":{"line":1394,"column":2},"end":{"line":1394,"column":2}}]},"127":{"line":1394,"type":"binary-expr","locations":[{"start":{"line":1394,"column":6},"end":{"line":1394,"column":18}},{"start":{"line":1395,"column":7},"end":{"line":1395,"column":18}},{"start":{"line":1395,"column":22},"end":{"line":1395,"column":41}},{"start":{"line":1396,"column":7},"end":{"line":1396,"column":32}},{"start":{"line":1396,"column":36},"end":{"line":1396,"column":54}}]},"128":{"line":1397,"type":"cond-expr","locations":[{"start":{"line":1397,"column":46},"end":{"line":1397,"column":57}},{"start":{"line":1397,"column":60},"end":{"line":1397,"column":74}}]},"129":{"line":1405,"type":"if","locations":[{"start":{"line":1405,"column":2},"end":{"line":1405,"column":2}},{"start":{"line":1405,"column":2},"end":{"line":1405,"column":2}}]},"130":{"line":1407,"type":"if","locations":[{"start":{"line":1407,"column":4},"end":{"line":1407,"column":4}},{"start":{"line":1407,"column":4},"end":{"line":1407,"column":4}}]},"131":{"line":1412,"type":"if","locations":[{"start":{"line":1412,"column":6},"end":{"line":1412,"column":6}},{"start":{"line":1412,"column":6},"end":{"line":1412,"column":6}}]},"132":{"line":1418,"type":"cond-expr","locations":[{"start":{"line":1418,"column":36},"end":{"line":1418,"column":37}},{"start":{"line":1419,"column":21},"end":{"line":1420,"column":26}}]},"133":{"line":1419,"type":"cond-expr","locations":[{"start":{"line":1420,"column":21},"end":{"line":1420,"column":22}},{"start":{"line":1420,"column":25},"end":{"line":1420,"column":26}}]},"134":{"line":1419,"type":"binary-expr","locations":[{"start":{"line":1419,"column":21},"end":{"line":1419,"column":49}},{"start":{"line":1419,"column":53},"end":{"line":1419,"column":64}}]},"135":{"line":1425,"type":"cond-expr","locations":[{"start":{"line":1425,"column":37},"end":{"line":1425,"column":38}},{"start":{"line":1425,"column":41},"end":{"line":1425,"column":42}}]},"136":{"line":1426,"type":"cond-expr","locations":[{"start":{"line":1426,"column":37},"end":{"line":1426,"column":38}},{"start":{"line":1426,"column":41},"end":{"line":1426,"column":42}}]},"137":{"line":1427,"type":"cond-expr","locations":[{"start":{"line":1427,"column":39},"end":{"line":1427,"column":40}},{"start":{"line":1427,"column":43},"end":{"line":1427,"column":44}}]},"138":{"line":1428,"type":"cond-expr","locations":[{"start":{"line":1428,"column":38},"end":{"line":1428,"column":39}},{"start":{"line":1428,"column":42},"end":{"line":1428,"column":43}}]},"139":{"line":1429,"type":"cond-expr","locations":[{"start":{"line":1429,"column":41},"end":{"line":1429,"column":42}},{"start":{"line":1429,"column":45},"end":{"line":1429,"column":47}}]},"140":{"line":1435,"type":"cond-expr","locations":[{"start":{"line":1435,"column":36},"end":{"line":1435,"column":37}},{"start":{"line":1436,"column":21},"end":{"line":1437,"column":26}}]},"141":{"line":1436,"type":"cond-expr","locations":[{"start":{"line":1437,"column":21},"end":{"line":1437,"column":22}},{"start":{"line":1437,"column":25},"end":{"line":1437,"column":26}}]},"142":{"line":1436,"type":"binary-expr","locations":[{"start":{"line":1436,"column":21},"end":{"line":1436,"column":49}},{"start":{"line":1436,"column":53},"end":{"line":1436,"column":64}}]},"143":{"line":1439,"type":"if","locations":[{"start":{"line":1439,"column":8},"end":{"line":1439,"column":8}},{"start":{"line":1439,"column":8},"end":{"line":1439,"column":8}}]},"144":{"line":1439,"type":"binary-expr","locations":[{"start":{"line":1439,"column":12},"end":{"line":1439,"column":26}},{"start":{"line":1439,"column":30},"end":{"line":1439,"column":51}}]},"145":{"line":1443,"type":"if","locations":[{"start":{"line":1443,"column":8},"end":{"line":1443,"column":8}},{"start":{"line":1443,"column":8},"end":{"line":1443,"column":8}}]},"146":{"line":1455,"type":"if","locations":[{"start":{"line":1455,"column":6},"end":{"line":1455,"column":6}},{"start":{"line":1455,"column":6},"end":{"line":1455,"column":6}}]},"147":{"line":1455,"type":"binary-expr","locations":[{"start":{"line":1455,"column":10},"end":{"line":1455,"column":38}},{"start":{"line":1455,"column":42},"end":{"line":1455,"column":53}}]},"148":{"line":1457,"type":"if","locations":[{"start":{"line":1457,"column":13},"end":{"line":1457,"column":13}},{"start":{"line":1457,"column":13},"end":{"line":1457,"column":13}}]},"149":{"line":1459,"type":"if","locations":[{"start":{"line":1459,"column":13},"end":{"line":1459,"column":13}},{"start":{"line":1459,"column":13},"end":{"line":1459,"column":13}}]},"150":{"line":1465,"type":"if","locations":[{"start":{"line":1465,"column":6},"end":{"line":1465,"column":6}},{"start":{"line":1465,"column":6},"end":{"line":1465,"column":6}}]},"151":{"line":1472,"type":"if","locations":[{"start":{"line":1472,"column":6},"end":{"line":1472,"column":6}},{"start":{"line":1472,"column":6},"end":{"line":1472,"column":6}}]},"152":{"line":1481,"type":"if","locations":[{"start":{"line":1481,"column":2},"end":{"line":1481,"column":2}},{"start":{"line":1481,"column":2},"end":{"line":1481,"column":2}}]},"153":{"line":1482,"type":"if","locations":[{"start":{"line":1482,"column":4},"end":{"line":1482,"column":4}},{"start":{"line":1482,"column":4},"end":{"line":1482,"column":4}}]},"154":{"line":1486,"type":"if","locations":[{"start":{"line":1486,"column":8},"end":{"line":1486,"column":8}},{"start":{"line":1486,"column":8},"end":{"line":1486,"column":8}}]},"155":{"line":1487,"type":"if","locations":[{"start":{"line":1487,"column":10},"end":{"line":1487,"column":10}},{"start":{"line":1487,"column":10},"end":{"line":1487,"column":10}}]},"156":{"line":1487,"type":"binary-expr","locations":[{"start":{"line":1487,"column":14},"end":{"line":1487,"column":27}},{"start":{"line":1487,"column":31},"end":{"line":1487,"column":46}}]},"157":{"line":1492,"type":"if","locations":[{"start":{"line":1492,"column":10},"end":{"line":1492,"column":10}},{"start":{"line":1492,"column":10},"end":{"line":1492,"column":10}}]},"158":{"line":1499,"type":"if","locations":[{"start":{"line":1499,"column":6},"end":{"line":1499,"column":6}},{"start":{"line":1499,"column":6},"end":{"line":1499,"column":6}}]},"159":{"line":1499,"type":"binary-expr","locations":[{"start":{"line":1499,"column":10},"end":{"line":1499,"column":23}},{"start":{"line":1499,"column":27},"end":{"line":1499,"column":42}}]},"160":{"line":1502,"type":"if","locations":[{"start":{"line":1502,"column":6},"end":{"line":1502,"column":6}},{"start":{"line":1502,"column":6},"end":{"line":1502,"column":6}}]},"161":{"line":1511,"type":"if","locations":[{"start":{"line":1511,"column":2},"end":{"line":1511,"column":2}},{"start":{"line":1511,"column":2},"end":{"line":1511,"column":2}}]},"162":{"line":1512,"type":"if","locations":[{"start":{"line":1512,"column":4},"end":{"line":1512,"column":4}},{"start":{"line":1512,"column":4},"end":{"line":1512,"column":4}}]},"163":{"line":1517,"type":"if","locations":[{"start":{"line":1517,"column":8},"end":{"line":1517,"column":8}},{"start":{"line":1517,"column":8},"end":{"line":1517,"column":8}}]},"164":{"line":1518,"type":"if","locations":[{"start":{"line":1518,"column":10},"end":{"line":1518,"column":10}},{"start":{"line":1518,"column":10},"end":{"line":1518,"column":10}}]},"165":{"line":1518,"type":"binary-expr","locations":[{"start":{"line":1518,"column":14},"end":{"line":1518,"column":27}},{"start":{"line":1518,"column":31},"end":{"line":1518,"column":46}}]},"166":{"line":1523,"type":"if","locations":[{"start":{"line":1523,"column":10},"end":{"line":1523,"column":10}},{"start":{"line":1523,"column":10},"end":{"line":1523,"column":10}}]},"167":{"line":1529,"type":"if","locations":[{"start":{"line":1529,"column":8},"end":{"line":1529,"column":8}},{"start":{"line":1529,"column":8},"end":{"line":1529,"column":8}}]},"168":{"line":1537,"type":"if","locations":[{"start":{"line":1537,"column":6},"end":{"line":1537,"column":6}},{"start":{"line":1537,"column":6},"end":{"line":1537,"column":6}}]},"169":{"line":1537,"type":"binary-expr","locations":[{"start":{"line":1537,"column":10},"end":{"line":1537,"column":23}},{"start":{"line":1537,"column":27},"end":{"line":1537,"column":42}}]},"170":{"line":1540,"type":"if","locations":[{"start":{"line":1540,"column":6},"end":{"line":1540,"column":6}},{"start":{"line":1540,"column":6},"end":{"line":1540,"column":6}}]},"171":{"line":1549,"type":"if","locations":[{"start":{"line":1549,"column":2},"end":{"line":1549,"column":2}},{"start":{"line":1549,"column":2},"end":{"line":1549,"column":2}}]},"172":{"line":1550,"type":"if","locations":[{"start":{"line":1550,"column":4},"end":{"line":1550,"column":4}},{"start":{"line":1550,"column":4},"end":{"line":1550,"column":4}}]},"173":{"line":1555,"type":"if","locations":[{"start":{"line":1555,"column":8},"end":{"line":1555,"column":8}},{"start":{"line":1555,"column":8},"end":{"line":1555,"column":8}}]},"174":{"line":1556,"type":"if","locations":[{"start":{"line":1556,"column":10},"end":{"line":1556,"column":10}},{"start":{"line":1556,"column":10},"end":{"line":1556,"column":10}}]},"175":{"line":1556,"type":"binary-expr","locations":[{"start":{"line":1556,"column":14},"end":{"line":1556,"column":27}},{"start":{"line":1556,"column":31},"end":{"line":1556,"column":46}}]},"176":{"line":1561,"type":"if","locations":[{"start":{"line":1561,"column":10},"end":{"line":1561,"column":10}},{"start":{"line":1561,"column":10},"end":{"line":1561,"column":10}}]},"177":{"line":1567,"type":"if","locations":[{"start":{"line":1567,"column":8},"end":{"line":1567,"column":8}},{"start":{"line":1567,"column":8},"end":{"line":1567,"column":8}}]},"178":{"line":1575,"type":"if","locations":[{"start":{"line":1575,"column":6},"end":{"line":1575,"column":6}},{"start":{"line":1575,"column":6},"end":{"line":1575,"column":6}}]},"179":{"line":1575,"type":"binary-expr","locations":[{"start":{"line":1575,"column":10},"end":{"line":1575,"column":23}},{"start":{"line":1575,"column":27},"end":{"line":1575,"column":42}}]},"180":{"line":1578,"type":"if","locations":[{"start":{"line":1578,"column":6},"end":{"line":1578,"column":6}},{"start":{"line":1578,"column":6},"end":{"line":1578,"column":6}}]},"181":{"line":1586,"type":"if","locations":[{"start":{"line":1586,"column":2},"end":{"line":1586,"column":2}},{"start":{"line":1586,"column":2},"end":{"line":1586,"column":2}}]},"182":{"line":1587,"type":"if","locations":[{"start":{"line":1587,"column":4},"end":{"line":1587,"column":4}},{"start":{"line":1587,"column":4},"end":{"line":1587,"column":4}}]},"183":{"line":1588,"type":"if","locations":[{"start":{"line":1588,"column":6},"end":{"line":1588,"column":6}},{"start":{"line":1588,"column":6},"end":{"line":1588,"column":6}}]},"184":{"line":1591,"type":"if","locations":[{"start":{"line":1591,"column":6},"end":{"line":1591,"column":6}},{"start":{"line":1591,"column":6},"end":{"line":1591,"column":6}}]},"185":{"line":1605,"type":"if","locations":[{"start":{"line":1605,"column":2},"end":{"line":1605,"column":2}},{"start":{"line":1605,"column":2},"end":{"line":1605,"column":2}}]},"186":{"line":1607,"type":"if","locations":[{"start":{"line":1607,"column":4},"end":{"line":1607,"column":4}},{"start":{"line":1607,"column":4},"end":{"line":1607,"column":4}}]},"187":{"line":1622,"type":"if","locations":[{"start":{"line":1622,"column":9},"end":{"line":1622,"column":9}},{"start":{"line":1622,"column":9},"end":{"line":1622,"column":9}}]},"188":{"line":1622,"type":"binary-expr","locations":[{"start":{"line":1622,"column":13},"end":{"line":1622,"column":32}},{"start":{"line":1622,"column":36},"end":{"line":1622,"column":66}},{"start":{"line":1623,"column":4},"end":{"line":1623,"column":22}}]},"189":{"line":1628,"type":"if","locations":[{"start":{"line":1628,"column":2},"end":{"line":1628,"column":2}},{"start":{"line":1628,"column":2},"end":{"line":1628,"column":2}}]},"190":{"line":1628,"type":"binary-expr","locations":[{"start":{"line":1628,"column":6},"end":{"line":1628,"column":31}},{"start":{"line":1628,"column":35},"end":{"line":1628,"column":54}}]},"191":{"line":1634,"type":"if","locations":[{"start":{"line":1634,"column":2},"end":{"line":1634,"column":2}},{"start":{"line":1634,"column":2},"end":{"line":1634,"column":2}}]},"192":{"line":1634,"type":"binary-expr","locations":[{"start":{"line":1634,"column":6},"end":{"line":1634,"column":25}},{"start":{"line":1634,"column":29},"end":{"line":1634,"column":46}},{"start":{"line":1635,"column":5},"end":{"line":1635,"column":25}},{"start":{"line":1635,"column":29},"end":{"line":1635,"column":54}}]},"193":{"line":1636,"type":"cond-expr","locations":[{"start":{"line":1636,"column":51},"end":{"line":1636,"column":73}},{"start":{"line":1637,"column":7},"end":{"line":1638,"column":51}}]},"194":{"line":1637,"type":"cond-expr","locations":[{"start":{"line":1637,"column":30},"end":{"line":1637,"column":51}},{"start":{"line":1638,"column":8},"end":{"line":1638,"column":51}}]},"195":{"line":1640,"type":"if","locations":[{"start":{"line":1640,"column":4},"end":{"line":1640,"column":4}},{"start":{"line":1640,"column":4},"end":{"line":1640,"column":4}}]},"196":{"line":1640,"type":"binary-expr","locations":[{"start":{"line":1640,"column":8},"end":{"line":1640,"column":36}},{"start":{"line":1640,"column":40},"end":{"line":1640,"column":65}}]},"197":{"line":1643,"type":"if","locations":[{"start":{"line":1643,"column":4},"end":{"line":1643,"column":4}},{"start":{"line":1643,"column":4},"end":{"line":1643,"column":4}}]},"198":{"line":1643,"type":"binary-expr","locations":[{"start":{"line":1643,"column":8},"end":{"line":1643,"column":31}},{"start":{"line":1643,"column":35},"end":{"line":1643,"column":63}}]},"199":{"line":1644,"type":"if","locations":[{"start":{"line":1644,"column":6},"end":{"line":1644,"column":6}},{"start":{"line":1644,"column":6},"end":{"line":1644,"column":6}}]},"200":{"line":1657,"type":"if","locations":[{"start":{"line":1657,"column":4},"end":{"line":1657,"column":4}},{"start":{"line":1657,"column":4},"end":{"line":1657,"column":4}}]},"201":{"line":1658,"type":"if","locations":[{"start":{"line":1658,"column":6},"end":{"line":1658,"column":6}},{"start":{"line":1658,"column":6},"end":{"line":1658,"column":6}}]},"202":{"line":1661,"type":"if","locations":[{"start":{"line":1661,"column":11},"end":{"line":1661,"column":11}},{"start":{"line":1661,"column":11},"end":{"line":1661,"column":11}}]},"203":{"line":1667,"type":"if","locations":[{"start":{"line":1667,"column":8},"end":{"line":1667,"column":8}},{"start":{"line":1667,"column":8},"end":{"line":1667,"column":8}}]},"204":{"line":1671,"type":"if","locations":[{"start":{"line":1671,"column":10},"end":{"line":1671,"column":10}},{"start":{"line":1671,"column":10},"end":{"line":1671,"column":10}}]},"205":{"line":1679,"type":"if","locations":[{"start":{"line":1679,"column":6},"end":{"line":1679,"column":6}},{"start":{"line":1679,"column":6},"end":{"line":1679,"column":6}}]},"206":{"line":1688,"type":"if","locations":[{"start":{"line":1688,"column":2},"end":{"line":1688,"column":2}},{"start":{"line":1688,"column":2},"end":{"line":1688,"column":2}}]},"207":{"line":1689,"type":"if","locations":[{"start":{"line":1689,"column":2},"end":{"line":1689,"column":2}},{"start":{"line":1689,"column":2},"end":{"line":1689,"column":2}}]},"208":{"line":1692,"type":"if","locations":[{"start":{"line":1692,"column":2},"end":{"line":1692,"column":2}},{"start":{"line":1692,"column":2},"end":{"line":1692,"column":2}}]},"209":{"line":1712,"type":"if","locations":[{"start":{"line":1712,"column":2},"end":{"line":1712,"column":2}},{"start":{"line":1712,"column":2},"end":{"line":1712,"column":2}}]},"210":{"line":1714,"type":"cond-expr","locations":[{"start":{"line":1714,"column":27},"end":{"line":1714,"column":31}},{"start":{"line":1714,"column":34},"end":{"line":1714,"column":46}}]},"211":{"line":1720,"type":"if","locations":[{"start":{"line":1720,"column":2},"end":{"line":1720,"column":2}},{"start":{"line":1720,"column":2},"end":{"line":1720,"column":2}}]},"212":{"line":1720,"type":"binary-expr","locations":[{"start":{"line":1720,"column":6},"end":{"line":1720,"column":11}},{"start":{"line":1720,"column":28},"end":{"line":1720,"column":39}}]},"213":{"line":1725,"type":"if","locations":[{"start":{"line":1725,"column":2},"end":{"line":1725,"column":2}},{"start":{"line":1725,"column":2},"end":{"line":1725,"column":2}}]},"214":{"line":1725,"type":"binary-expr","locations":[{"start":{"line":1725,"column":6},"end":{"line":1725,"column":27}},{"start":{"line":1726,"column":4},"end":{"line":1726,"column":26}},{"start":{"line":1727,"column":4},"end":{"line":1727,"column":25}},{"start":{"line":1728,"column":4},"end":{"line":1728,"column":28}},{"start":{"line":1729,"column":4},"end":{"line":1729,"column":25}},{"start":{"line":1730,"column":4},"end":{"line":1730,"column":25}},{"start":{"line":1731,"column":4},"end":{"line":1731,"column":27}}]},"215":{"line":1738,"type":"cond-expr","locations":[{"start":{"line":1738,"column":33},"end":{"line":1738,"column":56}},{"start":{"line":1738,"column":59},"end":{"line":1738,"column":63}}]}},"code":["'use strict';","","var utils   = require('../utils/common');","var trees   = require('./trees');","var adler32 = require('./adler32');","var crc32   = require('./crc32');","var msg   = require('./messages');","","/* Public constants ==========================================================*/","/* ===========================================================================*/","","","/* Allowed flush values; see deflate() and inflate() below for details */","var Z_NO_FLUSH      = 0;","var Z_PARTIAL_FLUSH = 1;","//var Z_SYNC_FLUSH    = 2;","var Z_FULL_FLUSH    = 3;","var Z_FINISH        = 4;","var Z_BLOCK         = 5;","//var Z_TREES         = 6;","","","/* Return codes for the compression/decompression functions. Negative values"," * are errors, positive values are used for special but normal events."," */","var Z_OK            = 0;","var Z_STREAM_END    = 1;","//var Z_NEED_DICT     = 2;","//var Z_ERRNO         = -1;","var Z_STREAM_ERROR  = -2;","var Z_DATA_ERROR    = -3;","//var Z_MEM_ERROR     = -4;","var Z_BUF_ERROR     = -5;","//var Z_VERSION_ERROR = -6;","","","/* compression levels */","//var Z_NO_COMPRESSION      = 0;","//var Z_BEST_SPEED          = 1;","//var Z_BEST_COMPRESSION    = 9;","var Z_DEFAULT_COMPRESSION = -1;","","","var Z_FILTERED            = 1;","var Z_HUFFMAN_ONLY        = 2;","var Z_RLE                 = 3;","var Z_FIXED               = 4;","var Z_DEFAULT_STRATEGY    = 0;","","/* Possible values of the data_type field (though see inflate()) */","//var Z_BINARY              = 0;","//var Z_TEXT                = 1;","//var Z_ASCII               = 1; // = Z_TEXT","var Z_UNKNOWN             = 2;","","","/* The deflate compression method */","var Z_DEFLATED  = 8;","","/*============================================================================*/","","","var MAX_MEM_LEVEL = 9;","/* Maximum value for memLevel in deflateInit2 */","var MAX_WBITS = 15;","/* 32K LZ77 window */","var DEF_MEM_LEVEL = 8;","","","var LENGTH_CODES  = 29;","/* number of length codes, not counting the special END_BLOCK code */","var LITERALS      = 256;","/* number of literal bytes 0..255 */","var L_CODES       = LITERALS + 1 + LENGTH_CODES;","/* number of Literal or Length codes, including the END_BLOCK code */","var D_CODES       = 30;","/* number of distance codes */","var BL_CODES      = 19;","/* number of codes used to transfer the bit lengths */","var HEAP_SIZE     = 2*L_CODES + 1;","/* maximum heap size */","var MAX_BITS  = 15;","/* All codes must not exceed MAX_BITS bits */","","var MIN_MATCH = 3;","var MAX_MATCH = 258;","var MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);","","var PRESET_DICT = 0x20;","","var INIT_STATE = 42;","var EXTRA_STATE = 69;","var NAME_STATE = 73;","var COMMENT_STATE = 91;","var HCRC_STATE = 103;","var BUSY_STATE = 113;","var FINISH_STATE = 666;","","var BS_NEED_MORE      = 1; /* block not completed, need more input or more output */","var BS_BLOCK_DONE     = 2; /* block flush performed */","var BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */","var BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */","","var OS_CODE = 0x03; // Unix :) . Don't detect, use this default.","","function err(strm, errorCode) {","  strm.msg = msg[errorCode];","  return errorCode;","}","","function rank(f) {","  return ((f) << 1) - ((f) > 4 ? 9 : 0);","}","","function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }","","","/* ========================================================================="," * Flush as much pending output as possible. All deflate() output goes"," * through this function so some applications may wish to modify it"," * to avoid allocating a large strm->output buffer and copying into it."," * (See also read_buf())."," */","function flush_pending(strm) {","  var s = strm.state;","","  //_tr_flush_bits(s);","  var len = s.pending;","  if (len > strm.avail_out) {","    len = strm.avail_out;","  }","  if (len === 0) { return; }","","  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);","  strm.next_out += len;","  s.pending_out += len;","  strm.total_out += len;","  strm.avail_out -= len;","  s.pending -= len;","  if (s.pending === 0) {","    s.pending_out = 0;","  }","}","","","function flush_block_only (s, last) {","  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);","  s.block_start = s.strstart;","  flush_pending(s.strm);","}","","","function put_byte(s, b) {","  s.pending_buf[s.pending++] = b;","}","","","/* ========================================================================="," * Put a short in the pending buffer. The 16-bit value is put in MSB order."," * IN assertion: the stream state is correct and there is enough room in"," * pending_buf."," */","function putShortMSB(s, b) {","//  put_byte(s, (Byte)(b >> 8));","//  put_byte(s, (Byte)(b & 0xff));","  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;","  s.pending_buf[s.pending++] = b & 0xff;","}","","","/* ==========================================================================="," * Read a new buffer from the current input stream, update the adler32"," * and total number of bytes read.  All deflate() input goes through"," * this function so some applications may wish to modify it to avoid"," * allocating a large strm->input buffer and copying from it."," * (See also flush_pending())."," */","function read_buf(strm, buf, start, size) {","  var len = strm.avail_in;","","  if (len > size) { len = size; }","  if (len === 0) { return 0; }","","  strm.avail_in -= len;","","  utils.arraySet(buf, strm.input, strm.next_in, len, start);","  if (strm.state.wrap === 1) {","    strm.adler = adler32(strm.adler, buf, len, start);","  }","","  else if (strm.state.wrap === 2) {","    strm.adler = crc32(strm.adler, buf, len, start);","  }","","  strm.next_in += len;","  strm.total_in += len;","","  return len;","}","","","/* ==========================================================================="," * Set match_start to the longest match starting at the given string and"," * return its length. Matches shorter or equal to prev_length are discarded,"," * in which case the result is equal to prev_length and match_start is"," * garbage."," * IN assertions: cur_match is the head of the hash chain for the current"," *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1"," * OUT assertion: the match length is not greater than s->lookahead."," */","function longest_match(s, cur_match) {","  var chain_length = s.max_chain_length;      /* max hash chain length */","  var scan = s.strstart; /* current string */","  var match;                       /* matched string */","  var len;                           /* length of current match */","  var best_len = s.prev_length;              /* best match length so far */","  var nice_match = s.nice_match;             /* stop if match long enough */","  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?","      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;","","  var _win = s.window; // shortcut","","  var wmask = s.w_mask;","  var prev  = s.prev;","","  /* Stop when cur_match becomes <= limit. To simplify the code,","   * we prevent matches with the string of window index 0.","   */","","  var strend = s.strstart + MAX_MATCH;","  var scan_end1  = _win[scan + best_len - 1];","  var scan_end   = _win[scan + best_len];","","  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.","   * It is easy to get rid of this optimization if necessary.","   */","  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");","","  /* Do not waste too much time if we already have a good match: */","  if (s.prev_length >= s.good_match) {","    chain_length >>= 2;","  }","  /* Do not look for matches beyond the end of the input. This is necessary","   * to make deflate deterministic.","   */","  if (nice_match > s.lookahead) { nice_match = s.lookahead; }","","  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");","","  do {","    // Assert(cur_match < s->strstart, \"no future\");","    match = cur_match;","","    /* Skip to next match if the match length cannot increase","     * or if the match length is less than 2.  Note that the checks below","     * for insufficient lookahead only occur occasionally for performance","     * reasons.  Therefore uninitialized memory will be accessed, and","     * conditional jumps will be made that depend on those values.","     * However the length of the match is limited to the lookahead, so","     * the output of deflate is not affected by the uninitialized values.","     */","","    if (_win[match + best_len]     !== scan_end  ||","        _win[match + best_len - 1] !== scan_end1 ||","        _win[match]                !== _win[scan] ||","        _win[++match]              !== _win[scan + 1]) {","      continue;","    }","","    /* The check at best_len-1 can be removed because it will be made","     * again later. (This heuristic is not always a win.)","     * It is not necessary to compare scan[2] and match[2] since they","     * are always equal when the other bytes match, given that","     * the hash keys are equal and that HASH_BITS >= 8.","     */","    scan += 2;","    match++;","    // Assert(*scan == *match, \"match[2]?\");","","    /* We check for insufficient lookahead only every 8th comparison;","     * the 256th check will be made at strstart+258.","     */","    do {","      /*jshint noempty:false*/","    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&","             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&","             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&","             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&","             scan < strend);","","    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");","","    len = MAX_MATCH - (strend - scan);","    scan = strend - MAX_MATCH;","","    if (len > best_len) {","      s.match_start = cur_match;","      best_len = len;","      if (len >= nice_match) {","        break;","      }","      scan_end1  = _win[scan + best_len - 1];","      scan_end   = _win[scan + best_len];","    }","  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);","","  if (best_len <= s.lookahead) {","    return best_len;","  }","  return s.lookahead;","}","","","/* ==========================================================================="," * Fill the window when the lookahead becomes insufficient."," * Updates strstart and lookahead."," *"," * IN assertion: lookahead < MIN_LOOKAHEAD"," * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD"," *    At least one byte has been read, or avail_in == 0; reads are"," *    performed for at least two bytes (required for the zip translate_eol"," *    option -- not supported here)."," */","function fill_window(s) {","  var _w_size = s.w_size;","  var p, n, m, more, str;","","  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");","","  do {","    more = s.window_size - s.lookahead - s.strstart;","","    // JS ints have 32 bit, block below not needed","    /* Deal with !@#$% 64K limit: */","    //if (sizeof(int) <= 2) {","    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {","    //        more = wsize;","    //","    //  } else if (more == (unsigned)(-1)) {","    //        /* Very unlikely, but possible on 16 bit machine if","    //         * strstart == 0 && lookahead == 1 (input done a byte at time)","    //         */","    //        more--;","    //    }","    //}","","","    /* If the window is almost full and there is insufficient lookahead,","     * move the upper half to the lower one to make room in the upper half.","     */","    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {","","      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);","      s.match_start -= _w_size;","      s.strstart -= _w_size;","      /* we now have strstart >= MAX_DIST */","      s.block_start -= _w_size;","","      /* Slide the hash table (could be avoided with 32 bit values","       at the expense of memory usage). We slide even when level == 0","       to keep the hash table consistent if we switch back to level > 0","       later. (Using level 0 permanently is not an optimal usage of","       zlib, so we don't care about this pathological case.)","       */","","      n = s.hash_size;","      p = n;","      do {","        m = s.head[--p];","        s.head[p] = (m >= _w_size ? m - _w_size : 0);","      } while (--n);","","      n = _w_size;","      p = n;","      do {","        m = s.prev[--p];","        s.prev[p] = (m >= _w_size ? m - _w_size : 0);","        /* If n is not on any hash chain, prev[n] is garbage but","         * its value will never be used.","         */","      } while (--n);","","      more += _w_size;","    }","    if (s.strm.avail_in === 0) {","      break;","    }","","    /* If there was no sliding:","     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&","     *    more == window_size - lookahead - strstart","     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)","     * => more >= window_size - 2*WSIZE + 2","     * In the BIG_MEM or MMAP case (not yet supported),","     *   window_size == input_size + MIN_LOOKAHEAD  &&","     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.","     * Otherwise, window_size == 2*WSIZE so more >= 2.","     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.","     */","    //Assert(more >= 2, \"more < 2\");","    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);","    s.lookahead += n;","","    /* Initialize the hash value now that we have some input: */","    if (s.lookahead + s.insert >= MIN_MATCH) {","      str = s.strstart - s.insert;","      s.ins_h = s.window[str];","","      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */","      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;","//#if MIN_MATCH != 3","//        Call update_hash() MIN_MATCH-3 more times","//#endif","      while (s.insert) {","        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */","        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH-1]) & s.hash_mask;","","        s.prev[str & s.w_mask] = s.head[s.ins_h];","        s.head[s.ins_h] = str;","        str++;","        s.insert--;","        if (s.lookahead + s.insert < MIN_MATCH) {","          break;","        }","      }","    }","    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,","     * but this is not important since only literal bytes will be emitted.","     */","","  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);","","  /* If the WIN_INIT bytes after the end of the current data have never been","   * written, then zero those bytes in order to avoid memory check reports of","   * the use of uninitialized (or uninitialised as Julian writes) bytes by","   * the longest match routines.  Update the high water mark for the next","   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match","   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.","   */","//  if (s.high_water < s.window_size) {","//    var curr = s.strstart + s.lookahead;","//    var init = 0;","//","//    if (s.high_water < curr) {","//      /* Previous high water mark below current data -- zero WIN_INIT","//       * bytes or up to end of window, whichever is less.","//       */","//      init = s.window_size - curr;","//      if (init > WIN_INIT)","//        init = WIN_INIT;","//      zmemzero(s->window + curr, (unsigned)init);","//      s->high_water = curr + init;","//    }","//    else if (s->high_water < (ulg)curr + WIN_INIT) {","//      /* High water mark at or above current data, but below current data","//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up","//       * to end of window, whichever is less.","//       */","//      init = (ulg)curr + WIN_INIT - s->high_water;","//      if (init > s->window_size - s->high_water)","//        init = s->window_size - s->high_water;","//      zmemzero(s->window + s->high_water, (unsigned)init);","//      s->high_water += init;","//    }","//  }","//","//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,","//    \"not enough room for search\");","}","","/* ==========================================================================="," * Copy without compression as much as possible from the input stream, return"," * the current block state."," * This function does not insert new strings in the dictionary since"," * uncompressible data is probably not useful. This function is used"," * only for the level=0 compression option."," * NOTE: this function should be optimized to avoid extra copying from"," * window to pending_buf."," */","function deflate_stored(s, flush) {","  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited","   * to pending_buf_size, and each stored block has a 5 byte header:","   */","  var max_block_size = 0xffff;","","  if (max_block_size > s.pending_buf_size - 5) {","    max_block_size = s.pending_buf_size - 5;","  }","","  /* Copy as much as possible from input to output: */","  for (;;) {","    /* Fill the window as much as possible: */","    if (s.lookahead <= 1) {","","      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||","      //  s->block_start >= (long)s->w_size, \"slide too late\");","//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||","//        s.block_start >= s.w_size)) {","//        throw  new Error(\"slide too late\");","//      }","","      fill_window(s);","      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {","        return BS_NEED_MORE;","      }","","      if (s.lookahead === 0) {","        break;","      }","      /* flush the current block */","    }","    //Assert(s->block_start >= 0L, \"block gone\");","//    if (s.block_start < 0) throw new Error(\"block gone\");","","    s.strstart += s.lookahead;","    s.lookahead = 0;","","    /* Emit a stored block if pending_buf will be full: */","    var max_start = s.block_start + max_block_size;","","    if (s.strstart === 0 || s.strstart >= max_start) {","      /* strstart == 0 is possible when wraparound on 16-bit machine */","      s.lookahead = s.strstart - max_start;","      s.strstart = max_start;","      /*** FLUSH_BLOCK(s, 0); ***/","      flush_block_only(s, false);","      if (s.strm.avail_out === 0) {","        return BS_NEED_MORE;","      }","      /***/","","","    }","    /* Flush if we may have to slide, otherwise block_start may become","     * negative and the data will be gone:","     */","    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {","      /*** FLUSH_BLOCK(s, 0); ***/","      flush_block_only(s, false);","      if (s.strm.avail_out === 0) {","        return BS_NEED_MORE;","      }","      /***/","    }","  }","","  s.insert = 0;","","  if (flush === Z_FINISH) {","    /*** FLUSH_BLOCK(s, 1); ***/","    flush_block_only(s, true);","    if (s.strm.avail_out === 0) {","      return BS_FINISH_STARTED;","    }","    /***/","    return BS_FINISH_DONE;","  }","","  if (s.strstart > s.block_start) {","    /*** FLUSH_BLOCK(s, 0); ***/","    flush_block_only(s, false);","    if (s.strm.avail_out === 0) {","      return BS_NEED_MORE;","    }","    /***/","  }","","  return BS_NEED_MORE;","}","","/* ==========================================================================="," * Compress as much as possible from the input stream, return the current"," * block state."," * This function does not perform lazy evaluation of matches and inserts"," * new strings in the dictionary only for unmatched strings or for short"," * matches. It is used only for the fast compression options."," */","function deflate_fast(s, flush) {","  var hash_head;        /* head of the hash chain */","  var bflush;           /* set if current block must be flushed */","","  for (;;) {","    /* Make sure that we always have enough lookahead, except","     * at the end of the input file. We need MAX_MATCH bytes","     * for the next match, plus MIN_MATCH bytes to insert the","     * string following the next match.","     */","    if (s.lookahead < MIN_LOOKAHEAD) {","      fill_window(s);","      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {","        return BS_NEED_MORE;","      }","      if (s.lookahead === 0) {","        break; /* flush the current block */","      }","    }","","    /* Insert the string window[strstart .. strstart+2] in the","     * dictionary, and set hash_head to the head of the hash chain:","     */","    hash_head = 0/*NIL*/;","    if (s.lookahead >= MIN_MATCH) {","      /*** INSERT_STRING(s, s.strstart, hash_head); ***/","      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;","      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];","      s.head[s.ins_h] = s.strstart;","      /***/","    }","","    /* Find the longest match, discarding those <= prev_length.","     * At this point we have always match_length < MIN_MATCH","     */","    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {","      /* To simplify the code, we prevent matches with the string","       * of window index 0 (in particular we have to avoid a match","       * of the string with itself at the start of the input file).","       */","      s.match_length = longest_match(s, hash_head);","      /* longest_match() sets match_start */","    }","    if (s.match_length >= MIN_MATCH) {","      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only","","      /*** _tr_tally_dist(s, s.strstart - s.match_start,","                     s.match_length - MIN_MATCH, bflush); ***/","      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);","","      s.lookahead -= s.match_length;","","      /* Insert new strings in the hash table only if the match length","       * is not too large. This saves time but degrades compression.","       */","      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {","        s.match_length--; /* string at strstart already in table */","        do {","          s.strstart++;","          /*** INSERT_STRING(s, s.strstart, hash_head); ***/","          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;","          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];","          s.head[s.ins_h] = s.strstart;","          /***/","          /* strstart never exceeds WSIZE-MAX_MATCH, so there are","           * always MIN_MATCH bytes ahead.","           */","        } while (--s.match_length !== 0);","        s.strstart++;","      } else","      {","        s.strstart += s.match_length;","        s.match_length = 0;","        s.ins_h = s.window[s.strstart];","        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */","        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;","","//#if MIN_MATCH != 3","//                Call UPDATE_HASH() MIN_MATCH-3 more times","//#endif","        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not","         * matter since it will be recomputed at next deflate call.","         */","      }","    } else {","      /* No match, output a literal byte */","      //Tracevv((stderr,\"%c\", s.window[s.strstart]));","      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/","      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);","","      s.lookahead--;","      s.strstart++;","    }","    if (bflush) {","      /*** FLUSH_BLOCK(s, 0); ***/","      flush_block_only(s, false);","      if (s.strm.avail_out === 0) {","        return BS_NEED_MORE;","      }","      /***/","    }","  }","  s.insert = ((s.strstart < (MIN_MATCH-1)) ? s.strstart : MIN_MATCH-1);","  if (flush === Z_FINISH) {","    /*** FLUSH_BLOCK(s, 1); ***/","    flush_block_only(s, true);","    if (s.strm.avail_out === 0) {","      return BS_FINISH_STARTED;","    }","    /***/","    return BS_FINISH_DONE;","  }","  if (s.last_lit) {","    /*** FLUSH_BLOCK(s, 0); ***/","    flush_block_only(s, false);","    if (s.strm.avail_out === 0) {","      return BS_NEED_MORE;","    }","    /***/","  }","  return BS_BLOCK_DONE;","}","","/* ==========================================================================="," * Same as above, but achieves better compression. We use a lazy"," * evaluation for matches: a match is finally adopted only if there is"," * no better match at the next window position."," */","function deflate_slow(s, flush) {","  var hash_head;          /* head of hash chain */","  var bflush;              /* set if current block must be flushed */","","  var max_insert;","","  /* Process the input block. */","  for (;;) {","    /* Make sure that we always have enough lookahead, except","     * at the end of the input file. We need MAX_MATCH bytes","     * for the next match, plus MIN_MATCH bytes to insert the","     * string following the next match.","     */","    if (s.lookahead < MIN_LOOKAHEAD) {","      fill_window(s);","      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {","        return BS_NEED_MORE;","      }","      if (s.lookahead === 0) { break; } /* flush the current block */","    }","","    /* Insert the string window[strstart .. strstart+2] in the","     * dictionary, and set hash_head to the head of the hash chain:","     */","    hash_head = 0/*NIL*/;","    if (s.lookahead >= MIN_MATCH) {","      /*** INSERT_STRING(s, s.strstart, hash_head); ***/","      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;","      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];","      s.head[s.ins_h] = s.strstart;","      /***/","    }","","    /* Find the longest match, discarding those <= prev_length.","     */","    s.prev_length = s.match_length;","    s.prev_match = s.match_start;","    s.match_length = MIN_MATCH-1;","","    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&","        s.strstart - hash_head <= (s.w_size-MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {","      /* To simplify the code, we prevent matches with the string","       * of window index 0 (in particular we have to avoid a match","       * of the string with itself at the start of the input file).","       */","      s.match_length = longest_match(s, hash_head);","      /* longest_match() sets match_start */","","      if (s.match_length <= 5 &&","         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {","","        /* If prev_match is also MIN_MATCH, match_start is garbage","         * but we will ignore the current match anyway.","         */","        s.match_length = MIN_MATCH-1;","      }","    }","    /* If there was a match at the previous step and the current","     * match is not better, output the previous match:","     */","    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {","      max_insert = s.strstart + s.lookahead - MIN_MATCH;","      /* Do not insert strings in hash table beyond this. */","","      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);","","      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,","                     s.prev_length - MIN_MATCH, bflush);***/","      bflush = trees._tr_tally(s, s.strstart - 1- s.prev_match, s.prev_length - MIN_MATCH);","      /* Insert in hash table all strings up to the end of the match.","       * strstart-1 and strstart are already inserted. If there is not","       * enough lookahead, the last two strings are not inserted in","       * the hash table.","       */","      s.lookahead -= s.prev_length-1;","      s.prev_length -= 2;","      do {","        if (++s.strstart <= max_insert) {","          /*** INSERT_STRING(s, s.strstart, hash_head); ***/","          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;","          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];","          s.head[s.ins_h] = s.strstart;","          /***/","        }","      } while (--s.prev_length !== 0);","      s.match_available = 0;","      s.match_length = MIN_MATCH-1;","      s.strstart++;","","      if (bflush) {","        /*** FLUSH_BLOCK(s, 0); ***/","        flush_block_only(s, false);","        if (s.strm.avail_out === 0) {","          return BS_NEED_MORE;","        }","        /***/","      }","","    } else if (s.match_available) {","      /* If there was no match at the previous position, output a","       * single literal. If there was a match but the current match","       * is longer, truncate the previous match to a single literal.","       */","      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));","      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/","      bflush = trees._tr_tally(s, 0, s.window[s.strstart-1]);","","      if (bflush) {","        /*** FLUSH_BLOCK_ONLY(s, 0) ***/","        flush_block_only(s, false);","        /***/","      }","      s.strstart++;","      s.lookahead--;","      if (s.strm.avail_out === 0) {","        return BS_NEED_MORE;","      }","    } else {","      /* There is no previous match to compare with, wait for","       * the next step to decide.","       */","      s.match_available = 1;","      s.strstart++;","      s.lookahead--;","    }","  }","  //Assert (flush != Z_NO_FLUSH, \"no flush?\");","  if (s.match_available) {","    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));","    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/","    bflush = trees._tr_tally(s, 0, s.window[s.strstart-1]);","","    s.match_available = 0;","  }","  s.insert = s.strstart < MIN_MATCH-1 ? s.strstart : MIN_MATCH-1;","  if (flush === Z_FINISH) {","    /*** FLUSH_BLOCK(s, 1); ***/","    flush_block_only(s, true);","    if (s.strm.avail_out === 0) {","      return BS_FINISH_STARTED;","    }","    /***/","    return BS_FINISH_DONE;","  }","  if (s.last_lit) {","    /*** FLUSH_BLOCK(s, 0); ***/","    flush_block_only(s, false);","    if (s.strm.avail_out === 0) {","      return BS_NEED_MORE;","    }","    /***/","  }","","  return BS_BLOCK_DONE;","}","","","/* ==========================================================================="," * For Z_RLE, simply look for runs of bytes, generate matches only of distance"," * one.  Do not maintain a hash table.  (It will be regenerated if this run of"," * deflate switches away from Z_RLE.)"," */","function deflate_rle(s, flush) {","  var bflush;            /* set if current block must be flushed */","  var prev;              /* byte at distance one to match */","  var scan, strend;      /* scan goes up to strend for length of run */","","  var _win = s.window;","","  for (;;) {","    /* Make sure that we always have enough lookahead, except","     * at the end of the input file. We need MAX_MATCH bytes","     * for the longest run, plus one for the unrolled loop.","     */","    if (s.lookahead <= MAX_MATCH) {","      fill_window(s);","      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {","        return BS_NEED_MORE;","      }","      if (s.lookahead === 0) { break; } /* flush the current block */","    }","","    /* See how many times the previous byte repeats */","    s.match_length = 0;","    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {","      scan = s.strstart - 1;","      prev = _win[scan];","      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {","        strend = s.strstart + MAX_MATCH;","        do {","          /*jshint noempty:false*/","        } while (prev === _win[++scan] && prev === _win[++scan] &&","                 prev === _win[++scan] && prev === _win[++scan] &&","                 prev === _win[++scan] && prev === _win[++scan] &&","                 prev === _win[++scan] && prev === _win[++scan] &&","                 scan < strend);","        s.match_length = MAX_MATCH - (strend - scan);","        if (s.match_length > s.lookahead) {","          s.match_length = s.lookahead;","        }","      }","      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");","    }","","    /* Emit match if have run of MIN_MATCH or longer, else emit literal */","    if (s.match_length >= MIN_MATCH) {","      //check_match(s, s.strstart, s.strstart - 1, s.match_length);","","      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/","      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);","","      s.lookahead -= s.match_length;","      s.strstart += s.match_length;","      s.match_length = 0;","    } else {","      /* No match, output a literal byte */","      //Tracevv((stderr,\"%c\", s->window[s->strstart]));","      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/","      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);","","      s.lookahead--;","      s.strstart++;","    }","    if (bflush) {","      /*** FLUSH_BLOCK(s, 0); ***/","      flush_block_only(s, false);","      if (s.strm.avail_out === 0) {","        return BS_NEED_MORE;","      }","      /***/","    }","  }","  s.insert = 0;","  if (flush === Z_FINISH) {","    /*** FLUSH_BLOCK(s, 1); ***/","    flush_block_only(s, true);","    if (s.strm.avail_out === 0) {","      return BS_FINISH_STARTED;","    }","    /***/","    return BS_FINISH_DONE;","  }","  if (s.last_lit) {","    /*** FLUSH_BLOCK(s, 0); ***/","    flush_block_only(s, false);","    if (s.strm.avail_out === 0) {","      return BS_NEED_MORE;","    }","    /***/","  }","  return BS_BLOCK_DONE;","}","","/* ==========================================================================="," * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table."," * (It will be regenerated if this run of deflate switches away from Huffman.)"," */","function deflate_huff(s, flush) {","  var bflush;             /* set if current block must be flushed */","","  for (;;) {","    /* Make sure that we have a literal to write. */","    if (s.lookahead === 0) {","      fill_window(s);","      if (s.lookahead === 0) {","        if (flush === Z_NO_FLUSH) {","          return BS_NEED_MORE;","        }","        break;      /* flush the current block */","      }","    }","","    /* Output a literal byte */","    s.match_length = 0;","    //Tracevv((stderr,\"%c\", s->window[s->strstart]));","    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/","    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);","    s.lookahead--;","    s.strstart++;","    if (bflush) {","      /*** FLUSH_BLOCK(s, 0); ***/","      flush_block_only(s, false);","      if (s.strm.avail_out === 0) {","        return BS_NEED_MORE;","      }","      /***/","    }","  }","  s.insert = 0;","  if (flush === Z_FINISH) {","    /*** FLUSH_BLOCK(s, 1); ***/","    flush_block_only(s, true);","    if (s.strm.avail_out === 0) {","      return BS_FINISH_STARTED;","    }","    /***/","    return BS_FINISH_DONE;","  }","  if (s.last_lit) {","    /*** FLUSH_BLOCK(s, 0); ***/","    flush_block_only(s, false);","    if (s.strm.avail_out === 0) {","      return BS_NEED_MORE;","    }","    /***/","  }","  return BS_BLOCK_DONE;","}","","/* Values for max_lazy_match, good_match and max_chain_length, depending on"," * the desired pack level (0..9). The values given below have been tuned to"," * exclude worst case performance for pathological files. Better values may be"," * found for specific files."," */","var Config = function (good_length, max_lazy, nice_length, max_chain, func) {","  this.good_length = good_length;","  this.max_lazy = max_lazy;","  this.nice_length = nice_length;","  this.max_chain = max_chain;","  this.func = func;","};","","var configuration_table;","","configuration_table = [","  /*      good lazy nice chain */","  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */","  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */","  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */","  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */","","  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */","  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */","  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */","  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */","  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */","  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */","];","","","/* ==========================================================================="," * Initialize the \"longest match\" routines for a new zlib stream"," */","function lm_init(s) {","  s.window_size = 2 * s.w_size;","","  /*** CLEAR_HASH(s); ***/","  zero(s.head); // Fill with NIL (= 0);","","  /* Set the default configuration parameters:","   */","  s.max_lazy_match = configuration_table[s.level].max_lazy;","  s.good_match = configuration_table[s.level].good_length;","  s.nice_match = configuration_table[s.level].nice_length;","  s.max_chain_length = configuration_table[s.level].max_chain;","","  s.strstart = 0;","  s.block_start = 0;","  s.lookahead = 0;","  s.insert = 0;","  s.match_length = s.prev_length = MIN_MATCH - 1;","  s.match_available = 0;","  s.ins_h = 0;","}","","","function DeflateState() {","  this.strm = null;            /* pointer back to this zlib stream */","  this.status = 0;            /* as the name implies */","  this.pending_buf = null;      /* output still pending */","  this.pending_buf_size = 0;  /* size of pending_buf */","  this.pending_out = 0;       /* next pending byte to output to the stream */","  this.pending = 0;           /* nb of bytes in the pending buffer */","  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */","  this.gzhead = null;         /* gzip header information to write */","  this.gzindex = 0;           /* where in extra, name, or comment */","  this.method = Z_DEFLATED; /* can only be DEFLATED */","  this.last_flush = -1;   /* value of flush param for previous deflate call */","","  this.w_size = 0;  /* LZ77 window size (32K by default) */","  this.w_bits = 0;  /* log2(w_size)  (8..16) */","  this.w_mask = 0;  /* w_size - 1 */","","  this.window = null;","  /* Sliding window. Input bytes are read into the second half of the window,","   * and move to the first half later to keep a dictionary of at least wSize","   * bytes. With this organization, matches are limited to a distance of","   * wSize-MAX_MATCH bytes, but this ensures that IO is always","   * performed with a length multiple of the block size.","   */","","  this.window_size = 0;","  /* Actual size of window: 2*wSize, except when the user input buffer","   * is directly used as sliding window.","   */","","  this.prev = null;","  /* Link to older string with same hash index. To limit the size of this","   * array to 64K, this link is maintained only for the last 32K strings.","   * An index in this array is thus a window index modulo 32K.","   */","","  this.head = null;   /* Heads of the hash chains or NIL. */","","  this.ins_h = 0;       /* hash index of string to be inserted */","  this.hash_size = 0;   /* number of elements in hash table */","  this.hash_bits = 0;   /* log2(hash_size) */","  this.hash_mask = 0;   /* hash_size-1 */","","  this.hash_shift = 0;","  /* Number of bits by which ins_h must be shifted at each input","   * step. It must be such that after MIN_MATCH steps, the oldest","   * byte no longer takes part in the hash key, that is:","   *   hash_shift * MIN_MATCH >= hash_bits","   */","","  this.block_start = 0;","  /* Window position at the beginning of the current output block. Gets","   * negative when the window is moved backwards.","   */","","  this.match_length = 0;      /* length of best match */","  this.prev_match = 0;        /* previous match */","  this.match_available = 0;   /* set if previous match exists */","  this.strstart = 0;          /* start of string to insert */","  this.match_start = 0;       /* start of matching string */","  this.lookahead = 0;         /* number of valid bytes ahead in window */","","  this.prev_length = 0;","  /* Length of the best match at previous step. Matches not greater than this","   * are discarded. This is used in the lazy match evaluation.","   */","","  this.max_chain_length = 0;","  /* To speed up deflation, hash chains are never searched beyond this","   * length.  A higher limit improves compression ratio but degrades the","   * speed.","   */","","  this.max_lazy_match = 0;","  /* Attempt to find a better match only when the current match is strictly","   * smaller than this value. This mechanism is used only for compression","   * levels >= 4.","   */","  // That's alias to max_lazy_match, don't use directly","  //this.max_insert_length = 0;","  /* Insert new strings in the hash table only if the match length is not","   * greater than this length. This saves time but degrades compression.","   * max_insert_length is used only for compression levels <= 3.","   */","","  this.level = 0;     /* compression level (1..9) */","  this.strategy = 0;  /* favor or force Huffman coding*/","","  this.good_match = 0;","  /* Use a faster search when the previous match is longer than this */","","  this.nice_match = 0; /* Stop searching when current match exceeds this */","","              /* used by trees.c: */","","  /* Didn't use ct_data typedef below to suppress compiler warning */","","  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */","  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */","  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */","","  // Use flat array of DOUBLE size, with interleaved fata,","  // because JS does not support effective","  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);","  this.dyn_dtree  = new utils.Buf16((2*D_CODES+1) * 2);","  this.bl_tree    = new utils.Buf16((2*BL_CODES+1) * 2);","  zero(this.dyn_ltree);","  zero(this.dyn_dtree);","  zero(this.bl_tree);","","  this.l_desc   = null;         /* desc. for literal tree */","  this.d_desc   = null;         /* desc. for distance tree */","  this.bl_desc  = null;         /* desc. for bit length tree */","","  //ush bl_count[MAX_BITS+1];","  this.bl_count = new utils.Buf16(MAX_BITS+1);","  /* number of codes at each bit length for an optimal tree */","","  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */","  this.heap = new utils.Buf16(2*L_CODES+1);  /* heap used to build the Huffman trees */","  zero(this.heap);","","  this.heap_len = 0;               /* number of elements in the heap */","  this.heap_max = 0;               /* element of largest frequency */","  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.","   * The same heap array is used to build all trees.","   */","","  this.depth = new utils.Buf16(2*L_CODES+1); //uch depth[2*L_CODES+1];","  zero(this.depth);","  /* Depth of each subtree used as tie breaker for trees of equal frequency","   */","","  this.l_buf = 0;          /* buffer index for literals or lengths */","","  this.lit_bufsize = 0;","  /* Size of match buffer for literals/lengths.  There are 4 reasons for","   * limiting lit_bufsize to 64K:","   *   - frequencies can be kept in 16 bit counters","   *   - if compression is not successful for the first block, all input","   *     data is still in the window so we can still emit a stored block even","   *     when input comes from standard input.  (This can also be done for","   *     all blocks if lit_bufsize is not greater than 32K.)","   *   - if compression is not successful for a file smaller than 64K, we can","   *     even emit a stored file instead of a stored block (saving 5 bytes).","   *     This is applicable only for zip (not gzip or zlib).","   *   - creating new Huffman trees less frequently may not provide fast","   *     adaptation to changes in the input data statistics. (Take for","   *     example a binary file with poorly compressible code followed by","   *     a highly compressible string table.) Smaller buffer sizes give","   *     fast adaptation but have of course the overhead of transmitting","   *     trees more frequently.","   *   - I can't count above 4","   */","","  this.last_lit = 0;      /* running index in l_buf */","","  this.d_buf = 0;","  /* Buffer index for distances. To simplify the code, d_buf and l_buf have","   * the same number of elements. To use different lengths, an extra flag","   * array would be necessary.","   */","","  this.opt_len = 0;       /* bit length of current block with optimal trees */","  this.static_len = 0;    /* bit length of current block with static trees */","  this.matches = 0;       /* number of string matches in current block */","  this.insert = 0;        /* bytes at end of window left to insert */","","","  this.bi_buf = 0;","  /* Output buffer. bits are inserted starting at the bottom (least","   * significant bits).","   */","  this.bi_valid = 0;","  /* Number of valid bits in bi_buf.  All bits above the last valid bit","   * are always zero.","   */","","  // Used for window memory init. We safely ignore it for JS. That makes","  // sense only for pointers and memory check tools.","  //this.high_water = 0;","  /* High water mark offset in window for initialized bytes -- bytes above","   * this are set to zero in order to avoid memory check warnings when","   * longest match routines access bytes past the input.  This is then","   * updated to the new high water mark.","   */","}","","","function deflateResetKeep(strm) {","  var s;","","  if (!strm || !strm.state) {","    return err(strm, Z_STREAM_ERROR);","  }","","  strm.total_in = strm.total_out = 0;","  strm.data_type = Z_UNKNOWN;","","  s = strm.state;","  s.pending = 0;","  s.pending_out = 0;","","  if (s.wrap < 0) {","    s.wrap = -s.wrap;","    /* was made negative by deflate(..., Z_FINISH); */","  }","  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);","  strm.adler = (s.wrap === 2) ?","    0  // crc32(0, Z_NULL, 0)","  :","    1; // adler32(0, Z_NULL, 0)","  s.last_flush = Z_NO_FLUSH;","  trees._tr_init(s);","  return Z_OK;","}","","","function deflateReset(strm) {","  var ret = deflateResetKeep(strm);","  if (ret === Z_OK) {","    lm_init(strm.state);","  }","  return ret;","}","","","function deflateSetHeader(strm, head) {","  if (!strm || !strm.state) { return Z_STREAM_ERROR; }","  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }","  strm.state.gzhead = head;","  return Z_OK;","}","","","function deflateInit2(strm, level, method, windowBits, memLevel, strategy) {","  if (!strm) { // === Z_NULL","    return Z_STREAM_ERROR;","  }","  var wrap = 1;","","  if (level === Z_DEFAULT_COMPRESSION) {","    level = 6;","  }","","  if (windowBits < 0) { /* suppress zlib wrapper */","    wrap = 0;","    windowBits = -windowBits;","  }","","  else if (windowBits > 15) {","    wrap = 2;           /* write gzip wrapper instead */","    windowBits -= 16;","  }","","","  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||","    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||","    strategy < 0 || strategy > Z_FIXED) {","    return err(strm, Z_STREAM_ERROR);","  }","","","  if (windowBits === 8) {","    windowBits = 9;","  }","  /* until 256-byte window bug fixed */","","  var s = new DeflateState();","","  strm.state = s;","  s.strm = strm;","","  s.wrap = wrap;","  s.gzhead = null;","  s.w_bits = windowBits;","  s.w_size = 1 << s.w_bits;","  s.w_mask = s.w_size - 1;","","  s.hash_bits = memLevel + 7;","  s.hash_size = 1 << s.hash_bits;","  s.hash_mask = s.hash_size - 1;","  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);","","  s.window = new utils.Buf8(s.w_size * 2);","  s.head = new utils.Buf16(s.hash_size);","  s.prev = new utils.Buf16(s.w_size);","","  // Don't need mem init magic for JS.","  //s.high_water = 0;  /* nothing written to s->window yet */","","  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */","","  s.pending_buf_size = s.lit_bufsize * 4;","  s.pending_buf = new utils.Buf8(s.pending_buf_size);","","  s.d_buf = s.lit_bufsize >> 1;","  s.l_buf = (1 + 2) * s.lit_bufsize;","","  s.level = level;","  s.strategy = strategy;","  s.method = method;","","  return deflateReset(strm);","}","","function deflateInit(strm, level) {","  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);","}","","","function deflate(strm, flush) {","  var old_flush, s;","  var beg, val; // for gzip header write only","","  if (!strm || !strm.state ||","    flush > Z_BLOCK || flush < 0) {","    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;","  }","","  s = strm.state;","","  if (!strm.output ||","      (!strm.input && strm.avail_in !== 0) ||","      (s.status === FINISH_STATE && flush !== Z_FINISH)) {","    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);","  }","","  s.strm = strm; /* just in case */","  old_flush = s.last_flush;","  s.last_flush = flush;","","  /* Write the header */","  if (s.status === INIT_STATE) {","","    if (s.wrap === 2) { // GZIP header","      strm.adler = 0;  //crc32(0L, Z_NULL, 0);","      put_byte(s, 31);","      put_byte(s, 139);","      put_byte(s, 8);","      if (!s.gzhead) { // s->gzhead == Z_NULL","        put_byte(s, 0);","        put_byte(s, 0);","        put_byte(s, 0);","        put_byte(s, 0);","        put_byte(s, 0);","        put_byte(s, s.level === 9 ? 2 :","                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?","                     4 : 0));","        put_byte(s, OS_CODE);","        s.status = BUSY_STATE;","      }","      else {","        put_byte(s, (s.gzhead.text ? 1 : 0) +","                    (s.gzhead.hcrc ? 2 : 0) +","                    (!s.gzhead.extra ? 0 : 4) +","                    (!s.gzhead.name ? 0 : 8) +","                    (!s.gzhead.comment ? 0 : 16)","                );","        put_byte(s, s.gzhead.time & 0xff);","        put_byte(s, (s.gzhead.time >> 8) & 0xff);","        put_byte(s, (s.gzhead.time >> 16) & 0xff);","        put_byte(s, (s.gzhead.time >> 24) & 0xff);","        put_byte(s, s.level === 9 ? 2 :","                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?","                     4 : 0));","        put_byte(s, s.gzhead.os & 0xff);","        if (s.gzhead.extra && s.gzhead.extra.length) {","          put_byte(s, s.gzhead.extra.length & 0xff);","          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);","        }","        if (s.gzhead.hcrc) {","          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);","        }","        s.gzindex = 0;","        s.status = EXTRA_STATE;","      }","    }","    else // DEFLATE header","    {","      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;","      var level_flags = -1;","","      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {","        level_flags = 0;","      } else if (s.level < 6) {","        level_flags = 1;","      } else if (s.level === 6) {","        level_flags = 2;","      } else {","        level_flags = 3;","      }","      header |= (level_flags << 6);","      if (s.strstart !== 0) { header |= PRESET_DICT; }","      header += 31 - (header % 31);","","      s.status = BUSY_STATE;","      putShortMSB(s, header);","","      /* Save the adler32 of the preset dictionary: */","      if (s.strstart !== 0) {","        putShortMSB(s, strm.adler >>> 16);","        putShortMSB(s, strm.adler & 0xffff);","      }","      strm.adler = 1; // adler32(0L, Z_NULL, 0);","    }","  }","","//#ifdef GZIP","  if (s.status === EXTRA_STATE) {","    if (s.gzhead.extra/* != Z_NULL*/) {","      beg = s.pending;  /* start of bytes to update crc */","","      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {","        if (s.pending === s.pending_buf_size) {","          if (s.gzhead.hcrc && s.pending > beg) {","            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);","          }","          flush_pending(strm);","          beg = s.pending;","          if (s.pending === s.pending_buf_size) {","            break;","          }","        }","        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);","        s.gzindex++;","      }","      if (s.gzhead.hcrc && s.pending > beg) {","        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);","      }","      if (s.gzindex === s.gzhead.extra.length) {","        s.gzindex = 0;","        s.status = NAME_STATE;","      }","    }","    else {","      s.status = NAME_STATE;","    }","  }","  if (s.status === NAME_STATE) {","    if (s.gzhead.name/* != Z_NULL*/) {","      beg = s.pending;  /* start of bytes to update crc */","      //int val;","","      do {","        if (s.pending === s.pending_buf_size) {","          if (s.gzhead.hcrc && s.pending > beg) {","            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);","          }","          flush_pending(strm);","          beg = s.pending;","          if (s.pending === s.pending_buf_size) {","            val = 1;","            break;","          }","        }","        // JS specific: little magic to add zero terminator to end of string","        if (s.gzindex < s.gzhead.name.length) {","          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;","        } else {","          val = 0;","        }","        put_byte(s, val);","      } while (val !== 0);","","      if (s.gzhead.hcrc && s.pending > beg) {","        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);","      }","      if (val === 0) {","        s.gzindex = 0;","        s.status = COMMENT_STATE;","      }","    }","    else {","      s.status = COMMENT_STATE;","    }","  }","  if (s.status === COMMENT_STATE) {","    if (s.gzhead.comment/* != Z_NULL*/) {","      beg = s.pending;  /* start of bytes to update crc */","      //int val;","","      do {","        if (s.pending === s.pending_buf_size) {","          if (s.gzhead.hcrc && s.pending > beg) {","            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);","          }","          flush_pending(strm);","          beg = s.pending;","          if (s.pending === s.pending_buf_size) {","            val = 1;","            break;","          }","        }","        // JS specific: little magic to add zero terminator to end of string","        if (s.gzindex < s.gzhead.comment.length) {","          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;","        } else {","          val = 0;","        }","        put_byte(s, val);","      } while (val !== 0);","","      if (s.gzhead.hcrc && s.pending > beg) {","        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);","      }","      if (val === 0) {","        s.status = HCRC_STATE;","      }","    }","    else {","      s.status = HCRC_STATE;","    }","  }","  if (s.status === HCRC_STATE) {","    if (s.gzhead.hcrc) {","      if (s.pending + 2 > s.pending_buf_size) {","        flush_pending(strm);","      }","      if (s.pending + 2 <= s.pending_buf_size) {","        put_byte(s, strm.adler & 0xff);","        put_byte(s, (strm.adler >> 8) & 0xff);","        strm.adler = 0; //crc32(0L, Z_NULL, 0);","        s.status = BUSY_STATE;","      }","    }","    else {","      s.status = BUSY_STATE;","    }","  }","//#endif","","  /* Flush as much pending output as possible */","  if (s.pending !== 0) {","    flush_pending(strm);","    if (strm.avail_out === 0) {","      /* Since avail_out is 0, deflate will be called again with","       * more output space, but possibly with both pending and","       * avail_in equal to zero. There won't be anything to do,","       * but this is not an error situation so make sure we","       * return OK instead of BUF_ERROR at next call of deflate:","       */","      s.last_flush = -1;","      return Z_OK;","    }","","    /* Make sure there is something to do and avoid duplicate consecutive","     * flushes. For repeated and useless calls with Z_FINISH, we keep","     * returning Z_STREAM_END instead of Z_BUF_ERROR.","     */","  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&","    flush !== Z_FINISH) {","    return err(strm, Z_BUF_ERROR);","  }","","  /* User must not provide more input after the first FINISH: */","  if (s.status === FINISH_STATE && strm.avail_in !== 0) {","    return err(strm, Z_BUF_ERROR);","  }","","  /* Start a new block or continue the current one.","   */","  if (strm.avail_in !== 0 || s.lookahead !== 0 ||","    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {","    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :","      (s.strategy === Z_RLE ? deflate_rle(s, flush) :","        configuration_table[s.level].func(s, flush));","","    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {","      s.status = FINISH_STATE;","    }","    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {","      if (strm.avail_out === 0) {","        s.last_flush = -1;","        /* avoid BUF_ERROR next call, see above */","      }","      return Z_OK;","      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call","       * of deflate should use the same flush parameter to make sure","       * that the flush is complete. So we don't have to output an","       * empty block here, this will be done at next call. This also","       * ensures that for a very small output buffer, we emit at most","       * one empty block.","       */","    }","    if (bstate === BS_BLOCK_DONE) {","      if (flush === Z_PARTIAL_FLUSH) {","        trees._tr_align(s);","      }","      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */","","        trees._tr_stored_block(s, 0, 0, false);","        /* For a full flush, this empty block will be recognized","         * as a special marker by inflate_sync().","         */","        if (flush === Z_FULL_FLUSH) {","          /*** CLEAR_HASH(s); ***/             /* forget history */","          zero(s.head); // Fill with NIL (= 0);","","          if (s.lookahead === 0) {","            s.strstart = 0;","            s.block_start = 0;","            s.insert = 0;","          }","        }","      }","      flush_pending(strm);","      if (strm.avail_out === 0) {","        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */","        return Z_OK;","      }","    }","  }","  //Assert(strm->avail_out > 0, \"bug2\");","  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}","","  if (flush !== Z_FINISH) { return Z_OK; }","  if (s.wrap <= 0) { return Z_STREAM_END; }","","  /* Write the trailer */","  if (s.wrap === 2) {","    put_byte(s, strm.adler & 0xff);","    put_byte(s, (strm.adler >> 8) & 0xff);","    put_byte(s, (strm.adler >> 16) & 0xff);","    put_byte(s, (strm.adler >> 24) & 0xff);","    put_byte(s, strm.total_in & 0xff);","    put_byte(s, (strm.total_in >> 8) & 0xff);","    put_byte(s, (strm.total_in >> 16) & 0xff);","    put_byte(s, (strm.total_in >> 24) & 0xff);","  }","  else","  {","    putShortMSB(s, strm.adler >>> 16);","    putShortMSB(s, strm.adler & 0xffff);","  }","","  flush_pending(strm);","  /* If avail_out is zero, the application will call deflate again","   * to flush the rest.","   */","  if (s.wrap > 0) { s.wrap = -s.wrap; }","  /* write the trailer only once! */","  return s.pending !== 0 ? Z_OK : Z_STREAM_END;","}","","function deflateEnd(strm) {","  var status;","","  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {","    return Z_STREAM_ERROR;","  }","","  status = strm.state.status;","  if (status !== INIT_STATE &&","    status !== EXTRA_STATE &&","    status !== NAME_STATE &&","    status !== COMMENT_STATE &&","    status !== HCRC_STATE &&","    status !== BUSY_STATE &&","    status !== FINISH_STATE","  ) {","    return err(strm, Z_STREAM_ERROR);","  }","","  strm.state = null;","","  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;","}","","/* ========================================================================="," * Copy the source state to the destination state"," */","//function deflateCopy(dest, source) {","//","//}","","exports.deflateInit = deflateInit;","exports.deflateInit2 = deflateInit2;","exports.deflateReset = deflateReset;","exports.deflateResetKeep = deflateResetKeep;","exports.deflateSetHeader = deflateSetHeader;","exports.deflate = deflate;","exports.deflateEnd = deflateEnd;","exports.deflateInfo = 'pako deflate (from Nodeca project)';","","/* Not implemented","exports.deflateBound = deflateBound;","exports.deflateCopy = deflateCopy;","exports.deflateSetDictionary = deflateSetDictionary;","exports.deflateParams = deflateParams;","exports.deflatePending = deflatePending;","exports.deflatePrime = deflatePrime;","exports.deflateTune = deflateTune;","*/",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"14":1,"15":1,"17":1,"18":1,"19":1,"26":1,"27":1,"30":1,"31":1,"33":1,"41":1,"44":1,"45":1,"46":1,"47":1,"48":1,"54":1,"58":1,"63":1,"65":1,"67":1,"70":1,"72":1,"74":1,"76":1,"78":1,"80":1,"82":1,"85":1,"86":1,"87":1,"89":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"99":1,"100":1,"101":1,"102":1,"104":1,"106":1,"107":0,"108":0,"111":1,"112":0,"115":1,"124":1,"125":0,"128":0,"129":0,"130":0,"132":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"146":1,"147":0,"148":0,"149":0,"153":1,"154":0,"163":1,"166":0,"167":0,"178":1,"179":0,"181":0,"182":0,"184":0,"186":0,"187":0,"188":0,"191":0,"192":0,"195":0,"196":0,"198":0,"211":1,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"221":0,"223":0,"224":0,"230":0,"231":0,"232":0,"240":0,"241":0,"246":0,"250":0,"252":0,"263":0,"267":0,"276":0,"277":0,"283":0,"293":0,"294":0,"296":0,"297":0,"298":0,"299":0,"300":0,"302":0,"303":0,"307":0,"308":0,"310":0,"324":1,"325":0,"326":0,"330":0,"331":0,"351":0,"353":0,"354":0,"355":0,"357":0,"366":0,"367":0,"368":0,"369":0,"370":0,"373":0,"374":0,"375":0,"376":0,"377":0,"383":0,"385":0,"386":0,"401":0,"402":0,"405":0,"406":0,"407":0,"410":0,"414":0,"416":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"480":1,"484":0,"486":0,"487":0,"491":0,"493":0,"502":0,"503":0,"504":0,"507":0,"508":0,"515":0,"516":0,"519":0,"521":0,"523":0,"524":0,"526":0,"527":0,"528":0,"537":0,"539":0,"540":0,"541":0,"547":0,"549":0,"551":0,"552":0,"553":0,"556":0,"559":0,"561":0,"562":0,"563":0,"568":0,"578":1,"579":0,"580":0,"582":0,"588":0,"589":0,"590":0,"591":0,"593":0,"594":0,"601":0,"602":0,"604":0,"605":0,"606":0,"613":0,"618":0,"621":0,"626":0,"628":0,"633":0,"634":0,"635":0,"636":0,"638":0,"639":0,"640":0,"646":0,"649":0,"650":0,"651":0,"653":0,"666":0,"668":0,"669":0,"671":0,"673":0,"674":0,"675":0,"680":0,"681":0,"683":0,"684":0,"685":0,"688":0,"690":0,"692":0,"693":0,"694":0,"698":0,"706":1,"707":0,"708":0,"710":0,"713":0,"719":0,"720":0,"721":0,"722":0,"724":0,"730":0,"731":0,"733":0,"734":0,"735":0,"741":0,"742":0,"743":0,"745":0,"751":0,"754":0,"760":0,"766":0,"767":0,"774":0,"780":0,"781":0,"782":0,"783":0,"785":0,"786":0,"787":0,"791":0,"792":0,"793":0,"795":0,"797":0,"798":0,"799":0,"804":0,"811":0,"813":0,"815":0,"818":0,"819":0,"820":0,"821":0,"827":0,"828":0,"829":0,"833":0,"836":0,"838":0,"840":0,"841":0,"843":0,"844":0,"845":0,"848":0,"850":0,"852":0,"853":0,"854":0,"859":0,"868":1,"869":0,"870":0,"871":0,"873":0,"875":0,"880":0,"881":0,"882":0,"883":0,"885":0,"889":0,"890":0,"891":0,"892":0,"893":0,"894":0,"895":0,"902":0,"903":0,"904":0,"911":0,"915":0,"917":0,"918":0,"919":0,"924":0,"926":0,"927":0,"929":0,"931":0,"932":0,"933":0,"938":0,"939":0,"941":0,"942":0,"943":0,"946":0,"948":0,"950":0,"951":0,"952":0,"956":0,"963":1,"964":0,"966":0,"968":0,"969":0,"970":0,"971":0,"972":0,"974":0,"979":0,"982":0,"983":0,"984":0,"985":0,"987":0,"988":0,"989":0,"994":0,"995":0,"997":0,"998":0,"999":0,"1002":0,"1004":0,"1006":0,"1007":0,"1008":0,"1012":0,"1020":1,"1021":10,"1022":10,"1023":10,"1024":10,"1025":10,"1028":1,"1030":1,"1049":1,"1050":0,"1053":0,"1057":0,"1058":0,"1059":0,"1060":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1067":0,"1068":0,"1072":1,"1073":0,"1074":0,"1075":0,"1076":0,"1077":0,"1078":0,"1079":0,"1080":0,"1081":0,"1082":0,"1083":0,"1085":0,"1086":0,"1087":0,"1089":0,"1097":0,"1102":0,"1108":0,"1110":0,"1111":0,"1112":0,"1113":0,"1115":0,"1122":0,"1127":0,"1128":0,"1129":0,"1130":0,"1131":0,"1132":0,"1134":0,"1139":0,"1145":0,"1157":0,"1158":0,"1160":0,"1163":0,"1175":0,"1176":0,"1177":0,"1178":0,"1179":0,"1180":0,"1182":0,"1183":0,"1184":0,"1187":0,"1191":0,"1192":0,"1194":0,"1195":0,"1200":0,"1201":0,"1205":0,"1207":0,"1227":0,"1229":0,"1235":0,"1236":0,"1237":0,"1238":0,"1241":0,"1245":0,"1261":1,"1262":0,"1264":0,"1265":0,"1268":0,"1269":0,"1271":0,"1272":0,"1273":0,"1275":0,"1276":0,"1279":0,"1280":0,"1284":0,"1285":0,"1286":0,"1290":1,"1291":0,"1292":0,"1293":0,"1295":0,"1299":1,"1300":0,"1301":0,"1302":0,"1303":0,"1307":1,"1308":0,"1309":0,"1311":0,"1313":0,"1314":0,"1317":0,"1318":0,"1319":0,"1322":0,"1323":0,"1324":0,"1328":0,"1331":0,"1335":0,"1336":0,"1340":0,"1342":0,"1343":0,"1345":0,"1346":0,"1347":0,"1348":0,"1349":0,"1351":0,"1352":0,"1353":0,"1354":0,"1356":0,"1357":0,"1358":0,"1363":0,"1365":0,"1366":0,"1368":0,"1369":0,"1371":0,"1372":0,"1373":0,"1375":0,"1378":1,"1379":0,"1383":1,"1384":0,"1385":0,"1387":0,"1389":0,"1392":0,"1394":0,"1397":0,"1400":0,"1401":0,"1402":0,"1405":0,"1407":0,"1408":0,"1409":0,"1410":0,"1411":0,"1412":0,"1413":0,"1414":0,"1415":0,"1416":0,"1417":0,"1418":0,"1421":0,"1422":0,"1425":0,"1431":0,"1432":0,"1433":0,"1434":0,"1435":0,"1438":0,"1439":0,"1440":0,"1441":0,"1443":0,"1444":0,"1446":0,"1447":0,"1452":0,"1453":0,"1455":0,"1456":0,"1457":0,"1458":0,"1459":0,"1460":0,"1462":0,"1464":0,"1465":0,"1466":0,"1468":0,"1469":0,"1472":0,"1473":0,"1474":0,"1476":0,"1481":0,"1482":0,"1483":0,"1485":0,"1486":0,"1487":0,"1488":0,"1490":0,"1491":0,"1492":0,"1493":0,"1496":0,"1497":0,"1499":0,"1500":0,"1502":0,"1503":0,"1504":0,"1508":0,"1511":0,"1512":0,"1513":0,"1516":0,"1517":0,"1518":0,"1519":0,"1521":0,"1522":0,"1523":0,"1524":0,"1525":0,"1529":0,"1530":0,"1532":0,"1534":0,"1537":0,"1538":0,"1540":0,"1541":0,"1542":0,"1546":0,"1549":0,"1550":0,"1551":0,"1554":0,"1555":0,"1556":0,"1557":0,"1559":0,"1560":0,"1561":0,"1562":0,"1563":0,"1567":0,"1568":0,"1570":0,"1572":0,"1575":0,"1576":0,"1578":0,"1579":0,"1583":0,"1586":0,"1587":0,"1588":0,"1589":0,"1591":0,"1592":0,"1593":0,"1594":0,"1595":0,"1599":0,"1605":0,"1606":0,"1607":0,"1614":0,"1615":0,"1622":0,"1624":0,"1628":0,"1629":0,"1634":0,"1636":0,"1640":0,"1641":0,"1643":0,"1644":0,"1645":0,"1648":0,"1657":0,"1658":0,"1659":0,"1661":0,"1663":0,"1667":0,"1669":0,"1671":0,"1672":0,"1673":0,"1674":0,"1678":0,"1679":0,"1680":0,"1681":0,"1688":0,"1689":0,"1692":0,"1693":0,"1694":0,"1695":0,"1696":0,"1697":0,"1698":0,"1699":0,"1700":0,"1704":0,"1705":0,"1708":0,"1712":0,"1714":0,"1717":1,"1718":0,"1720":0,"1721":0,"1724":0,"1725":0,"1733":0,"1736":0,"1738":0,"1748":1,"1749":1,"1750":1,"1751":1,"1752":1,"1753":1,"1754":1,"1755":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/zlib/trees.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/zlib/trees.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":6,"8":6,"9":1463,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":1,"54":1,"55":1,"56":0,"57":0,"58":0,"59":1,"60":0,"61":1,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":1,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":1,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":1,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":1,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":1,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":1,"231":0,"232":0,"233":0,"234":1,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":1,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":1,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":1,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":1,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":1,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":1,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":1,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":1,"422":1,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":1,"433":0,"434":0,"435":1,"436":0,"437":0,"438":0,"439":1,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":1,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":1,"477":1,"478":1,"479":1,"480":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0]},"f":{"1":6,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"fnMap":{"1":{"name":"zero","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":19}}},"2":{"name":"(anonymous_2)","line":145,"loc":{"start":{"line":145,"column":21},"end":{"line":145,"column":87}}},"3":{"name":"(anonymous_3)","line":163,"loc":{"start":{"line":163,"column":15},"end":{"line":163,"column":45}}},"4":{"name":"d_code","line":171,"loc":{"start":{"line":171,"column":0},"end":{"line":171,"column":22}}},"5":{"name":"put_short","line":180,"loc":{"start":{"line":180,"column":0},"end":{"line":180,"column":26}}},"6":{"name":"send_bits","line":192,"loc":{"start":{"line":192,"column":0},"end":{"line":192,"column":37}}},"7":{"name":"send_code","line":205,"loc":{"start":{"line":205,"column":0},"end":{"line":205,"column":31}}},"8":{"name":"bi_reverse","line":215,"loc":{"start":{"line":215,"column":0},"end":{"line":215,"column":31}}},"9":{"name":"bi_flush","line":229,"loc":{"start":{"line":229,"column":0},"end":{"line":229,"column":21}}},"10":{"name":"gen_bitlen","line":253,"loc":{"start":{"line":253,"column":0},"end":{"line":256,"column":0}}},"11":{"name":"gen_codes","line":350,"loc":{"start":{"line":350,"column":0},"end":{"line":354,"column":0}}},"12":{"name":"tr_static_init","line":388,"loc":{"start":{"line":388,"column":0},"end":{"line":388,"column":26}}},"13":{"name":"init_block","line":492,"loc":{"start":{"line":492,"column":0},"end":{"line":492,"column":23}}},"14":{"name":"bi_windup","line":509,"loc":{"start":{"line":509,"column":0},"end":{"line":510,"column":0}}},"15":{"name":"copy_block","line":525,"loc":{"start":{"line":525,"column":0},"end":{"line":530,"column":0}}},"16":{"name":"smaller","line":548,"loc":{"start":{"line":548,"column":0},"end":{"line":548,"column":36}}},"17":{"name":"pqdownheap","line":561,"loc":{"start":{"line":561,"column":0},"end":{"line":565,"column":0}}},"18":{"name":"compress_block","line":594,"loc":{"start":{"line":594,"column":0},"end":{"line":598,"column":0}}},"19":{"name":"build_tree","line":654,"loc":{"start":{"line":654,"column":0},"end":{"line":657,"column":0}}},"20":{"name":"scan_tree","line":750,"loc":{"start":{"line":750,"column":0},"end":{"line":754,"column":0}}},"21":{"name":"send_tree","line":816,"loc":{"start":{"line":816,"column":0},"end":{"line":820,"column":0}}},"22":{"name":"build_bl_tree","line":887,"loc":{"start":{"line":887,"column":0},"end":{"line":887,"column":26}}},"23":{"name":"send_all_trees","line":923,"loc":{"start":{"line":923,"column":0},"end":{"line":926,"column":0}}},"24":{"name":"detect_data_type","line":963,"loc":{"start":{"line":963,"column":0},"end":{"line":963,"column":29}}},"25":{"name":"_tr_init","line":1001,"loc":{"start":{"line":1001,"column":0},"end":{"line":1002,"column":0}}},"26":{"name":"_tr_stored_block","line":1024,"loc":{"start":{"line":1024,"column":0},"end":{"line":1029,"column":0}}},"27":{"name":"_tr_align","line":1039,"loc":{"start":{"line":1039,"column":0},"end":{"line":1039,"column":22}}},"28":{"name":"_tr_flush_block","line":1050,"loc":{"start":{"line":1050,"column":0},"end":{"line":1055,"column":0}}},"29":{"name":"_tr_tally","line":1137,"loc":{"start":{"line":1137,"column":0},"end":{"line":1141,"column":0}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":30}},"3":{"start":{"line":17,"column":0},"end":{"line":17,"column":30}},"4":{"start":{"line":18,"column":0},"end":{"line":18,"column":30}},"5":{"start":{"line":20,"column":0},"end":{"line":20,"column":30}},"6":{"start":{"line":25,"column":0},"end":{"line":25,"column":81}},"7":{"start":{"line":25,"column":21},"end":{"line":25,"column":42}},"8":{"start":{"line":25,"column":43},"end":{"line":25,"column":79}},"9":{"start":{"line":25,"column":64},"end":{"line":25,"column":77}},"10":{"start":{"line":29,"column":0},"end":{"line":29,"column":21}},"11":{"start":{"line":30,"column":0},"end":{"line":30,"column":21}},"12":{"start":{"line":31,"column":0},"end":{"line":31,"column":21}},"13":{"start":{"line":34,"column":0},"end":{"line":34,"column":21}},"14":{"start":{"line":35,"column":0},"end":{"line":35,"column":23}},"15":{"start":{"line":43,"column":0},"end":{"line":43,"column":23}},"16":{"start":{"line":46,"column":0},"end":{"line":46,"column":24}},"17":{"start":{"line":49,"column":0},"end":{"line":49,"column":48}},"18":{"start":{"line":52,"column":0},"end":{"line":52,"column":23}},"19":{"start":{"line":55,"column":0},"end":{"line":55,"column":23}},"20":{"start":{"line":58,"column":0},"end":{"line":58,"column":34}},"21":{"start":{"line":61,"column":0},"end":{"line":61,"column":23}},"22":{"start":{"line":64,"column":0},"end":{"line":64,"column":23}},"23":{"start":{"line":72,"column":0},"end":{"line":72,"column":20}},"24":{"start":{"line":75,"column":0},"end":{"line":75,"column":22}},"25":{"start":{"line":78,"column":0},"end":{"line":78,"column":21}},"26":{"start":{"line":81,"column":0},"end":{"line":81,"column":21}},"27":{"start":{"line":84,"column":0},"end":{"line":84,"column":21}},"28":{"start":{"line":87,"column":0},"end":{"line":88,"column":62}},"29":{"start":{"line":90,"column":0},"end":{"line":91,"column":72}},"30":{"start":{"line":93,"column":0},"end":{"line":94,"column":42}},"31":{"start":{"line":96,"column":0},"end":{"line":97,"column":51}},"32":{"start":{"line":108,"column":0},"end":{"line":108,"column":24}},"33":{"start":{"line":111,"column":0},"end":{"line":111,"column":47}},"34":{"start":{"line":112,"column":0},"end":{"line":112,"column":19}},"35":{"start":{"line":119,"column":0},"end":{"line":119,"column":43}},"36":{"start":{"line":120,"column":0},"end":{"line":120,"column":19}},"37":{"start":{"line":125,"column":0},"end":{"line":125,"column":45}},"38":{"start":{"line":126,"column":0},"end":{"line":126,"column":17}},"39":{"start":{"line":132,"column":0},"end":{"line":132,"column":53}},"40":{"start":{"line":133,"column":0},"end":{"line":133,"column":19}},"41":{"start":{"line":136,"column":0},"end":{"line":136,"column":44}},"42":{"start":{"line":137,"column":0},"end":{"line":137,"column":18}},"43":{"start":{"line":140,"column":0},"end":{"line":140,"column":39}},"44":{"start":{"line":141,"column":0},"end":{"line":141,"column":16}},"45":{"start":{"line":145,"column":0},"end":{"line":155,"column":2}},"46":{"start":{"line":147,"column":2},"end":{"line":147,"column":34}},"47":{"start":{"line":148,"column":2},"end":{"line":148,"column":33}},"48":{"start":{"line":149,"column":2},"end":{"line":149,"column":33}},"49":{"start":{"line":150,"column":2},"end":{"line":150,"column":28}},"50":{"start":{"line":151,"column":2},"end":{"line":151,"column":33}},"51":{"start":{"line":154,"column":2},"end":{"line":154,"column":56}},"52":{"start":{"line":158,"column":0},"end":{"line":158,"column":18}},"53":{"start":{"line":159,"column":0},"end":{"line":159,"column":18}},"54":{"start":{"line":160,"column":0},"end":{"line":160,"column":19}},"55":{"start":{"line":163,"column":0},"end":{"line":167,"column":2}},"56":{"start":{"line":164,"column":2},"end":{"line":164,"column":27}},"57":{"start":{"line":165,"column":2},"end":{"line":165,"column":20}},"58":{"start":{"line":166,"column":2},"end":{"line":166,"column":29}},"59":{"start":{"line":171,"column":0},"end":{"line":173,"column":1}},"60":{"start":{"line":172,"column":2},"end":{"line":172,"column":72}},"61":{"start":{"line":180,"column":0},"end":{"line":185,"column":1}},"62":{"start":{"line":183,"column":2},"end":{"line":183,"column":42}},"63":{"start":{"line":184,"column":2},"end":{"line":184,"column":48}},"64":{"start":{"line":192,"column":0},"end":{"line":202,"column":1}},"65":{"start":{"line":193,"column":2},"end":{"line":201,"column":3}},"66":{"start":{"line":194,"column":4},"end":{"line":194,"column":47}},"67":{"start":{"line":195,"column":4},"end":{"line":195,"column":27}},"68":{"start":{"line":196,"column":4},"end":{"line":196,"column":48}},"69":{"start":{"line":197,"column":4},"end":{"line":197,"column":36}},"70":{"start":{"line":199,"column":4},"end":{"line":199,"column":47}},"71":{"start":{"line":200,"column":4},"end":{"line":200,"column":25}},"72":{"start":{"line":205,"column":0},"end":{"line":207,"column":1}},"73":{"start":{"line":206,"column":2},"end":{"line":206,"column":58}},"74":{"start":{"line":215,"column":0},"end":{"line":223,"column":1}},"75":{"start":{"line":216,"column":2},"end":{"line":216,"column":14}},"76":{"start":{"line":217,"column":2},"end":{"line":221,"column":22}},"77":{"start":{"line":218,"column":4},"end":{"line":218,"column":20}},"78":{"start":{"line":219,"column":4},"end":{"line":219,"column":16}},"79":{"start":{"line":220,"column":4},"end":{"line":220,"column":14}},"80":{"start":{"line":222,"column":2},"end":{"line":222,"column":19}},"81":{"start":{"line":229,"column":0},"end":{"line":240,"column":1}},"82":{"start":{"line":230,"column":2},"end":{"line":239,"column":3}},"83":{"start":{"line":231,"column":4},"end":{"line":231,"column":27}},"84":{"start":{"line":232,"column":4},"end":{"line":232,"column":17}},"85":{"start":{"line":233,"column":4},"end":{"line":233,"column":19}},"86":{"start":{"line":235,"column":9},"end":{"line":239,"column":3}},"87":{"start":{"line":236,"column":4},"end":{"line":236,"column":49}},"88":{"start":{"line":237,"column":4},"end":{"line":237,"column":19}},"89":{"start":{"line":238,"column":4},"end":{"line":238,"column":20}},"90":{"start":{"line":253,"column":0},"end":{"line":339,"column":1}},"91":{"start":{"line":257,"column":2},"end":{"line":257,"column":38}},"92":{"start":{"line":258,"column":2},"end":{"line":258,"column":38}},"93":{"start":{"line":259,"column":2},"end":{"line":259,"column":51}},"94":{"start":{"line":260,"column":2},"end":{"line":260,"column":49}},"95":{"start":{"line":261,"column":2},"end":{"line":261,"column":50}},"96":{"start":{"line":262,"column":2},"end":{"line":262,"column":50}},"97":{"start":{"line":263,"column":2},"end":{"line":263,"column":50}},"98":{"start":{"line":264,"column":2},"end":{"line":264,"column":8}},"99":{"start":{"line":265,"column":2},"end":{"line":265,"column":11}},"100":{"start":{"line":266,"column":2},"end":{"line":266,"column":11}},"101":{"start":{"line":267,"column":2},"end":{"line":267,"column":12}},"102":{"start":{"line":268,"column":2},"end":{"line":268,"column":8}},"103":{"start":{"line":269,"column":2},"end":{"line":269,"column":19}},"104":{"start":{"line":271,"column":2},"end":{"line":273,"column":3}},"105":{"start":{"line":272,"column":4},"end":{"line":272,"column":25}},"106":{"start":{"line":278,"column":2},"end":{"line":278,"column":45}},"107":{"start":{"line":280,"column":2},"end":{"line":302,"column":3}},"108":{"start":{"line":281,"column":4},"end":{"line":281,"column":18}},"109":{"start":{"line":282,"column":4},"end":{"line":282,"column":58}},"110":{"start":{"line":283,"column":4},"end":{"line":286,"column":5}},"111":{"start":{"line":284,"column":6},"end":{"line":284,"column":24}},"112":{"start":{"line":285,"column":6},"end":{"line":285,"column":17}},"113":{"start":{"line":287,"column":4},"end":{"line":287,"column":33}},"114":{"start":{"line":290,"column":4},"end":{"line":290,"column":35}},"115":{"start":{"line":290,"column":24},"end":{"line":290,"column":33}},"116":{"start":{"line":292,"column":4},"end":{"line":292,"column":23}},"117":{"start":{"line":293,"column":4},"end":{"line":293,"column":14}},"118":{"start":{"line":294,"column":4},"end":{"line":296,"column":5}},"119":{"start":{"line":295,"column":6},"end":{"line":295,"column":28}},"120":{"start":{"line":297,"column":4},"end":{"line":297,"column":29}},"121":{"start":{"line":298,"column":4},"end":{"line":298,"column":36}},"122":{"start":{"line":299,"column":4},"end":{"line":301,"column":5}},"123":{"start":{"line":300,"column":6},"end":{"line":300,"column":59}},"124":{"start":{"line":303,"column":2},"end":{"line":303,"column":33}},"125":{"start":{"line":303,"column":24},"end":{"line":303,"column":31}},"126":{"start":{"line":309,"column":2},"end":{"line":319,"column":25}},"127":{"start":{"line":310,"column":4},"end":{"line":310,"column":24}},"128":{"start":{"line":311,"column":4},"end":{"line":311,"column":46}},"129":{"start":{"line":311,"column":37},"end":{"line":311,"column":44}},"130":{"start":{"line":312,"column":4},"end":{"line":312,"column":23}},"131":{"start":{"line":313,"column":4},"end":{"line":313,"column":28}},"132":{"start":{"line":314,"column":4},"end":{"line":314,"column":29}},"133":{"start":{"line":318,"column":4},"end":{"line":318,"column":18}},"134":{"start":{"line":326,"column":2},"end":{"line":338,"column":3}},"135":{"start":{"line":327,"column":4},"end":{"line":327,"column":25}},"136":{"start":{"line":328,"column":4},"end":{"line":337,"column":5}},"137":{"start":{"line":329,"column":6},"end":{"line":329,"column":22}},"138":{"start":{"line":330,"column":6},"end":{"line":330,"column":37}},"139":{"start":{"line":330,"column":26},"end":{"line":330,"column":35}},"140":{"start":{"line":331,"column":6},"end":{"line":335,"column":7}},"141":{"start":{"line":333,"column":8},"end":{"line":333,"column":71}},"142":{"start":{"line":334,"column":8},"end":{"line":334,"column":37}},"143":{"start":{"line":336,"column":6},"end":{"line":336,"column":10}},"144":{"start":{"line":350,"column":0},"end":{"line":382,"column":1}},"145":{"start":{"line":355,"column":2},"end":{"line":355,"column":40}},"146":{"start":{"line":356,"column":2},"end":{"line":356,"column":15}},"147":{"start":{"line":357,"column":2},"end":{"line":357,"column":11}},"148":{"start":{"line":358,"column":2},"end":{"line":358,"column":8}},"149":{"start":{"line":363,"column":2},"end":{"line":365,"column":3}},"150":{"start":{"line":364,"column":4},"end":{"line":364,"column":60}},"151":{"start":{"line":373,"column":2},"end":{"line":381,"column":3}},"152":{"start":{"line":374,"column":4},"end":{"line":374,"column":36}},"153":{"start":{"line":375,"column":4},"end":{"line":375,"column":32}},"154":{"start":{"line":375,"column":21},"end":{"line":375,"column":30}},"155":{"start":{"line":377,"column":4},"end":{"line":377,"column":59}},"156":{"start":{"line":388,"column":0},"end":{"line":486,"column":1}},"157":{"start":{"line":389,"column":2},"end":{"line":389,"column":8}},"158":{"start":{"line":390,"column":2},"end":{"line":390,"column":11}},"159":{"start":{"line":391,"column":2},"end":{"line":391,"column":13}},"160":{"start":{"line":392,"column":2},"end":{"line":392,"column":11}},"161":{"start":{"line":393,"column":2},"end":{"line":393,"column":11}},"162":{"start":{"line":394,"column":2},"end":{"line":394,"column":39}},"163":{"start":{"line":410,"column":2},"end":{"line":410,"column":13}},"164":{"start":{"line":411,"column":2},"end":{"line":416,"column":3}},"165":{"start":{"line":412,"column":4},"end":{"line":412,"column":31}},"166":{"start":{"line":413,"column":4},"end":{"line":415,"column":5}},"167":{"start":{"line":414,"column":6},"end":{"line":414,"column":36}},"168":{"start":{"line":422,"column":2},"end":{"line":422,"column":32}},"169":{"start":{"line":425,"column":2},"end":{"line":425,"column":11}},"170":{"start":{"line":426,"column":2},"end":{"line":431,"column":3}},"171":{"start":{"line":427,"column":4},"end":{"line":427,"column":27}},"172":{"start":{"line":428,"column":4},"end":{"line":430,"column":5}},"173":{"start":{"line":429,"column":6},"end":{"line":429,"column":32}},"174":{"start":{"line":433,"column":2},"end":{"line":433,"column":13}},"175":{"start":{"line":434,"column":2},"end":{"line":439,"column":3}},"176":{"start":{"line":435,"column":4},"end":{"line":435,"column":32}},"177":{"start":{"line":436,"column":4},"end":{"line":438,"column":5}},"178":{"start":{"line":437,"column":6},"end":{"line":437,"column":38}},"179":{"start":{"line":443,"column":2},"end":{"line":445,"column":3}},"180":{"start":{"line":444,"column":4},"end":{"line":444,"column":23}},"181":{"start":{"line":447,"column":2},"end":{"line":447,"column":8}},"182":{"start":{"line":448,"column":2},"end":{"line":452,"column":3}},"183":{"start":{"line":449,"column":4},"end":{"line":449,"column":38}},"184":{"start":{"line":450,"column":4},"end":{"line":450,"column":8}},"185":{"start":{"line":451,"column":4},"end":{"line":451,"column":18}},"186":{"start":{"line":453,"column":2},"end":{"line":457,"column":3}},"187":{"start":{"line":454,"column":4},"end":{"line":454,"column":38}},"188":{"start":{"line":455,"column":4},"end":{"line":455,"column":8}},"189":{"start":{"line":456,"column":4},"end":{"line":456,"column":18}},"190":{"start":{"line":458,"column":2},"end":{"line":462,"column":3}},"191":{"start":{"line":459,"column":4},"end":{"line":459,"column":38}},"192":{"start":{"line":460,"column":4},"end":{"line":460,"column":8}},"193":{"start":{"line":461,"column":4},"end":{"line":461,"column":18}},"194":{"start":{"line":463,"column":2},"end":{"line":467,"column":3}},"195":{"start":{"line":464,"column":4},"end":{"line":464,"column":38}},"196":{"start":{"line":465,"column":4},"end":{"line":465,"column":8}},"197":{"start":{"line":466,"column":4},"end":{"line":466,"column":18}},"198":{"start":{"line":472,"column":2},"end":{"line":472,"column":47}},"199":{"start":{"line":475,"column":2},"end":{"line":478,"column":3}},"200":{"start":{"line":476,"column":4},"end":{"line":476,"column":38}},"201":{"start":{"line":477,"column":4},"end":{"line":477,"column":50}},"202":{"start":{"line":481,"column":2},"end":{"line":481,"column":95}},"203":{"start":{"line":482,"column":2},"end":{"line":482,"column":95}},"204":{"start":{"line":483,"column":2},"end":{"line":483,"column":99}},"205":{"start":{"line":492,"column":0},"end":{"line":503,"column":1}},"206":{"start":{"line":493,"column":2},"end":{"line":493,"column":8}},"207":{"start":{"line":496,"column":2},"end":{"line":496,"column":67}},"208":{"start":{"line":496,"column":35},"end":{"line":496,"column":65}},"209":{"start":{"line":497,"column":2},"end":{"line":497,"column":67}},"210":{"start":{"line":497,"column":35},"end":{"line":497,"column":65}},"211":{"start":{"line":498,"column":2},"end":{"line":498,"column":65}},"212":{"start":{"line":498,"column":35},"end":{"line":498,"column":63}},"213":{"start":{"line":500,"column":2},"end":{"line":500,"column":40}},"214":{"start":{"line":501,"column":2},"end":{"line":501,"column":31}},"215":{"start":{"line":502,"column":2},"end":{"line":502,"column":29}},"216":{"start":{"line":509,"column":0},"end":{"line":519,"column":1}},"217":{"start":{"line":511,"column":2},"end":{"line":516,"column":3}},"218":{"start":{"line":512,"column":4},"end":{"line":512,"column":27}},"219":{"start":{"line":513,"column":9},"end":{"line":516,"column":3}},"220":{"start":{"line":515,"column":4},"end":{"line":515,"column":42}},"221":{"start":{"line":517,"column":2},"end":{"line":517,"column":15}},"222":{"start":{"line":518,"column":2},"end":{"line":518,"column":17}},"223":{"start":{"line":525,"column":0},"end":{"line":542,"column":1}},"224":{"start":{"line":531,"column":2},"end":{"line":531,"column":15}},"225":{"start":{"line":533,"column":2},"end":{"line":536,"column":3}},"226":{"start":{"line":534,"column":4},"end":{"line":534,"column":22}},"227":{"start":{"line":535,"column":4},"end":{"line":535,"column":23}},"228":{"start":{"line":540,"column":2},"end":{"line":540,"column":63}},"229":{"start":{"line":541,"column":2},"end":{"line":541,"column":19}},"230":{"start":{"line":548,"column":0},"end":{"line":553,"column":1}},"231":{"start":{"line":549,"column":2},"end":{"line":549,"column":16}},"232":{"start":{"line":550,"column":2},"end":{"line":550,"column":16}},"233":{"start":{"line":551,"column":2},"end":{"line":552,"column":78}},"234":{"start":{"line":561,"column":0},"end":{"line":585,"column":1}},"235":{"start":{"line":566,"column":2},"end":{"line":566,"column":20}},"236":{"start":{"line":567,"column":2},"end":{"line":567,"column":17}},"237":{"start":{"line":568,"column":2},"end":{"line":583,"column":3}},"238":{"start":{"line":570,"column":4},"end":{"line":573,"column":5}},"239":{"start":{"line":572,"column":6},"end":{"line":572,"column":10}},"240":{"start":{"line":575,"column":4},"end":{"line":575,"column":56}},"241":{"start":{"line":575,"column":48},"end":{"line":575,"column":54}},"242":{"start":{"line":578,"column":4},"end":{"line":578,"column":26}},"243":{"start":{"line":579,"column":4},"end":{"line":579,"column":10}},"244":{"start":{"line":582,"column":4},"end":{"line":582,"column":12}},"245":{"start":{"line":584,"column":2},"end":{"line":584,"column":16}},"246":{"start":{"line":594,"column":0},"end":{"line":643,"column":1}},"247":{"start":{"line":599,"column":2},"end":{"line":599,"column":11}},"248":{"start":{"line":600,"column":2},"end":{"line":600,"column":9}},"249":{"start":{"line":601,"column":2},"end":{"line":601,"column":13}},"250":{"start":{"line":602,"column":2},"end":{"line":602,"column":11}},"251":{"start":{"line":603,"column":2},"end":{"line":603,"column":12}},"252":{"start":{"line":605,"column":2},"end":{"line":640,"column":3}},"253":{"start":{"line":606,"column":4},"end":{"line":639,"column":30}},"254":{"start":{"line":607,"column":6},"end":{"line":607,"column":88}},"255":{"start":{"line":608,"column":6},"end":{"line":608,"column":39}},"256":{"start":{"line":609,"column":6},"end":{"line":609,"column":11}},"257":{"start":{"line":611,"column":6},"end":{"line":633,"column":7}},"258":{"start":{"line":612,"column":8},"end":{"line":612,"column":32}},"259":{"start":{"line":616,"column":8},"end":{"line":616,"column":32}},"260":{"start":{"line":617,"column":8},"end":{"line":617,"column":45}},"261":{"start":{"line":618,"column":8},"end":{"line":618,"column":34}},"262":{"start":{"line":619,"column":8},"end":{"line":622,"column":9}},"263":{"start":{"line":620,"column":10},"end":{"line":620,"column":34}},"264":{"start":{"line":621,"column":10},"end":{"line":621,"column":34}},"265":{"start":{"line":623,"column":8},"end":{"line":623,"column":15}},"266":{"start":{"line":624,"column":8},"end":{"line":624,"column":28}},"267":{"start":{"line":627,"column":8},"end":{"line":627,"column":34}},"268":{"start":{"line":628,"column":8},"end":{"line":628,"column":34}},"269":{"start":{"line":629,"column":8},"end":{"line":632,"column":9}},"270":{"start":{"line":630,"column":10},"end":{"line":630,"column":34}},"271":{"start":{"line":631,"column":10},"end":{"line":631,"column":36}},"272":{"start":{"line":642,"column":2},"end":{"line":642,"column":33}},"273":{"start":{"line":654,"column":0},"end":{"line":743,"column":1}},"274":{"start":{"line":658,"column":2},"end":{"line":658,"column":31}},"275":{"start":{"line":659,"column":2},"end":{"line":659,"column":44}},"276":{"start":{"line":660,"column":2},"end":{"line":660,"column":43}},"277":{"start":{"line":661,"column":2},"end":{"line":661,"column":38}},"278":{"start":{"line":662,"column":2},"end":{"line":662,"column":11}},"279":{"start":{"line":663,"column":2},"end":{"line":663,"column":20}},"280":{"start":{"line":664,"column":2},"end":{"line":664,"column":11}},"281":{"start":{"line":670,"column":2},"end":{"line":670,"column":17}},"282":{"start":{"line":671,"column":2},"end":{"line":671,"column":25}},"283":{"start":{"line":673,"column":2},"end":{"line":681,"column":3}},"284":{"start":{"line":674,"column":4},"end":{"line":680,"column":5}},"285":{"start":{"line":675,"column":6},"end":{"line":675,"column":42}},"286":{"start":{"line":676,"column":6},"end":{"line":676,"column":21}},"287":{"start":{"line":679,"column":6},"end":{"line":679,"column":32}},"288":{"start":{"line":688,"column":2},"end":{"line":698,"column":3}},"289":{"start":{"line":689,"column":4},"end":{"line":689,"column":66}},"290":{"start":{"line":690,"column":4},"end":{"line":690,"column":32}},"291":{"start":{"line":691,"column":4},"end":{"line":691,"column":22}},"292":{"start":{"line":692,"column":4},"end":{"line":692,"column":16}},"293":{"start":{"line":694,"column":4},"end":{"line":696,"column":5}},"294":{"start":{"line":695,"column":6},"end":{"line":695,"column":48}},"295":{"start":{"line":699,"column":2},"end":{"line":699,"column":27}},"296":{"start":{"line":704,"column":2},"end":{"line":704,"column":80}},"297":{"start":{"line":704,"column":55},"end":{"line":704,"column":78}},"298":{"start":{"line":709,"column":2},"end":{"line":709,"column":15}},"299":{"start":{"line":710,"column":2},"end":{"line":732,"column":28}},"300":{"start":{"line":713,"column":4},"end":{"line":713,"column":30}},"301":{"start":{"line":714,"column":4},"end":{"line":714,"column":49}},"302":{"start":{"line":715,"column":4},"end":{"line":715,"column":39}},"303":{"start":{"line":718,"column":4},"end":{"line":718,"column":30}},"304":{"start":{"line":720,"column":4},"end":{"line":720,"column":29}},"305":{"start":{"line":721,"column":4},"end":{"line":721,"column":29}},"306":{"start":{"line":724,"column":4},"end":{"line":724,"column":74}},"307":{"start":{"line":725,"column":4},"end":{"line":725,"column":77}},"308":{"start":{"line":726,"column":4},"end":{"line":726,"column":57}},"309":{"start":{"line":729,"column":4},"end":{"line":729,"column":35}},"310":{"start":{"line":730,"column":4},"end":{"line":730,"column":39}},"311":{"start":{"line":734,"column":2},"end":{"line":734,"column":47}},"312":{"start":{"line":739,"column":2},"end":{"line":739,"column":22}},"313":{"start":{"line":742,"column":2},"end":{"line":742,"column":40}},"314":{"start":{"line":750,"column":0},"end":{"line":809,"column":1}},"315":{"start":{"line":755,"column":2},"end":{"line":755,"column":8}},"316":{"start":{"line":756,"column":2},"end":{"line":756,"column":19}},"317":{"start":{"line":757,"column":2},"end":{"line":757,"column":13}},"318":{"start":{"line":759,"column":2},"end":{"line":759,"column":38}},"319":{"start":{"line":761,"column":2},"end":{"line":761,"column":16}},"320":{"start":{"line":762,"column":2},"end":{"line":762,"column":20}},"321":{"start":{"line":763,"column":2},"end":{"line":763,"column":20}},"322":{"start":{"line":765,"column":2},"end":{"line":768,"column":3}},"323":{"start":{"line":766,"column":4},"end":{"line":766,"column":20}},"324":{"start":{"line":767,"column":4},"end":{"line":767,"column":18}},"325":{"start":{"line":769,"column":2},"end":{"line":769,"column":44}},"326":{"start":{"line":771,"column":2},"end":{"line":808,"column":3}},"327":{"start":{"line":772,"column":4},"end":{"line":772,"column":21}},"328":{"start":{"line":773,"column":4},"end":{"line":773,"column":40}},"329":{"start":{"line":775,"column":4},"end":{"line":791,"column":5}},"330":{"start":{"line":776,"column":6},"end":{"line":776,"column":15}},"331":{"start":{"line":778,"column":11},"end":{"line":791,"column":5}},"332":{"start":{"line":779,"column":6},"end":{"line":779,"column":46}},"333":{"start":{"line":781,"column":11},"end":{"line":791,"column":5}},"334":{"start":{"line":783,"column":6},"end":{"line":783,"column":67}},"335":{"start":{"line":783,"column":32},"end":{"line":783,"column":65}},"336":{"start":{"line":784,"column":6},"end":{"line":784,"column":38}},"337":{"start":{"line":786,"column":11},"end":{"line":791,"column":5}},"338":{"start":{"line":787,"column":6},"end":{"line":787,"column":40}},"339":{"start":{"line":790,"column":6},"end":{"line":790,"column":42}},"340":{"start":{"line":793,"column":4},"end":{"line":793,"column":14}},"341":{"start":{"line":794,"column":4},"end":{"line":794,"column":21}},"342":{"start":{"line":796,"column":4},"end":{"line":807,"column":5}},"343":{"start":{"line":797,"column":6},"end":{"line":797,"column":22}},"344":{"start":{"line":798,"column":6},"end":{"line":798,"column":20}},"345":{"start":{"line":800,"column":11},"end":{"line":807,"column":5}},"346":{"start":{"line":801,"column":6},"end":{"line":801,"column":20}},"347":{"start":{"line":802,"column":6},"end":{"line":802,"column":20}},"348":{"start":{"line":805,"column":6},"end":{"line":805,"column":20}},"349":{"start":{"line":806,"column":6},"end":{"line":806,"column":20}},"350":{"start":{"line":816,"column":0},"end":{"line":880,"column":1}},"351":{"start":{"line":821,"column":2},"end":{"line":821,"column":8}},"352":{"start":{"line":822,"column":2},"end":{"line":822,"column":19}},"353":{"start":{"line":823,"column":2},"end":{"line":823,"column":13}},"354":{"start":{"line":825,"column":2},"end":{"line":825,"column":38}},"355":{"start":{"line":827,"column":2},"end":{"line":827,"column":16}},"356":{"start":{"line":828,"column":2},"end":{"line":828,"column":20}},"357":{"start":{"line":829,"column":2},"end":{"line":829,"column":20}},"358":{"start":{"line":832,"column":2},"end":{"line":835,"column":3}},"359":{"start":{"line":833,"column":4},"end":{"line":833,"column":20}},"360":{"start":{"line":834,"column":4},"end":{"line":834,"column":18}},"361":{"start":{"line":837,"column":2},"end":{"line":879,"column":3}},"362":{"start":{"line":838,"column":4},"end":{"line":838,"column":21}},"363":{"start":{"line":839,"column":4},"end":{"line":839,"column":40}},"364":{"start":{"line":841,"column":4},"end":{"line":863,"column":5}},"365":{"start":{"line":842,"column":6},"end":{"line":842,"column":15}},"366":{"start":{"line":844,"column":11},"end":{"line":863,"column":5}},"367":{"start":{"line":845,"column":6},"end":{"line":845,"column":68}},"368":{"start":{"line":845,"column":11},"end":{"line":845,"column":43}},"369":{"start":{"line":847,"column":11},"end":{"line":863,"column":5}},"370":{"start":{"line":848,"column":6},"end":{"line":851,"column":7}},"371":{"start":{"line":849,"column":8},"end":{"line":849,"column":40}},"372":{"start":{"line":850,"column":8},"end":{"line":850,"column":16}},"373":{"start":{"line":853,"column":6},"end":{"line":853,"column":39}},"374":{"start":{"line":854,"column":6},"end":{"line":854,"column":31}},"375":{"start":{"line":856,"column":11},"end":{"line":863,"column":5}},"376":{"start":{"line":857,"column":6},"end":{"line":857,"column":41}},"377":{"start":{"line":858,"column":6},"end":{"line":858,"column":31}},"378":{"start":{"line":861,"column":6},"end":{"line":861,"column":43}},"379":{"start":{"line":862,"column":6},"end":{"line":862,"column":32}},"380":{"start":{"line":865,"column":4},"end":{"line":865,"column":14}},"381":{"start":{"line":866,"column":4},"end":{"line":866,"column":21}},"382":{"start":{"line":867,"column":4},"end":{"line":878,"column":5}},"383":{"start":{"line":868,"column":6},"end":{"line":868,"column":22}},"384":{"start":{"line":869,"column":6},"end":{"line":869,"column":20}},"385":{"start":{"line":871,"column":11},"end":{"line":878,"column":5}},"386":{"start":{"line":872,"column":6},"end":{"line":872,"column":20}},"387":{"start":{"line":873,"column":6},"end":{"line":873,"column":20}},"388":{"start":{"line":876,"column":6},"end":{"line":876,"column":20}},"389":{"start":{"line":877,"column":6},"end":{"line":877,"column":20}},"390":{"start":{"line":887,"column":0},"end":{"line":915,"column":1}},"391":{"start":{"line":888,"column":2},"end":{"line":888,"column":18}},"392":{"start":{"line":891,"column":2},"end":{"line":891,"column":47}},"393":{"start":{"line":892,"column":2},"end":{"line":892,"column":47}},"394":{"start":{"line":895,"column":2},"end":{"line":895,"column":27}},"395":{"start":{"line":904,"column":2},"end":{"line":908,"column":3}},"396":{"start":{"line":905,"column":4},"end":{"line":907,"column":5}},"397":{"start":{"line":906,"column":6},"end":{"line":906,"column":12}},"398":{"start":{"line":910,"column":2},"end":{"line":910,"column":41}},"399":{"start":{"line":914,"column":2},"end":{"line":914,"column":21}},"400":{"start":{"line":923,"column":0},"end":{"line":947,"column":1}},"401":{"start":{"line":927,"column":2},"end":{"line":927,"column":11}},"402":{"start":{"line":933,"column":2},"end":{"line":933,"column":30}},"403":{"start":{"line":934,"column":2},"end":{"line":934,"column":30}},"404":{"start":{"line":935,"column":2},"end":{"line":935,"column":30}},"405":{"start":{"line":936,"column":2},"end":{"line":939,"column":3}},"406":{"start":{"line":938,"column":4},"end":{"line":938,"column":61}},"407":{"start":{"line":942,"column":2},"end":{"line":942,"column":38}},"408":{"start":{"line":945,"column":2},"end":{"line":945,"column":38}},"409":{"start":{"line":963,"column":0},"end":{"line":993,"column":1}},"410":{"start":{"line":968,"column":2},"end":{"line":968,"column":30}},"411":{"start":{"line":969,"column":2},"end":{"line":969,"column":8}},"412":{"start":{"line":972,"column":2},"end":{"line":976,"column":3}},"413":{"start":{"line":973,"column":4},"end":{"line":975,"column":5}},"414":{"start":{"line":974,"column":6},"end":{"line":974,"column":22}},"415":{"start":{"line":979,"column":2},"end":{"line":982,"column":3}},"416":{"start":{"line":981,"column":4},"end":{"line":981,"column":18}},"417":{"start":{"line":983,"column":2},"end":{"line":987,"column":3}},"418":{"start":{"line":984,"column":4},"end":{"line":986,"column":5}},"419":{"start":{"line":985,"column":6},"end":{"line":985,"column":20}},"420":{"start":{"line":992,"column":2},"end":{"line":992,"column":18}},"421":{"start":{"line":996,"column":0},"end":{"line":996,"column":29}},"422":{"start":{"line":1001,"column":0},"end":{"line":1018,"column":1}},"423":{"start":{"line":1004,"column":2},"end":{"line":1007,"column":3}},"424":{"start":{"line":1005,"column":4},"end":{"line":1005,"column":21}},"425":{"start":{"line":1006,"column":4},"end":{"line":1006,"column":28}},"426":{"start":{"line":1009,"column":2},"end":{"line":1009,"column":55}},"427":{"start":{"line":1010,"column":2},"end":{"line":1010,"column":55}},"428":{"start":{"line":1011,"column":2},"end":{"line":1011,"column":54}},"429":{"start":{"line":1013,"column":2},"end":{"line":1013,"column":15}},"430":{"start":{"line":1014,"column":2},"end":{"line":1014,"column":17}},"431":{"start":{"line":1017,"column":2},"end":{"line":1017,"column":16}},"432":{"start":{"line":1024,"column":0},"end":{"line":1032,"column":1}},"433":{"start":{"line":1030,"column":2},"end":{"line":1030,"column":52}},"434":{"start":{"line":1031,"column":2},"end":{"line":1031,"column":39}},"435":{"start":{"line":1039,"column":0},"end":{"line":1043,"column":1}},"436":{"start":{"line":1040,"column":2},"end":{"line":1040,"column":35}},"437":{"start":{"line":1041,"column":2},"end":{"line":1041,"column":40}},"438":{"start":{"line":1042,"column":2},"end":{"line":1042,"column":14}},"439":{"start":{"line":1050,"column":0},"end":{"line":1131,"column":1}},"440":{"start":{"line":1056,"column":2},"end":{"line":1056,"column":28}},"441":{"start":{"line":1057,"column":2},"end":{"line":1057,"column":22}},"442":{"start":{"line":1060,"column":2},"end":{"line":1097,"column":3}},"443":{"start":{"line":1063,"column":4},"end":{"line":1065,"column":5}},"444":{"start":{"line":1064,"column":6},"end":{"line":1064,"column":45}},"445":{"start":{"line":1068,"column":4},"end":{"line":1068,"column":28}},"446":{"start":{"line":1072,"column":4},"end":{"line":1072,"column":28}},"447":{"start":{"line":1082,"column":4},"end":{"line":1082,"column":35}},"448":{"start":{"line":1085,"column":4},"end":{"line":1085,"column":37}},"449":{"start":{"line":1086,"column":4},"end":{"line":1086,"column":43}},"450":{"start":{"line":1092,"column":4},"end":{"line":1092,"column":60}},"451":{"start":{"line":1092,"column":35},"end":{"line":1092,"column":58}},"452":{"start":{"line":1096,"column":4},"end":{"line":1096,"column":44}},"453":{"start":{"line":1099,"column":2},"end":{"line":1119,"column":3}},"454":{"start":{"line":1108,"column":4},"end":{"line":1108,"column":47}},"455":{"start":{"line":1110,"column":9},"end":{"line":1119,"column":3}},"456":{"start":{"line":1112,"column":4},"end":{"line":1112,"column":56}},"457":{"start":{"line":1113,"column":4},"end":{"line":1113,"column":50}},"458":{"start":{"line":1116,"column":4},"end":{"line":1116,"column":53}},"459":{"start":{"line":1117,"column":4},"end":{"line":1117,"column":79}},"460":{"start":{"line":1118,"column":4},"end":{"line":1118,"column":48}},"461":{"start":{"line":1124,"column":2},"end":{"line":1124,"column":16}},"462":{"start":{"line":1126,"column":2},"end":{"line":1128,"column":3}},"463":{"start":{"line":1127,"column":4},"end":{"line":1127,"column":17}},"464":{"start":{"line":1137,"column":0},"end":{"line":1193,"column":1}},"465":{"start":{"line":1144,"column":2},"end":{"line":1144,"column":68}},"466":{"start":{"line":1145,"column":2},"end":{"line":1145,"column":60}},"467":{"start":{"line":1147,"column":2},"end":{"line":1147,"column":50}},"468":{"start":{"line":1148,"column":2},"end":{"line":1148,"column":15}},"469":{"start":{"line":1150,"column":2},"end":{"line":1163,"column":3}},"470":{"start":{"line":1152,"column":4},"end":{"line":1152,"column":33}},"471":{"start":{"line":1154,"column":4},"end":{"line":1154,"column":16}},"472":{"start":{"line":1156,"column":4},"end":{"line":1156,"column":11}},"473":{"start":{"line":1161,"column":4},"end":{"line":1161,"column":62}},"474":{"start":{"line":1162,"column":4},"end":{"line":1162,"column":45}},"475":{"start":{"line":1188,"column":2},"end":{"line":1188,"column":42}},"476":{"start":{"line":1195,"column":0},"end":{"line":1195,"column":29}},"477":{"start":{"line":1196,"column":0},"end":{"line":1196,"column":44}},"478":{"start":{"line":1197,"column":0},"end":{"line":1197,"column":43}},"479":{"start":{"line":1198,"column":0},"end":{"line":1198,"column":30}},"480":{"start":{"line":1199,"column":0},"end":{"line":1199,"column":30}}},"branchMap":{"1":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":22},"end":{"line":154,"column":33}},{"start":{"line":154,"column":37},"end":{"line":154,"column":55}}]},"2":{"line":172,"type":"cond-expr","locations":[{"start":{"line":172,"column":22},"end":{"line":172,"column":38}},{"start":{"line":172,"column":41},"end":{"line":172,"column":71}}]},"3":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":2},"end":{"line":193,"column":2}},{"start":{"line":193,"column":2},"end":{"line":193,"column":2}}]},"4":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":2},"end":{"line":230,"column":2}},{"start":{"line":230,"column":2},"end":{"line":230,"column":2}}]},"5":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":9},"end":{"line":235,"column":9}},{"start":{"line":235,"column":9},"end":{"line":235,"column":9}}]},"6":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":4},"end":{"line":283,"column":4}},{"start":{"line":283,"column":4},"end":{"line":283,"column":4}}]},"7":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":4},"end":{"line":290,"column":4}},{"start":{"line":290,"column":4},"end":{"line":290,"column":4}}]},"8":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":4},"end":{"line":294,"column":4}},{"start":{"line":294,"column":4},"end":{"line":294,"column":4}}]},"9":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":4},"end":{"line":299,"column":4}},{"start":{"line":299,"column":4},"end":{"line":299,"column":4}}]},"10":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":2},"end":{"line":303,"column":2}},{"start":{"line":303,"column":2},"end":{"line":303,"column":2}}]},"11":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":6},"end":{"line":330,"column":6}},{"start":{"line":330,"column":6},"end":{"line":330,"column":6}}]},"12":{"line":331,"type":"if","locations":[{"start":{"line":331,"column":6},"end":{"line":331,"column":6}},{"start":{"line":331,"column":6},"end":{"line":331,"column":6}}]},"13":{"line":375,"type":"if","locations":[{"start":{"line":375,"column":4},"end":{"line":375,"column":4}},{"start":{"line":375,"column":4},"end":{"line":375,"column":4}}]},"14":{"line":511,"type":"if","locations":[{"start":{"line":511,"column":2},"end":{"line":511,"column":2}},{"start":{"line":511,"column":2},"end":{"line":511,"column":2}}]},"15":{"line":513,"type":"if","locations":[{"start":{"line":513,"column":9},"end":{"line":513,"column":9}},{"start":{"line":513,"column":9},"end":{"line":513,"column":9}}]},"16":{"line":533,"type":"if","locations":[{"start":{"line":533,"column":2},"end":{"line":533,"column":2}},{"start":{"line":533,"column":2},"end":{"line":533,"column":2}}]},"17":{"line":551,"type":"binary-expr","locations":[{"start":{"line":551,"column":10},"end":{"line":551,"column":40}},{"start":{"line":552,"column":10},"end":{"line":552,"column":42}},{"start":{"line":552,"column":55},"end":{"line":552,"column":75}}]},"18":{"line":570,"type":"if","locations":[{"start":{"line":570,"column":4},"end":{"line":570,"column":4}},{"start":{"line":570,"column":4},"end":{"line":570,"column":4}}]},"19":{"line":570,"type":"binary-expr","locations":[{"start":{"line":570,"column":8},"end":{"line":570,"column":22}},{"start":{"line":571,"column":6},"end":{"line":571,"column":52}}]},"20":{"line":575,"type":"if","locations":[{"start":{"line":575,"column":4},"end":{"line":575,"column":4}},{"start":{"line":575,"column":4},"end":{"line":575,"column":4}}]},"21":{"line":605,"type":"if","locations":[{"start":{"line":605,"column":2},"end":{"line":605,"column":2}},{"start":{"line":605,"column":2},"end":{"line":605,"column":2}}]},"22":{"line":611,"type":"if","locations":[{"start":{"line":611,"column":6},"end":{"line":611,"column":6}},{"start":{"line":611,"column":6},"end":{"line":611,"column":6}}]},"23":{"line":619,"type":"if","locations":[{"start":{"line":619,"column":8},"end":{"line":619,"column":8}},{"start":{"line":619,"column":8},"end":{"line":619,"column":8}}]},"24":{"line":629,"type":"if","locations":[{"start":{"line":629,"column":8},"end":{"line":629,"column":8}},{"start":{"line":629,"column":8},"end":{"line":629,"column":8}}]},"25":{"line":674,"type":"if","locations":[{"start":{"line":674,"column":4},"end":{"line":674,"column":4}},{"start":{"line":674,"column":4},"end":{"line":674,"column":4}}]},"26":{"line":689,"type":"cond-expr","locations":[{"start":{"line":689,"column":50},"end":{"line":689,"column":60}},{"start":{"line":689,"column":63},"end":{"line":689,"column":64}}]},"27":{"line":694,"type":"if","locations":[{"start":{"line":694,"column":4},"end":{"line":694,"column":4}},{"start":{"line":694,"column":4},"end":{"line":694,"column":4}}]},"28":{"line":725,"type":"cond-expr","locations":[{"start":{"line":725,"column":48},"end":{"line":725,"column":58}},{"start":{"line":725,"column":61},"end":{"line":725,"column":71}}]},"29":{"line":765,"type":"if","locations":[{"start":{"line":765,"column":2},"end":{"line":765,"column":2}},{"start":{"line":765,"column":2},"end":{"line":765,"column":2}}]},"30":{"line":775,"type":"if","locations":[{"start":{"line":775,"column":4},"end":{"line":775,"column":4}},{"start":{"line":775,"column":4},"end":{"line":775,"column":4}}]},"31":{"line":775,"type":"binary-expr","locations":[{"start":{"line":775,"column":8},"end":{"line":775,"column":27}},{"start":{"line":775,"column":31},"end":{"line":775,"column":49}}]},"32":{"line":778,"type":"if","locations":[{"start":{"line":778,"column":11},"end":{"line":778,"column":11}},{"start":{"line":778,"column":11},"end":{"line":778,"column":11}}]},"33":{"line":781,"type":"if","locations":[{"start":{"line":781,"column":11},"end":{"line":781,"column":11}},{"start":{"line":781,"column":11},"end":{"line":781,"column":11}}]},"34":{"line":783,"type":"if","locations":[{"start":{"line":783,"column":6},"end":{"line":783,"column":6}},{"start":{"line":783,"column":6},"end":{"line":783,"column":6}}]},"35":{"line":786,"type":"if","locations":[{"start":{"line":786,"column":11},"end":{"line":786,"column":11}},{"start":{"line":786,"column":11},"end":{"line":786,"column":11}}]},"36":{"line":796,"type":"if","locations":[{"start":{"line":796,"column":4},"end":{"line":796,"column":4}},{"start":{"line":796,"column":4},"end":{"line":796,"column":4}}]},"37":{"line":800,"type":"if","locations":[{"start":{"line":800,"column":11},"end":{"line":800,"column":11}},{"start":{"line":800,"column":11},"end":{"line":800,"column":11}}]},"38":{"line":832,"type":"if","locations":[{"start":{"line":832,"column":2},"end":{"line":832,"column":2}},{"start":{"line":832,"column":2},"end":{"line":832,"column":2}}]},"39":{"line":841,"type":"if","locations":[{"start":{"line":841,"column":4},"end":{"line":841,"column":4}},{"start":{"line":841,"column":4},"end":{"line":841,"column":4}}]},"40":{"line":841,"type":"binary-expr","locations":[{"start":{"line":841,"column":8},"end":{"line":841,"column":27}},{"start":{"line":841,"column":31},"end":{"line":841,"column":49}}]},"41":{"line":844,"type":"if","locations":[{"start":{"line":844,"column":11},"end":{"line":844,"column":11}},{"start":{"line":844,"column":11},"end":{"line":844,"column":11}}]},"42":{"line":847,"type":"if","locations":[{"start":{"line":847,"column":11},"end":{"line":847,"column":11}},{"start":{"line":847,"column":11},"end":{"line":847,"column":11}}]},"43":{"line":848,"type":"if","locations":[{"start":{"line":848,"column":6},"end":{"line":848,"column":6}},{"start":{"line":848,"column":6},"end":{"line":848,"column":6}}]},"44":{"line":856,"type":"if","locations":[{"start":{"line":856,"column":11},"end":{"line":856,"column":11}},{"start":{"line":856,"column":11},"end":{"line":856,"column":11}}]},"45":{"line":867,"type":"if","locations":[{"start":{"line":867,"column":4},"end":{"line":867,"column":4}},{"start":{"line":867,"column":4},"end":{"line":867,"column":4}}]},"46":{"line":871,"type":"if","locations":[{"start":{"line":871,"column":11},"end":{"line":871,"column":11}},{"start":{"line":871,"column":11},"end":{"line":871,"column":11}}]},"47":{"line":905,"type":"if","locations":[{"start":{"line":905,"column":4},"end":{"line":905,"column":4}},{"start":{"line":905,"column":4},"end":{"line":905,"column":4}}]},"48":{"line":973,"type":"if","locations":[{"start":{"line":973,"column":4},"end":{"line":973,"column":4}},{"start":{"line":973,"column":4},"end":{"line":973,"column":4}}]},"49":{"line":973,"type":"binary-expr","locations":[{"start":{"line":973,"column":9},"end":{"line":973,"column":23}},{"start":{"line":973,"column":29},"end":{"line":973,"column":60}}]},"50":{"line":979,"type":"if","locations":[{"start":{"line":979,"column":2},"end":{"line":979,"column":2}},{"start":{"line":979,"column":2},"end":{"line":979,"column":2}}]},"51":{"line":979,"type":"binary-expr","locations":[{"start":{"line":979,"column":6},"end":{"line":979,"column":39}},{"start":{"line":979,"column":43},"end":{"line":979,"column":77}},{"start":{"line":980,"column":6},"end":{"line":980,"column":40}}]},"52":{"line":984,"type":"if","locations":[{"start":{"line":984,"column":4},"end":{"line":984,"column":4}},{"start":{"line":984,"column":4},"end":{"line":984,"column":4}}]},"53":{"line":1004,"type":"if","locations":[{"start":{"line":1004,"column":2},"end":{"line":1004,"column":2}},{"start":{"line":1004,"column":2},"end":{"line":1004,"column":2}}]},"54":{"line":1030,"type":"cond-expr","locations":[{"start":{"line":1030,"column":41},"end":{"line":1030,"column":42}},{"start":{"line":1030,"column":45},"end":{"line":1030,"column":46}}]},"55":{"line":1060,"type":"if","locations":[{"start":{"line":1060,"column":2},"end":{"line":1060,"column":2}},{"start":{"line":1060,"column":2},"end":{"line":1060,"column":2}}]},"56":{"line":1063,"type":"if","locations":[{"start":{"line":1063,"column":4},"end":{"line":1063,"column":4}},{"start":{"line":1063,"column":4},"end":{"line":1063,"column":4}}]},"57":{"line":1092,"type":"if","locations":[{"start":{"line":1092,"column":4},"end":{"line":1092,"column":4}},{"start":{"line":1092,"column":4},"end":{"line":1092,"column":4}}]},"58":{"line":1099,"type":"if","locations":[{"start":{"line":1099,"column":2},"end":{"line":1099,"column":2}},{"start":{"line":1099,"column":2},"end":{"line":1099,"column":2}}]},"59":{"line":1099,"type":"binary-expr","locations":[{"start":{"line":1099,"column":7},"end":{"line":1099,"column":31}},{"start":{"line":1099,"column":37},"end":{"line":1099,"column":47}}]},"60":{"line":1110,"type":"if","locations":[{"start":{"line":1110,"column":9},"end":{"line":1110,"column":9}},{"start":{"line":1110,"column":9},"end":{"line":1110,"column":9}}]},"61":{"line":1110,"type":"binary-expr","locations":[{"start":{"line":1110,"column":13},"end":{"line":1110,"column":35}},{"start":{"line":1110,"column":39},"end":{"line":1110,"column":63}}]},"62":{"line":1112,"type":"cond-expr","locations":[{"start":{"line":1112,"column":45},"end":{"line":1112,"column":46}},{"start":{"line":1112,"column":49},"end":{"line":1112,"column":50}}]},"63":{"line":1116,"type":"cond-expr","locations":[{"start":{"line":1116,"column":42},"end":{"line":1116,"column":43}},{"start":{"line":1116,"column":46},"end":{"line":1116,"column":47}}]},"64":{"line":1126,"type":"if","locations":[{"start":{"line":1126,"column":2},"end":{"line":1126,"column":2}},{"start":{"line":1126,"column":2},"end":{"line":1126,"column":2}}]},"65":{"line":1150,"type":"if","locations":[{"start":{"line":1150,"column":2},"end":{"line":1150,"column":2}},{"start":{"line":1150,"column":2},"end":{"line":1150,"column":2}}]}},"code":["'use strict';","","","var utils = require('../utils/common');","","/* Public constants ==========================================================*/","/* ===========================================================================*/","","","//var Z_FILTERED          = 1;","//var Z_HUFFMAN_ONLY      = 2;","//var Z_RLE               = 3;","var Z_FIXED               = 4;","//var Z_DEFAULT_STRATEGY  = 0;","","/* Possible values of the data_type field (though see inflate()) */","var Z_BINARY              = 0;","var Z_TEXT                = 1;","//var Z_ASCII             = 1; // = Z_TEXT","var Z_UNKNOWN             = 2;","","/*============================================================================*/","","","function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }","","// From zutil.h","","var STORED_BLOCK = 0;","var STATIC_TREES = 1;","var DYN_TREES    = 2;","/* The three kinds of block type */","","var MIN_MATCH    = 3;","var MAX_MATCH    = 258;","/* The minimum and maximum match lengths */","","// From deflate.h","/* ==========================================================================="," * Internal compression state."," */","","var LENGTH_CODES  = 29;","/* number of length codes, not counting the special END_BLOCK code */","","var LITERALS      = 256;","/* number of literal bytes 0..255 */","","var L_CODES       = LITERALS + 1 + LENGTH_CODES;","/* number of Literal or Length codes, including the END_BLOCK code */","","var D_CODES       = 30;","/* number of distance codes */","","var BL_CODES      = 19;","/* number of codes used to transfer the bit lengths */","","var HEAP_SIZE     = 2*L_CODES + 1;","/* maximum heap size */","","var MAX_BITS      = 15;","/* All codes must not exceed MAX_BITS bits */","","var Buf_size      = 16;","/* size of bit buffer in bi_buf */","","","/* ==========================================================================="," * Constants"," */","","var MAX_BL_BITS = 7;","/* Bit length codes must not exceed MAX_BL_BITS bits */","","var END_BLOCK   = 256;","/* end of block literal code */","","var REP_3_6     = 16;","/* repeat previous bit length 3-6 times (2 bits of repeat count) */","","var REPZ_3_10   = 17;","/* repeat a zero length 3-10 times  (3 bits of repeat count) */","","var REPZ_11_138 = 18;","/* repeat a zero length 11-138 times  (7 bits of repeat count) */","","var extra_lbits =   /* extra bits for each length code */","  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];","","var extra_dbits =   /* extra bits for each distance code */","  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];","","var extra_blbits =  /* extra bits for each bit length code */","  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];","","var bl_order =","  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];","/* The lengths of the bit length codes are sent in order of decreasing"," * probability, to avoid transmitting the lengths for unused bit length codes."," */","","/* ==========================================================================="," * Local data. These are initialized only once."," */","","// We pre-fill arrays with 0 to avoid uninitialized gaps","","var DIST_CODE_LEN = 512; /* see definition of array dist_code below */","","// !!!! Use flat array insdead of structure, Freq = i*2, Len = i*2+1","var static_ltree  = new Array((L_CODES+2) * 2);","zero(static_ltree);","/* The static literal tree. Since the bit lengths are imposed, there is no"," * need for the L_CODES extra codes used during heap construction. However"," * The codes 286 and 287 are needed to build a canonical tree (see _tr_init"," * below)."," */","","var static_dtree  = new Array(D_CODES * 2);","zero(static_dtree);","/* The static distance tree. (Actually a trivial tree since all codes use"," * 5 bits.)"," */","","var _dist_code    = new Array(DIST_CODE_LEN);","zero(_dist_code);","/* Distance codes. The first 256 values correspond to the distances"," * 3 .. 258, the last 256 values correspond to the top 8 bits of"," * the 15 bit distances."," */","","var _length_code  = new Array(MAX_MATCH-MIN_MATCH+1);","zero(_length_code);","/* length code for each normalized match length (0 == MIN_MATCH) */","","var base_length   = new Array(LENGTH_CODES);","zero(base_length);","/* First normalized length for each code (0 = MIN_MATCH) */","","var base_dist     = new Array(D_CODES);","zero(base_dist);","/* First normalized distance for each code (0 = distance of 1) */","","","var StaticTreeDesc = function (static_tree, extra_bits, extra_base, elems, max_length) {","","  this.static_tree  = static_tree;  /* static tree or NULL */","  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */","  this.extra_base   = extra_base;   /* base index for extra_bits */","  this.elems        = elems;        /* max number of elements in the tree */","  this.max_length   = max_length;   /* max bit length for the codes */","","  // show if `static_tree` has data or dummy - needed for monomorphic objects","  this.has_stree    = static_tree && static_tree.length;","};","","","var static_l_desc;","var static_d_desc;","var static_bl_desc;","","","var TreeDesc = function(dyn_tree, stat_desc) {","  this.dyn_tree = dyn_tree;     /* the dynamic tree */","  this.max_code = 0;            /* largest code with non zero frequency */","  this.stat_desc = stat_desc;   /* the corresponding static tree */","};","","","","function d_code(dist) {","  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];","}","","","/* ==========================================================================="," * Output a short LSB first on the stream."," * IN assertion: there is enough room in pendingBuf."," */","function put_short (s, w) {","//    put_byte(s, (uch)((w) & 0xff));","//    put_byte(s, (uch)((ush)(w) >> 8));","  s.pending_buf[s.pending++] = (w) & 0xff;","  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;","}","","","/* ==========================================================================="," * Send a value on a given number of bits."," * IN assertion: length <= 16 and value fits in length bits."," */","function send_bits(s, value, length) {","  if (s.bi_valid > (Buf_size - length)) {","    s.bi_buf |= (value << s.bi_valid) & 0xffff;","    put_short(s, s.bi_buf);","    s.bi_buf = value >> (Buf_size - s.bi_valid);","    s.bi_valid += length - Buf_size;","  } else {","    s.bi_buf |= (value << s.bi_valid) & 0xffff;","    s.bi_valid += length;","  }","}","","","function send_code(s, c, tree) {","  send_bits(s, tree[c*2]/*.Code*/, tree[c*2 + 1]/*.Len*/);","}","","","/* ==========================================================================="," * Reverse the first len bits of a code, using straightforward code (a faster"," * method would use a table)"," * IN assertion: 1 <= len <= 15"," */","function bi_reverse(code, len) {","  var res = 0;","  do {","    res |= code & 1;","    code >>>= 1;","    res <<= 1;","  } while (--len > 0);","  return res >>> 1;","}","","","/* ==========================================================================="," * Flush the bit buffer, keeping at most 7 bits in it."," */","function bi_flush(s) {","  if (s.bi_valid === 16) {","    put_short(s, s.bi_buf);","    s.bi_buf = 0;","    s.bi_valid = 0;","","  } else if (s.bi_valid >= 8) {","    s.pending_buf[s.pending++] = s.bi_buf & 0xff;","    s.bi_buf >>= 8;","    s.bi_valid -= 8;","  }","}","","","/* ==========================================================================="," * Compute the optimal bit lengths for a tree and update the total bit length"," * for the current block."," * IN assertion: the fields freq and dad are set, heap[heap_max] and"," *    above are the tree nodes sorted by increasing frequency."," * OUT assertions: the field len is set to the optimal bit length, the"," *     array bl_count contains the frequencies for each bit length."," *     The length opt_len is updated; static_len is also updated if stree is"," *     not null."," */","function gen_bitlen(s, desc)","//    deflate_state *s;","//    tree_desc *desc;    /* the tree descriptor */","{","  var tree            = desc.dyn_tree;","  var max_code        = desc.max_code;","  var stree           = desc.stat_desc.static_tree;","  var has_stree       = desc.stat_desc.has_stree;","  var extra           = desc.stat_desc.extra_bits;","  var base            = desc.stat_desc.extra_base;","  var max_length      = desc.stat_desc.max_length;","  var h;              /* heap index */","  var n, m;           /* iterate over the tree elements */","  var bits;           /* bit length */","  var xbits;          /* extra bits */","  var f;              /* frequency */","  var overflow = 0;   /* number of elements with bit length too large */","","  for (bits = 0; bits <= MAX_BITS; bits++) {","    s.bl_count[bits] = 0;","  }","","  /* In a first pass, compute the optimal bit lengths (which may","   * overflow in the case of the bit length tree).","   */","  tree[s.heap[s.heap_max]*2 + 1]/*.Len*/ = 0; /* root of the heap */","","  for (h = s.heap_max+1; h < HEAP_SIZE; h++) {","    n = s.heap[h];","    bits = tree[tree[n*2 +1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;","    if (bits > max_length) {","      bits = max_length;","      overflow++;","    }","    tree[n*2 + 1]/*.Len*/ = bits;","    /* We overwrite tree[n].Dad which is no longer needed */","","    if (n > max_code) { continue; } /* not a leaf node */","","    s.bl_count[bits]++;","    xbits = 0;","    if (n >= base) {","      xbits = extra[n-base];","    }","    f = tree[n * 2]/*.Freq*/;","    s.opt_len += f * (bits + xbits);","    if (has_stree) {","      s.static_len += f * (stree[n*2 + 1]/*.Len*/ + xbits);","    }","  }","  if (overflow === 0) { return; }","","  // Trace((stderr,\"\\nbit length overflow\\n\"));","  /* This happens for example on obj2 and pic of the Calgary corpus */","","  /* Find the first bit length which could increase: */","  do {","    bits = max_length-1;","    while (s.bl_count[bits] === 0) { bits--; }","    s.bl_count[bits]--;      /* move one leaf down the tree */","    s.bl_count[bits+1] += 2; /* move one overflow item as its brother */","    s.bl_count[max_length]--;","    /* The brother of the overflow item also moves one step up,","     * but this does not affect bl_count[max_length]","     */","    overflow -= 2;","  } while (overflow > 0);","","  /* Now recompute all bit lengths, scanning in increasing frequency.","   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all","   * lengths instead of fixing only the wrong ones. This idea is taken","   * from 'ar' written by Haruhiko Okumura.)","   */","  for (bits = max_length; bits !== 0; bits--) {","    n = s.bl_count[bits];","    while (n !== 0) {","      m = s.heap[--h];","      if (m > max_code) { continue; }","      if (tree[m*2 + 1]/*.Len*/ !== bits) {","        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));","        s.opt_len += (bits - tree[m*2 + 1]/*.Len*/)*tree[m*2]/*.Freq*/;","        tree[m*2 + 1]/*.Len*/ = bits;","      }","      n--;","    }","  }","}","","","/* ==========================================================================="," * Generate the codes for a given tree and bit counts (which need not be"," * optimal)."," * IN assertion: the array bl_count contains the bit length statistics for"," * the given tree and the field len is set for all tree elements."," * OUT assertion: the field code is set for all tree elements of non"," *     zero code length."," */","function gen_codes(tree, max_code, bl_count)","//    ct_data *tree;             /* the tree to decorate */","//    int max_code;              /* largest code with non zero frequency */","//    ushf *bl_count;            /* number of codes at each bit length */","{","  var next_code = new Array(MAX_BITS+1); /* next code value for each bit length */","  var code = 0;              /* running code value */","  var bits;                  /* bit index */","  var n;                     /* code index */","","  /* The distribution counts are first used to generate the code values","   * without bit reversal.","   */","  for (bits = 1; bits <= MAX_BITS; bits++) {","    next_code[bits] = code = (code + bl_count[bits-1]) << 1;","  }","  /* Check that the bit counts in bl_count are consistent. The last code","   * must be all ones.","   */","  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,","  //        \"inconsistent bit counts\");","  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));","","  for (n = 0;  n <= max_code; n++) {","    var len = tree[n*2 + 1]/*.Len*/;","    if (len === 0) { continue; }","    /* Now reverse the bits */","    tree[n*2]/*.Code*/ = bi_reverse(next_code[len]++, len);","","    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",","    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));","  }","}","","","/* ==========================================================================="," * Initialize the various 'constant' tables."," */","function tr_static_init() {","  var n;        /* iterates over tree elements */","  var bits;     /* bit counter */","  var length;   /* length value */","  var code;     /* code value */","  var dist;     /* distance index */","  var bl_count = new Array(MAX_BITS+1);","  /* number of codes at each bit length for an optimal tree */","","  // do check in _tr_init()","  //if (static_init_done) return;","","  /* For some embedded targets, global variables are not initialized: */","/*#ifdef NO_INIT_GLOBAL_POINTERS","  static_l_desc.static_tree = static_ltree;","  static_l_desc.extra_bits = extra_lbits;","  static_d_desc.static_tree = static_dtree;","  static_d_desc.extra_bits = extra_dbits;","  static_bl_desc.extra_bits = extra_blbits;","#endif*/","","  /* Initialize the mapping length (0..255) -> length code (0..28) */","  length = 0;","  for (code = 0; code < LENGTH_CODES-1; code++) {","    base_length[code] = length;","    for (n = 0; n < (1<<extra_lbits[code]); n++) {","      _length_code[length++] = code;","    }","  }","  //Assert (length == 256, \"tr_static_init: length != 256\");","  /* Note that the length 255 (match length 258) can be represented","   * in two different ways: code 284 + 5 bits or code 285, so we","   * overwrite length_code[255] to use the best encoding:","   */","  _length_code[length-1] = code;","","  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */","  dist = 0;","  for (code = 0 ; code < 16; code++) {","    base_dist[code] = dist;","    for (n = 0; n < (1<<extra_dbits[code]); n++) {","      _dist_code[dist++] = code;","    }","  }","  //Assert (dist == 256, \"tr_static_init: dist != 256\");","  dist >>= 7; /* from now on, all distances are divided by 128 */","  for (; code < D_CODES; code++) {","    base_dist[code] = dist << 7;","    for (n = 0; n < (1<<(extra_dbits[code]-7)); n++) {","      _dist_code[256 + dist++] = code;","    }","  }","  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");","","  /* Construct the codes of the static literal tree */","  for (bits = 0; bits <= MAX_BITS; bits++) {","    bl_count[bits] = 0;","  }","","  n = 0;","  while (n <= 143) {","    static_ltree[n*2 + 1]/*.Len*/ = 8;","    n++;","    bl_count[8]++;","  }","  while (n <= 255) {","    static_ltree[n*2 + 1]/*.Len*/ = 9;","    n++;","    bl_count[9]++;","  }","  while (n <= 279) {","    static_ltree[n*2 + 1]/*.Len*/ = 7;","    n++;","    bl_count[7]++;","  }","  while (n <= 287) {","    static_ltree[n*2 + 1]/*.Len*/ = 8;","    n++;","    bl_count[8]++;","  }","  /* Codes 286 and 287 do not exist, but we must include them in the","   * tree construction to get a canonical Huffman tree (longest code","   * all ones)","   */","  gen_codes(static_ltree, L_CODES+1, bl_count);","","  /* The static distance tree is trivial: */","  for (n = 0; n < D_CODES; n++) {","    static_dtree[n*2 + 1]/*.Len*/ = 5;","    static_dtree[n*2]/*.Code*/ = bi_reverse(n, 5);","  }","","  // Now data ready and we can init static trees","  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS+1, L_CODES, MAX_BITS);","  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);","  static_bl_desc =new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);","","  //static_init_done = true;","}","","","/* ==========================================================================="," * Initialize a new block."," */","function init_block(s) {","  var n; /* iterates over tree elements */","","  /* Initialize the trees. */","  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n*2]/*.Freq*/ = 0; }","  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n*2]/*.Freq*/ = 0; }","  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n*2]/*.Freq*/ = 0; }","","  s.dyn_ltree[END_BLOCK*2]/*.Freq*/ = 1;","  s.opt_len = s.static_len = 0;","  s.last_lit = s.matches = 0;","}","","","/* ==========================================================================="," * Flush the bit buffer and align the output on a byte boundary"," */","function bi_windup(s)","{","  if (s.bi_valid > 8) {","    put_short(s, s.bi_buf);","  } else if (s.bi_valid > 0) {","    //put_byte(s, (Byte)s->bi_buf);","    s.pending_buf[s.pending++] = s.bi_buf;","  }","  s.bi_buf = 0;","  s.bi_valid = 0;","}","","/* ==========================================================================="," * Copy a stored block, storing first the length and its"," * one's complement if requested."," */","function copy_block(s, buf, len, header)","//DeflateState *s;","//charf    *buf;    /* the input data */","//unsigned len;     /* its length */","//int      header;  /* true if block header must be written */","{","  bi_windup(s);        /* align on byte boundary */","","  if (header) {","    put_short(s, len);","    put_short(s, ~len);","  }","//  while (len--) {","//    put_byte(s, *buf++);","//  }","  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);","  s.pending += len;","}","","/* ==========================================================================="," * Compares to subtrees, using the tree depth as tie breaker when"," * the subtrees have equal frequency. This minimizes the worst case length."," */","function smaller(tree, n, m, depth) {","  var _n2 = n*2;","  var _m2 = m*2;","  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||","         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));","}","","/* ==========================================================================="," * Restore the heap property by moving down the tree starting at node k,"," * exchanging a node with the smallest of its two sons if necessary, stopping"," * when the heap property is re-established (each father smaller than its"," * two sons)."," */","function pqdownheap(s, tree, k)","//    deflate_state *s;","//    ct_data *tree;  /* the tree to restore */","//    int k;               /* node to move down */","{","  var v = s.heap[k];","  var j = k << 1;  /* left son of k */","  while (j <= s.heap_len) {","    /* Set j to the smallest of the two sons: */","    if (j < s.heap_len &&","      smaller(tree, s.heap[j+1], s.heap[j], s.depth)) {","      j++;","    }","    /* Exit if v is smaller than both sons */","    if (smaller(tree, v, s.heap[j], s.depth)) { break; }","","    /* Exchange v with the smallest son */","    s.heap[k] = s.heap[j];","    k = j;","","    /* And continue down the tree, setting j to the left son of k */","    j <<= 1;","  }","  s.heap[k] = v;","}","","","// inlined manually","// var SMALLEST = 1;","","/* ==========================================================================="," * Send the block data compressed using the given Huffman trees"," */","function compress_block(s, ltree, dtree)","//    deflate_state *s;","//    const ct_data *ltree; /* literal tree */","//    const ct_data *dtree; /* distance tree */","{","  var dist;           /* distance of matched string */","  var lc;             /* match length or unmatched char (if dist == 0) */","  var lx = 0;         /* running index in l_buf */","  var code;           /* the code to send */","  var extra;          /* number of extra bits to send */","","  if (s.last_lit !== 0) {","    do {","      dist = (s.pending_buf[s.d_buf + lx*2] << 8) | (s.pending_buf[s.d_buf + lx*2 + 1]);","      lc = s.pending_buf[s.l_buf + lx];","      lx++;","","      if (dist === 0) {","        send_code(s, lc, ltree); /* send a literal byte */","        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));","      } else {","        /* Here, lc is the match length - MIN_MATCH */","        code = _length_code[lc];","        send_code(s, code+LITERALS+1, ltree); /* send the length code */","        extra = extra_lbits[code];","        if (extra !== 0) {","          lc -= base_length[code];","          send_bits(s, lc, extra);       /* send the extra length bits */","        }","        dist--; /* dist is now the match distance - 1 */","        code = d_code(dist);","        //Assert (code < D_CODES, \"bad d_code\");","","        send_code(s, code, dtree);       /* send the distance code */","        extra = extra_dbits[code];","        if (extra !== 0) {","          dist -= base_dist[code];","          send_bits(s, dist, extra);   /* send the extra distance bits */","        }","      } /* literal or match pair ? */","","      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */","      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,","      //       \"pendingBuf overflow\");","","    } while (lx < s.last_lit);","  }","","  send_code(s, END_BLOCK, ltree);","}","","","/* ==========================================================================="," * Construct one Huffman tree and assigns the code bit strings and lengths."," * Update the total bit length for the current block."," * IN assertion: the field freq is set for all tree elements."," * OUT assertions: the fields len and code are set to the optimal bit length"," *     and corresponding code. The length opt_len is updated; static_len is"," *     also updated if stree is not null. The field max_code is set."," */","function build_tree(s, desc)","//    deflate_state *s;","//    tree_desc *desc; /* the tree descriptor */","{","  var tree     = desc.dyn_tree;","  var stree    = desc.stat_desc.static_tree;","  var has_stree = desc.stat_desc.has_stree;","  var elems    = desc.stat_desc.elems;","  var n, m;          /* iterate over heap elements */","  var max_code = -1; /* largest code with non zero frequency */","  var node;          /* new node being created */","","  /* Construct the initial heap, with least frequent element in","   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].","   * heap[0] is not used.","   */","  s.heap_len = 0;","  s.heap_max = HEAP_SIZE;","","  for (n = 0; n < elems; n++) {","    if (tree[n * 2]/*.Freq*/ !== 0) {","      s.heap[++s.heap_len] = max_code = n;","      s.depth[n] = 0;","","    } else {","      tree[n*2 + 1]/*.Len*/ = 0;","    }","  }","","  /* The pkzip format requires that at least one distance code exists,","   * and that at least one bit should be sent even if there is only one","   * possible code. So to avoid special checks later on we force at least","   * two codes of non zero frequency.","   */","  while (s.heap_len < 2) {","    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);","    tree[node * 2]/*.Freq*/ = 1;","    s.depth[node] = 0;","    s.opt_len--;","","    if (has_stree) {","      s.static_len -= stree[node*2 + 1]/*.Len*/;","    }","    /* node is 0 or 1 so it does not have extra bits */","  }","  desc.max_code = max_code;","","  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,","   * establish sub-heaps of increasing lengths:","   */","  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }","","  /* Construct the Huffman tree by repeatedly combining the least two","   * frequent nodes.","   */","  node = elems;              /* next internal node of the tree */","  do {","    //pqremove(s, tree, n);  /* n = node of least frequency */","    /*** pqremove ***/","    n = s.heap[1/*SMALLEST*/];","    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];","    pqdownheap(s, tree, 1/*SMALLEST*/);","    /***/","","    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */","","    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */","    s.heap[--s.heap_max] = m;","","    /* Create a new node father of n and m */","    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;","    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;","    tree[n*2 + 1]/*.Dad*/ = tree[m*2 + 1]/*.Dad*/ = node;","","    /* and insert the new node in the heap */","    s.heap[1/*SMALLEST*/] = node++;","    pqdownheap(s, tree, 1/*SMALLEST*/);","","  } while (s.heap_len >= 2);","","  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];","","  /* At this point, the fields freq and dad are set. We can now","   * generate the bit lengths.","   */","  gen_bitlen(s, desc);","","  /* The field len is now set, we can generate the bit codes */","  gen_codes(tree, max_code, s.bl_count);","}","","","/* ==========================================================================="," * Scan a literal or distance tree to determine the frequencies of the codes"," * in the bit length tree."," */","function scan_tree(s, tree, max_code)","//    deflate_state *s;","//    ct_data *tree;   /* the tree to be scanned */","//    int max_code;    /* and its largest code of non zero frequency */","{","  var n;                     /* iterates over all tree elements */","  var prevlen = -1;          /* last emitted length */","  var curlen;                /* length of current code */","","  var nextlen = tree[0*2 + 1]/*.Len*/; /* length of next code */","","  var count = 0;             /* repeat count of the current code */","  var max_count = 7;         /* max repeat count */","  var min_count = 4;         /* min repeat count */","","  if (nextlen === 0) {","    max_count = 138;","    min_count = 3;","  }","  tree[(max_code+1)*2 + 1]/*.Len*/ = 0xffff; /* guard */","","  for (n = 0; n <= max_code; n++) {","    curlen = nextlen;","    nextlen = tree[(n+1)*2 + 1]/*.Len*/;","","    if (++count < max_count && curlen === nextlen) {","      continue;","","    } else if (count < min_count) {","      s.bl_tree[curlen * 2]/*.Freq*/ += count;","","    } else if (curlen !== 0) {","","      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }","      s.bl_tree[REP_3_6*2]/*.Freq*/++;","","    } else if (count <= 10) {","      s.bl_tree[REPZ_3_10*2]/*.Freq*/++;","","    } else {","      s.bl_tree[REPZ_11_138*2]/*.Freq*/++;","    }","","    count = 0;","    prevlen = curlen;","","    if (nextlen === 0) {","      max_count = 138;","      min_count = 3;","","    } else if (curlen === nextlen) {","      max_count = 6;","      min_count = 3;","","    } else {","      max_count = 7;","      min_count = 4;","    }","  }","}","","","/* ==========================================================================="," * Send a literal or distance tree in compressed form, using the codes in"," * bl_tree."," */","function send_tree(s, tree, max_code)","//    deflate_state *s;","//    ct_data *tree; /* the tree to be scanned */","//    int max_code;       /* and its largest code of non zero frequency */","{","  var n;                     /* iterates over all tree elements */","  var prevlen = -1;          /* last emitted length */","  var curlen;                /* length of current code */","","  var nextlen = tree[0*2 + 1]/*.Len*/; /* length of next code */","","  var count = 0;             /* repeat count of the current code */","  var max_count = 7;         /* max repeat count */","  var min_count = 4;         /* min repeat count */","","  /* tree[max_code+1].Len = -1; */  /* guard already set */","  if (nextlen === 0) {","    max_count = 138;","    min_count = 3;","  }","","  for (n = 0; n <= max_code; n++) {","    curlen = nextlen;","    nextlen = tree[(n+1)*2 + 1]/*.Len*/;","","    if (++count < max_count && curlen === nextlen) {","      continue;","","    } else if (count < min_count) {","      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);","","    } else if (curlen !== 0) {","      if (curlen !== prevlen) {","        send_code(s, curlen, s.bl_tree);","        count--;","      }","      //Assert(count >= 3 && count <= 6, \" 3_6?\");","      send_code(s, REP_3_6, s.bl_tree);","      send_bits(s, count-3, 2);","","    } else if (count <= 10) {","      send_code(s, REPZ_3_10, s.bl_tree);","      send_bits(s, count-3, 3);","","    } else {","      send_code(s, REPZ_11_138, s.bl_tree);","      send_bits(s, count-11, 7);","    }","","    count = 0;","    prevlen = curlen;","    if (nextlen === 0) {","      max_count = 138;","      min_count = 3;","","    } else if (curlen === nextlen) {","      max_count = 6;","      min_count = 3;","","    } else {","      max_count = 7;","      min_count = 4;","    }","  }","}","","","/* ==========================================================================="," * Construct the Huffman tree for the bit lengths and return the index in"," * bl_order of the last bit length code to send."," */","function build_bl_tree(s) {","  var max_blindex;  /* index of last bit length code of non zero freq */","","  /* Determine the bit length frequencies for literal and distance trees */","  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);","  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);","","  /* Build the bit length tree: */","  build_tree(s, s.bl_desc);","  /* opt_len now includes the length of the tree representations, except","   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.","   */","","  /* Determine the number of bit length codes to send. The pkzip format","   * requires that at least 4 bit length codes be sent. (appnote.txt says","   * 3 but the actual value used is 4.)","   */","  for (max_blindex = BL_CODES-1; max_blindex >= 3; max_blindex--) {","    if (s.bl_tree[bl_order[max_blindex]*2 + 1]/*.Len*/ !== 0) {","      break;","    }","  }","  /* Update opt_len to include the bit length tree and counts */","  s.opt_len += 3*(max_blindex+1) + 5+5+4;","  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",","  //        s->opt_len, s->static_len));","","  return max_blindex;","}","","","/* ==========================================================================="," * Send the header for a block using dynamic Huffman trees: the counts, the"," * lengths of the bit length codes, the literal tree and the distance tree."," * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4."," */","function send_all_trees(s, lcodes, dcodes, blcodes)","//    deflate_state *s;","//    int lcodes, dcodes, blcodes; /* number of codes for each tree */","{","  var rank;                    /* index in bl_order */","","  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");","  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,","  //        \"too many codes\");","  //Tracev((stderr, \"\\nbl counts: \"));","  send_bits(s, lcodes-257, 5); /* not +255 as stated in appnote.txt */","  send_bits(s, dcodes-1,   5);","  send_bits(s, blcodes-4,  4); /* not -3 as stated in appnote.txt */","  for (rank = 0; rank < blcodes; rank++) {","    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));","    send_bits(s, s.bl_tree[bl_order[rank]*2 + 1]/*.Len*/, 3);","  }","  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));","","  send_tree(s, s.dyn_ltree, lcodes-1); /* literal tree */","  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));","","  send_tree(s, s.dyn_dtree, dcodes-1); /* distance tree */","  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));","}","","","/* ==========================================================================="," * Check if the data type is TEXT or BINARY, using the following algorithm:"," * - TEXT if the two conditions below are satisfied:"," *    a) There are no non-portable control characters belonging to the"," *       \"black list\" (0..6, 14..25, 28..31)."," *    b) There is at least one printable character belonging to the"," *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255)."," * - BINARY otherwise."," * - The following partially-portable control characters form a"," *   \"gray list\" that is ignored in this detection algorithm:"," *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC})."," * IN assertion: the fields Freq of dyn_ltree are set."," */","function detect_data_type(s) {","  /* black_mask is the bit mask of black-listed bytes","   * set bits 0..6, 14..25, and 28..31","   * 0xf3ffc07f = binary 11110011111111111100000001111111","   */","  var black_mask = 0xf3ffc07f;","  var n;","","  /* Check for non-textual (\"black-listed\") bytes. */","  for (n = 0; n <= 31; n++, black_mask >>>= 1) {","    if ((black_mask & 1) && (s.dyn_ltree[n*2]/*.Freq*/ !== 0)) {","      return Z_BINARY;","    }","  }","","  /* Check for textual (\"white-listed\") bytes. */","  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||","      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {","    return Z_TEXT;","  }","  for (n = 32; n < LITERALS; n++) {","    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {","      return Z_TEXT;","    }","  }","","  /* There are no \"black-listed\" or \"white-listed\" bytes:","   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.","   */","  return Z_BINARY;","}","","","var static_init_done = false;","","/* ==========================================================================="," * Initialize the tree data structures for a new zlib stream."," */","function _tr_init(s)","{","","  if (!static_init_done) {","    tr_static_init();","    static_init_done = true;","  }","","  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);","  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);","  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);","","  s.bi_buf = 0;","  s.bi_valid = 0;","","  /* Initialize the first block of the first file: */","  init_block(s);","}","","","/* ==========================================================================="," * Send a stored block"," */","function _tr_stored_block(s, buf, stored_len, last)","//DeflateState *s;","//charf *buf;       /* input block */","//ulg stored_len;   /* length of input block */","//int last;         /* one if this is the last block for a file */","{","  send_bits(s, (STORED_BLOCK<<1)+(last ? 1 : 0), 3);    /* send block type */","  copy_block(s, buf, stored_len, true); /* with header */","}","","","/* ==========================================================================="," * Send one empty static block to give enough lookahead for inflate."," * This takes 10 bits, of which 7 may remain in the bit buffer."," */","function _tr_align(s) {","  send_bits(s, STATIC_TREES<<1, 3);","  send_code(s, END_BLOCK, static_ltree);","  bi_flush(s);","}","","","/* ==========================================================================="," * Determine the best encoding for the current block: dynamic trees, static"," * trees or store, and output the encoded block to the zip file."," */","function _tr_flush_block(s, buf, stored_len, last)","//DeflateState *s;","//charf *buf;       /* input block, or NULL if too old */","//ulg stored_len;   /* length of input block */","//int last;         /* one if this is the last block for a file */","{","  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */","  var max_blindex = 0;        /* index of last bit length code of non zero freq */","","  /* Build the Huffman trees unless a stored block is forced */","  if (s.level > 0) {","","    /* Check if the file is binary or text */","    if (s.strm.data_type === Z_UNKNOWN) {","      s.strm.data_type = detect_data_type(s);","    }","","    /* Construct the literal and distance trees */","    build_tree(s, s.l_desc);","    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,","    //        s->static_len));","","    build_tree(s, s.d_desc);","    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,","    //        s->static_len));","    /* At this point, opt_len and static_len are the total bit lengths of","     * the compressed block data, excluding the tree representations.","     */","","    /* Build the bit length tree for the above two trees, and get the index","     * in bl_order of the last bit length code to send.","     */","    max_blindex = build_bl_tree(s);","","    /* Determine the best encoding. Compute the block lengths in bytes. */","    opt_lenb = (s.opt_len+3+7) >>> 3;","    static_lenb = (s.static_len+3+7) >>> 3;","","    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",","    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,","    //        s->last_lit));","","    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }","","  } else {","    // Assert(buf != (char*)0, \"lost buf\");","    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */","  }","","  if ((stored_len+4 <= opt_lenb) && (buf !== -1)) {","    /* 4: two words for the lengths */","","    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.","     * Otherwise we can't have processed more than WSIZE input bytes since","     * the last block flush, because compression would have been","     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to","     * transform a block into a stored block.","     */","    _tr_stored_block(s, buf, stored_len, last);","","  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {","","    send_bits(s, (STATIC_TREES<<1) + (last ? 1 : 0), 3);","    compress_block(s, static_ltree, static_dtree);","","  } else {","    send_bits(s, (DYN_TREES<<1) + (last ? 1 : 0), 3);","    send_all_trees(s, s.l_desc.max_code+1, s.d_desc.max_code+1, max_blindex+1);","    compress_block(s, s.dyn_ltree, s.dyn_dtree);","  }","  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");","  /* The above check is made mod 2^32, for files larger than 512 MB","   * and uLong implemented on 32 bits.","   */","  init_block(s);","","  if (last) {","    bi_windup(s);","  }","  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,","  //       s->compressed_len-7*last));","}","","/* ==========================================================================="," * Save the match info and tally the frequency counts. Return true if"," * the current block must be flushed."," */","function _tr_tally(s, dist, lc)","//    deflate_state *s;","//    unsigned dist;  /* distance of matched string */","//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */","{","  //var out_length, in_length, dcode;","","  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;","  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;","","  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;","  s.last_lit++;","","  if (dist === 0) {","    /* lc is the unmatched char */","    s.dyn_ltree[lc*2]/*.Freq*/++;","  } else {","    s.matches++;","    /* Here, lc is the match length - MIN_MATCH */","    dist--;             /* dist = match distance - 1 */","    //Assert((ush)dist < (ush)MAX_DIST(s) &&","    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&","    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");","","    s.dyn_ltree[(_length_code[lc]+LITERALS+1) * 2]/*.Freq*/++;","    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;","  }","","// (!) This block is disabled in zlib defailts,","// don't enable it for binary compatibility","","//#ifdef TRUNCATE_BLOCK","//  /* Try to guess if it is profitable to stop the current block here */","//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {","//    /* Compute an upper bound for the compressed length */","//    out_length = s.last_lit*8;","//    in_length = s.strstart - s.block_start;","//","//    for (dcode = 0; dcode < D_CODES; dcode++) {","//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);","//    }","//    out_length >>>= 3;","//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",","//    //       s->last_lit, in_length, out_length,","//    //       100L - out_length*100L/in_length));","//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {","//      return true;","//    }","//  }","//#endif","","  return (s.last_lit === s.lit_bufsize-1);","  /* We avoid equality with lit_bufsize because of wraparound at 64K","   * on 16 bit machines and because stored blocks are restricted to","   * 64K-1 bytes.","   */","}","","exports._tr_init  = _tr_init;","exports._tr_stored_block = _tr_stored_block;","exports._tr_flush_block  = _tr_flush_block;","exports._tr_tally = _tr_tally;","exports._tr_align = _tr_align;",""],"l":{"4":1,"13":1,"17":1,"18":1,"20":1,"25":1463,"29":1,"30":1,"31":1,"34":1,"35":1,"43":1,"46":1,"49":1,"52":1,"55":1,"58":1,"61":1,"64":1,"72":1,"75":1,"78":1,"81":1,"84":1,"87":1,"90":1,"93":1,"96":1,"108":1,"111":1,"112":1,"119":1,"120":1,"125":1,"126":1,"132":1,"133":1,"136":1,"137":1,"140":1,"141":1,"145":1,"147":0,"148":0,"149":0,"150":0,"151":0,"154":0,"158":1,"159":1,"160":1,"163":1,"164":0,"165":0,"166":0,"171":1,"172":0,"180":1,"183":0,"184":0,"192":1,"193":0,"194":0,"195":0,"196":0,"197":0,"199":0,"200":0,"205":1,"206":0,"215":1,"216":0,"217":0,"218":0,"219":0,"220":0,"222":0,"229":1,"230":0,"231":0,"232":0,"233":0,"235":0,"236":0,"237":0,"238":0,"253":1,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"271":0,"272":0,"278":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"287":0,"290":0,"292":0,"293":0,"294":0,"295":0,"297":0,"298":0,"299":0,"300":0,"303":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"318":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"333":0,"334":0,"336":0,"350":1,"355":0,"356":0,"357":0,"358":0,"363":0,"364":0,"373":0,"374":0,"375":0,"377":0,"388":1,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"410":0,"411":0,"412":0,"413":0,"414":0,"422":0,"425":0,"426":0,"427":0,"428":0,"429":0,"433":0,"434":0,"435":0,"436":0,"437":0,"443":0,"444":0,"447":0,"448":0,"449":0,"450":0,"451":0,"453":0,"454":0,"455":0,"456":0,"458":0,"459":0,"460":0,"461":0,"463":0,"464":0,"465":0,"466":0,"472":0,"475":0,"476":0,"477":0,"481":0,"482":0,"483":0,"492":1,"493":0,"496":0,"497":0,"498":0,"500":0,"501":0,"502":0,"509":1,"511":0,"512":0,"513":0,"515":0,"517":0,"518":0,"525":1,"531":0,"533":0,"534":0,"535":0,"540":0,"541":0,"548":1,"549":0,"550":0,"551":0,"561":1,"566":0,"567":0,"568":0,"570":0,"572":0,"575":0,"578":0,"579":0,"582":0,"584":0,"594":1,"599":0,"600":0,"601":0,"602":0,"603":0,"605":0,"606":0,"607":0,"608":0,"609":0,"611":0,"612":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"623":0,"624":0,"627":0,"628":0,"629":0,"630":0,"631":0,"642":0,"654":1,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"670":0,"671":0,"673":0,"674":0,"675":0,"676":0,"679":0,"688":0,"689":0,"690":0,"691":0,"692":0,"694":0,"695":0,"699":0,"704":0,"709":0,"710":0,"713":0,"714":0,"715":0,"718":0,"720":0,"721":0,"724":0,"725":0,"726":0,"729":0,"730":0,"734":0,"739":0,"742":0,"750":1,"755":0,"756":0,"757":0,"759":0,"761":0,"762":0,"763":0,"765":0,"766":0,"767":0,"769":0,"771":0,"772":0,"773":0,"775":0,"776":0,"778":0,"779":0,"781":0,"783":0,"784":0,"786":0,"787":0,"790":0,"793":0,"794":0,"796":0,"797":0,"798":0,"800":0,"801":0,"802":0,"805":0,"806":0,"816":1,"821":0,"822":0,"823":0,"825":0,"827":0,"828":0,"829":0,"832":0,"833":0,"834":0,"837":0,"838":0,"839":0,"841":0,"842":0,"844":0,"845":0,"847":0,"848":0,"849":0,"850":0,"853":0,"854":0,"856":0,"857":0,"858":0,"861":0,"862":0,"865":0,"866":0,"867":0,"868":0,"869":0,"871":0,"872":0,"873":0,"876":0,"877":0,"887":1,"888":0,"891":0,"892":0,"895":0,"904":0,"905":0,"906":0,"910":0,"914":0,"923":1,"927":0,"933":0,"934":0,"935":0,"936":0,"938":0,"942":0,"945":0,"963":1,"968":0,"969":0,"972":0,"973":0,"974":0,"979":0,"981":0,"983":0,"984":0,"985":0,"992":0,"996":1,"1001":1,"1004":0,"1005":0,"1006":0,"1009":0,"1010":0,"1011":0,"1013":0,"1014":0,"1017":0,"1024":1,"1030":0,"1031":0,"1039":1,"1040":0,"1041":0,"1042":0,"1050":1,"1056":0,"1057":0,"1060":0,"1063":0,"1064":0,"1068":0,"1072":0,"1082":0,"1085":0,"1086":0,"1092":0,"1096":0,"1099":0,"1108":0,"1110":0,"1112":0,"1113":0,"1116":0,"1117":0,"1118":0,"1124":0,"1126":0,"1127":0,"1137":1,"1144":0,"1145":0,"1147":0,"1148":0,"1150":0,"1152":0,"1154":0,"1156":0,"1161":0,"1162":0,"1188":0,"1195":1,"1196":1,"1197":1,"1198":1,"1199":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/zlib/adler32.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/zlib/adler32.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"adler32","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":39}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":29,"column":1}},"2":{"start":{"line":8,"column":2},"end":{"line":10,"column":12}},"3":{"start":{"line":12,"column":2},"end":{"line":26,"column":3}},"4":{"start":{"line":16,"column":4},"end":{"line":16,"column":32}},"5":{"start":{"line":17,"column":4},"end":{"line":17,"column":13}},"6":{"start":{"line":19,"column":4},"end":{"line":22,"column":18}},"7":{"start":{"line":20,"column":6},"end":{"line":20,"column":32}},"8":{"start":{"line":21,"column":6},"end":{"line":21,"column":24}},"9":{"start":{"line":24,"column":4},"end":{"line":24,"column":16}},"10":{"start":{"line":25,"column":4},"end":{"line":25,"column":16}},"11":{"start":{"line":28,"column":2},"end":{"line":28,"column":30}},"12":{"start":{"line":32,"column":0},"end":{"line":32,"column":25}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":21},"end":{"line":16,"column":25}},{"start":{"line":16,"column":28},"end":{"line":16,"column":31}}]}},"code":["'use strict';","","// Note: adler32 takes 12% for level 0 and 2% for level 6.","// It doesn't worth to make additional optimizationa as in original.","// Small size is preferable.","","function adler32(adler, buf, len, pos) {","  var s1 = (adler & 0xffff) |0,","      s2 = ((adler >>> 16) & 0xffff) |0,","      n = 0;","","  while (len !== 0) {","    // Set limit ~ twice less than 5552, to keep","    // s2 in 31-bits, because we force signed ints.","    // in other case %= will fail.","    n = len > 2000 ? 2000 : len;","    len -= n;","","    do {","      s1 = (s1 + buf[pos++]) |0;","      s2 = (s2 + s1) |0;","    } while (--n);","","    s1 %= 65521;","    s2 %= 65521;","  }","","  return (s1 | (s2 << 16)) |0;","}","","","module.exports = adler32;",""],"l":{"7":1,"8":0,"12":0,"16":0,"17":0,"19":0,"20":0,"21":0,"24":0,"25":0,"28":0,"32":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/zlib/crc32.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/zlib/crc32.js","s":{"1":1,"2":1,"3":1,"4":256,"5":256,"6":2048,"7":256,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[1024,1024]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"makeTable","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":21}}},"2":{"name":"crc32","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":35}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":21,"column":1}},"2":{"start":{"line":10,"column":2},"end":{"line":10,"column":20}},"3":{"start":{"line":12,"column":2},"end":{"line":18,"column":3}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":10}},"5":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"6":{"start":{"line":15,"column":6},"end":{"line":15,"column":57}},"7":{"start":{"line":17,"column":4},"end":{"line":17,"column":17}},"8":{"start":{"line":20,"column":2},"end":{"line":20,"column":15}},"9":{"start":{"line":24,"column":0},"end":{"line":24,"column":27}},"10":{"start":{"line":27,"column":0},"end":{"line":38,"column":1}},"11":{"start":{"line":28,"column":2},"end":{"line":29,"column":22}},"12":{"start":{"line":31,"column":2},"end":{"line":31,"column":19}},"13":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"14":{"start":{"line":34,"column":4},"end":{"line":34,"column":49}},"15":{"start":{"line":37,"column":2},"end":{"line":37,"column":22}},"16":{"start":{"line":41,"column":0},"end":{"line":41,"column":23}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":20},"end":{"line":15,"column":42}},{"start":{"line":15,"column":47},"end":{"line":15,"column":54}}]}},"code":["'use strict';","","// Note: we can't get significant speed boost here.","// So write code to minimize size - no pregenerated tables","// and array tools dependencies.","","","// Use ordinary array, since untyped makes no boost here","function makeTable() {","  var c, table = [];","","  for (var n =0; n < 256; n++) {","    c = n;","    for (var k =0; k < 8; k++) {","      c = ((c&1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));","    }","    table[n] = c;","  }","","  return table;","}","","// Create table on load. Just 255 signed longs. Not a problem.","var crcTable = makeTable();","","","function crc32(crc, buf, len, pos) {","  var t = crcTable,","      end = pos + len;","","  crc = crc ^ (-1);","","  for (var i = pos; i < end; i++) {","    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];","  }","","  return (crc ^ (-1)); // >>> 0;","}","","","module.exports = crc32;",""],"l":{"9":1,"10":1,"12":1,"13":256,"14":256,"15":2048,"17":256,"20":1,"24":1,"27":1,"28":0,"31":0,"33":0,"34":0,"37":0,"41":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/zlib/messages.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/zlib/messages.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":13,"column":2}}},"branchMap":{},"code":["'use strict';","","module.exports = {","  '2':    'need dictionary',     /* Z_NEED_DICT       2  */","  '1':    'stream end',          /* Z_STREAM_END      1  */","  '0':    '',                    /* Z_OK              0  */","  '-1':   'file error',          /* Z_ERRNO         (-1) */","  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */","  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */","  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */","  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */","  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */","};",""],"l":{"3":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/utils/strings.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/utils/strings.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":1,"9":0,"10":1,"11":1,"12":256,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0},"b":{"1":[4,252],"2":[4,248],"3":[8,240],"4":[16,224],"5":[32,192],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":31,"loc":{"start":{"line":31,"column":21},"end":{"line":31,"column":36}}},"2":{"name":"buf2binstring","line":85,"loc":{"start":{"line":85,"column":0},"end":{"line":85,"column":33}}},"3":{"name":"(anonymous_3)","line":102,"loc":{"start":{"line":102,"column":24},"end":{"line":102,"column":38}}},"4":{"name":"(anonymous_4)","line":108,"loc":{"start":{"line":108,"column":24},"end":{"line":108,"column":38}}},"5":{"name":"(anonymous_5)","line":118,"loc":{"start":{"line":118,"column":21},"end":{"line":118,"column":41}}},"6":{"name":"(anonymous_6)","line":166,"loc":{"start":{"line":166,"column":21},"end":{"line":166,"column":40}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":32}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":24}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":28}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":81}},"5":{"start":{"line":16,"column":6},"end":{"line":16,"column":43}},"6":{"start":{"line":16,"column":58},"end":{"line":16,"column":79}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":99}},"8":{"start":{"line":17,"column":6},"end":{"line":17,"column":57}},"9":{"start":{"line":17,"column":72},"end":{"line":17,"column":97}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":35}},"11":{"start":{"line":24,"column":0},"end":{"line":26,"column":1}},"12":{"start":{"line":25,"column":2},"end":{"line":25,"column":95}},"13":{"start":{"line":27,"column":0},"end":{"line":27,"column":30}},"14":{"start":{"line":31,"column":0},"end":{"line":82,"column":2}},"15":{"start":{"line":32,"column":2},"end":{"line":32,"column":62}},"16":{"start":{"line":35,"column":2},"end":{"line":45,"column":3}},"17":{"start":{"line":36,"column":4},"end":{"line":36,"column":30}},"18":{"start":{"line":37,"column":4},"end":{"line":43,"column":5}},"19":{"start":{"line":38,"column":6},"end":{"line":38,"column":35}},"20":{"start":{"line":39,"column":6},"end":{"line":42,"column":7}},"21":{"start":{"line":40,"column":8},"end":{"line":40,"column":59}},"22":{"start":{"line":41,"column":8},"end":{"line":41,"column":16}},"23":{"start":{"line":44,"column":4},"end":{"line":44,"column":66}},"24":{"start":{"line":48,"column":2},"end":{"line":48,"column":32}},"25":{"start":{"line":51,"column":2},"end":{"line":79,"column":3}},"26":{"start":{"line":52,"column":4},"end":{"line":52,"column":30}},"27":{"start":{"line":53,"column":4},"end":{"line":59,"column":5}},"28":{"start":{"line":54,"column":6},"end":{"line":54,"column":35}},"29":{"start":{"line":55,"column":6},"end":{"line":58,"column":7}},"30":{"start":{"line":56,"column":8},"end":{"line":56,"column":59}},"31":{"start":{"line":57,"column":8},"end":{"line":57,"column":16}},"32":{"start":{"line":60,"column":4},"end":{"line":78,"column":5}},"33":{"start":{"line":62,"column":6},"end":{"line":62,"column":19}},"34":{"start":{"line":63,"column":11},"end":{"line":78,"column":5}},"35":{"start":{"line":65,"column":6},"end":{"line":65,"column":34}},"36":{"start":{"line":66,"column":6},"end":{"line":66,"column":35}},"37":{"start":{"line":67,"column":11},"end":{"line":78,"column":5}},"38":{"start":{"line":69,"column":6},"end":{"line":69,"column":35}},"39":{"start":{"line":70,"column":6},"end":{"line":70,"column":41}},"40":{"start":{"line":71,"column":6},"end":{"line":71,"column":35}},"41":{"start":{"line":74,"column":6},"end":{"line":74,"column":35}},"42":{"start":{"line":75,"column":6},"end":{"line":75,"column":42}},"43":{"start":{"line":76,"column":6},"end":{"line":76,"column":41}},"44":{"start":{"line":77,"column":6},"end":{"line":77,"column":35}},"45":{"start":{"line":81,"column":2},"end":{"line":81,"column":13}},"46":{"start":{"line":85,"column":0},"end":{"line":98,"column":1}},"47":{"start":{"line":87,"column":2},"end":{"line":91,"column":3}},"48":{"start":{"line":88,"column":4},"end":{"line":90,"column":5}},"49":{"start":{"line":89,"column":6},"end":{"line":89,"column":72}},"50":{"start":{"line":93,"column":2},"end":{"line":93,"column":18}},"51":{"start":{"line":94,"column":2},"end":{"line":96,"column":3}},"52":{"start":{"line":95,"column":4},"end":{"line":95,"column":42}},"53":{"start":{"line":97,"column":2},"end":{"line":97,"column":16}},"54":{"start":{"line":102,"column":0},"end":{"line":104,"column":2}},"55":{"start":{"line":103,"column":2},"end":{"line":103,"column":40}},"56":{"start":{"line":108,"column":0},"end":{"line":114,"column":2}},"57":{"start":{"line":109,"column":2},"end":{"line":109,"column":39}},"58":{"start":{"line":110,"column":2},"end":{"line":112,"column":3}},"59":{"start":{"line":111,"column":4},"end":{"line":111,"column":31}},"60":{"start":{"line":113,"column":2},"end":{"line":113,"column":13}},"61":{"start":{"line":118,"column":0},"end":{"line":157,"column":2}},"62":{"start":{"line":119,"column":2},"end":{"line":119,"column":23}},"63":{"start":{"line":120,"column":2},"end":{"line":120,"column":30}},"64":{"start":{"line":125,"column":2},"end":{"line":125,"column":34}},"65":{"start":{"line":127,"column":2},"end":{"line":154,"column":3}},"66":{"start":{"line":128,"column":4},"end":{"line":128,"column":17}},"67":{"start":{"line":130,"column":4},"end":{"line":130,"column":52}},"68":{"start":{"line":130,"column":20},"end":{"line":130,"column":40}},"69":{"start":{"line":130,"column":41},"end":{"line":130,"column":50}},"70":{"start":{"line":132,"column":4},"end":{"line":132,"column":24}},"71":{"start":{"line":134,"column":4},"end":{"line":134,"column":72}},"72":{"start":{"line":134,"column":21},"end":{"line":134,"column":46}},"73":{"start":{"line":134,"column":47},"end":{"line":134,"column":60}},"74":{"start":{"line":134,"column":61},"end":{"line":134,"column":70}},"75":{"start":{"line":137,"column":4},"end":{"line":137,"column":56}},"76":{"start":{"line":139,"column":4},"end":{"line":142,"column":5}},"77":{"start":{"line":140,"column":6},"end":{"line":140,"column":39}},"78":{"start":{"line":141,"column":6},"end":{"line":141,"column":14}},"79":{"start":{"line":145,"column":4},"end":{"line":145,"column":58}},"80":{"start":{"line":145,"column":21},"end":{"line":145,"column":46}},"81":{"start":{"line":145,"column":47},"end":{"line":145,"column":56}},"82":{"start":{"line":147,"column":4},"end":{"line":153,"column":5}},"83":{"start":{"line":148,"column":6},"end":{"line":148,"column":26}},"84":{"start":{"line":150,"column":6},"end":{"line":150,"column":19}},"85":{"start":{"line":151,"column":6},"end":{"line":151,"column":53}},"86":{"start":{"line":152,"column":6},"end":{"line":152,"column":45}},"87":{"start":{"line":156,"column":2},"end":{"line":156,"column":38}},"88":{"start":{"line":166,"column":0},"end":{"line":185,"column":2}},"89":{"start":{"line":167,"column":2},"end":{"line":167,"column":10}},"90":{"start":{"line":169,"column":2},"end":{"line":169,"column":26}},"91":{"start":{"line":170,"column":2},"end":{"line":170,"column":45}},"92":{"start":{"line":170,"column":26},"end":{"line":170,"column":43}},"93":{"start":{"line":173,"column":2},"end":{"line":173,"column":14}},"94":{"start":{"line":174,"column":2},"end":{"line":174,"column":59}},"95":{"start":{"line":174,"column":51},"end":{"line":174,"column":57}},"96":{"start":{"line":178,"column":2},"end":{"line":178,"column":30}},"97":{"start":{"line":178,"column":17},"end":{"line":178,"column":28}},"98":{"start":{"line":182,"column":2},"end":{"line":182,"column":32}},"99":{"start":{"line":182,"column":19},"end":{"line":182,"column":30}},"100":{"start":{"line":184,"column":2},"end":{"line":184,"column":54}}},"branchMap":{"1":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":28},"end":{"line":25,"column":29}},{"start":{"line":25,"column":32},"end":{"line":25,"column":93}}]},"2":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":43},"end":{"line":25,"column":44}},{"start":{"line":25,"column":47},"end":{"line":25,"column":93}}]},"3":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":58},"end":{"line":25,"column":59}},{"start":{"line":25,"column":62},"end":{"line":25,"column":93}}]},"4":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":73},"end":{"line":25,"column":74}},{"start":{"line":25,"column":77},"end":{"line":25,"column":93}}]},"5":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":88},"end":{"line":25,"column":89}},{"start":{"line":25,"column":92},"end":{"line":25,"column":93}}]},"6":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"7":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":31}},{"start":{"line":37,"column":36},"end":{"line":37,"column":53}}]},"8":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":6},"end":{"line":39,"column":6}},{"start":{"line":39,"column":6},"end":{"line":39,"column":6}}]},"9":{"line":44,"type":"cond-expr","locations":[{"start":{"line":44,"column":26},"end":{"line":44,"column":27}},{"start":{"line":44,"column":30},"end":{"line":44,"column":65}}]},"10":{"line":44,"type":"cond-expr","locations":[{"start":{"line":44,"column":42},"end":{"line":44,"column":43}},{"start":{"line":44,"column":46},"end":{"line":44,"column":65}}]},"11":{"line":44,"type":"cond-expr","locations":[{"start":{"line":44,"column":60},"end":{"line":44,"column":61}},{"start":{"line":44,"column":64},"end":{"line":44,"column":65}}]},"12":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"13":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":8},"end":{"line":53,"column":31}},{"start":{"line":53,"column":36},"end":{"line":53,"column":53}}]},"14":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":6},"end":{"line":55,"column":6}},{"start":{"line":55,"column":6},"end":{"line":55,"column":6}}]},"15":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]},"16":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":11},"end":{"line":63,"column":11}},{"start":{"line":63,"column":11},"end":{"line":63,"column":11}}]},"17":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":11},"end":{"line":67,"column":11}},{"start":{"line":67,"column":11},"end":{"line":67,"column":11}}]},"18":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":2},"end":{"line":87,"column":2}},{"start":{"line":87,"column":2},"end":{"line":87,"column":2}}]},"19":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":4},"end":{"line":88,"column":4}},{"start":{"line":88,"column":4},"end":{"line":88,"column":4}}]},"20":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":9},"end":{"line":88,"column":21}},{"start":{"line":88,"column":25},"end":{"line":88,"column":41}},{"start":{"line":88,"column":47},"end":{"line":88,"column":60}},{"start":{"line":88,"column":64},"end":{"line":88,"column":76}}]},"21":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":12},"end":{"line":120,"column":15}},{"start":{"line":120,"column":19},"end":{"line":120,"column":29}}]},"22":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":4},"end":{"line":130,"column":4}},{"start":{"line":130,"column":4},"end":{"line":130,"column":4}}]},"23":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":134,"column":4}},{"start":{"line":134,"column":4},"end":{"line":134,"column":4}}]},"24":{"line":137,"type":"cond-expr","locations":[{"start":{"line":137,"column":23},"end":{"line":137,"column":27}},{"start":{"line":137,"column":30},"end":{"line":137,"column":55}}]},"25":{"line":137,"type":"cond-expr","locations":[{"start":{"line":137,"column":44},"end":{"line":137,"column":48}},{"start":{"line":137,"column":51},"end":{"line":137,"column":55}}]},"26":{"line":139,"type":"binary-expr","locations":[{"start":{"line":139,"column":11},"end":{"line":139,"column":20}},{"start":{"line":139,"column":24},"end":{"line":139,"column":31}}]},"27":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":145,"column":4}},{"start":{"line":145,"column":4},"end":{"line":145,"column":4}}]},"28":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":4},"end":{"line":147,"column":4}},{"start":{"line":147,"column":4},"end":{"line":147,"column":4}}]},"29":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":8},"end":{"line":169,"column":11}},{"start":{"line":169,"column":15},"end":{"line":169,"column":25}}]},"30":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":2},"end":{"line":170,"column":2}},{"start":{"line":170,"column":2},"end":{"line":170,"column":2}}]},"31":{"line":174,"type":"binary-expr","locations":[{"start":{"line":174,"column":9},"end":{"line":174,"column":17}},{"start":{"line":174,"column":21},"end":{"line":174,"column":47}}]},"32":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":2},"end":{"line":178,"column":2}},{"start":{"line":178,"column":2},"end":{"line":178,"column":2}}]},"33":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":2},"end":{"line":182,"column":2}},{"start":{"line":182,"column":2},"end":{"line":182,"column":2}}]},"34":{"line":184,"type":"cond-expr","locations":[{"start":{"line":184,"column":44},"end":{"line":184,"column":47}},{"start":{"line":184,"column":50},"end":{"line":184,"column":53}}]}},"code":["// String encode/decode helpers","'use strict';","","","var utils = require('./common');","","","// Quick check if we can use fast array to bin string conversion","//","// - apply(Array) can fail on Android 2.2","// - apply(Uint8Array) can fail on iOS 5.1 Safary","//","var STR_APPLY_OK = true;","var STR_APPLY_UIA_OK = true;","","try { String.fromCharCode.apply(null, [0]); } catch(__) { STR_APPLY_OK = false; }","try { String.fromCharCode.apply(null, new Uint8Array(1)); } catch(__) { STR_APPLY_UIA_OK = false; }","","","// Table with utf8 lengths (calculated by first byte of sequence)","// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,","// because max possible codepoint is 0x10ffff","var _utf8len = new utils.Buf8(256);","for (var q=0; q<256; q++) {","  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);","}","_utf8len[254]=_utf8len[254]=1; // Invalid sequence start","","","// convert string to array (typed, when possible)","exports.string2buf = function (str) {","  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;","","  // count binary size","  for (m_pos = 0; m_pos < str_len; m_pos++) {","    c = str.charCodeAt(m_pos);","    if ((c & 0xfc00) === 0xd800 && (m_pos+1 < str_len)) {","      c2 = str.charCodeAt(m_pos+1);","      if ((c2 & 0xfc00) === 0xdc00) {","        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);","        m_pos++;","      }","    }","    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;","  }","","  // allocate buffer","  buf = new utils.Buf8(buf_len);","","  // convert","  for (i=0, m_pos = 0; i < buf_len; m_pos++) {","    c = str.charCodeAt(m_pos);","    if ((c & 0xfc00) === 0xd800 && (m_pos+1 < str_len)) {","      c2 = str.charCodeAt(m_pos+1);","      if ((c2 & 0xfc00) === 0xdc00) {","        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);","        m_pos++;","      }","    }","    if (c < 0x80) {","      /* one byte */","      buf[i++] = c;","    } else if (c < 0x800) {","      /* two bytes */","      buf[i++] = 0xC0 | (c >>> 6);","      buf[i++] = 0x80 | (c & 0x3f);","    } else if (c < 0x10000) {","      /* three bytes */","      buf[i++] = 0xE0 | (c >>> 12);","      buf[i++] = 0x80 | (c >>> 6 & 0x3f);","      buf[i++] = 0x80 | (c & 0x3f);","    } else {","      /* four bytes */","      buf[i++] = 0xf0 | (c >>> 18);","      buf[i++] = 0x80 | (c >>> 12 & 0x3f);","      buf[i++] = 0x80 | (c >>> 6 & 0x3f);","      buf[i++] = 0x80 | (c & 0x3f);","    }","  }","","  return buf;","};","","// Helper (used in 2 places)","function buf2binstring(buf, len) {","  // use fallback for big arrays to avoid stack overflow","  if (len < 65537) {","    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {","      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));","    }","  }","","  var result = '';","  for (var i=0; i < len; i++) {","    result += String.fromCharCode(buf[i]);","  }","  return result;","}","","","// Convert byte array to binary string","exports.buf2binstring = function(buf) {","  return buf2binstring(buf, buf.length);","};","","","// Convert binary string (typed, when possible)","exports.binstring2buf = function(str) {","  var buf = new utils.Buf8(str.length);","  for (var i=0, len=buf.length; i < len; i++) {","    buf[i] = str.charCodeAt(i);","  }","  return buf;","};","","","// convert array to string","exports.buf2string = function (buf, max) {","  var i, out, c, c_len;","  var len = max || buf.length;","","  // Reserve max possible length (2 words per char)","  // NB: by unknown reasons, Array is significantly faster for","  //     String.fromCharCode.apply than Uint16Array.","  var utf16buf = new Array(len*2);","","  for (out=0, i=0; i<len;) {","    c = buf[i++];","    // quick process ascii","    if (c < 0x80) { utf16buf[out++] = c; continue; }","","    c_len = _utf8len[c];","    // skip 5 & 6 byte codes","    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len-1; continue; }","","    // apply mask on first byte","    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;","    // join the rest","    while (c_len > 1 && i < len) {","      c = (c << 6) | (buf[i++] & 0x3f);","      c_len--;","    }","","    // terminated by end of string?","    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }","","    if (c < 0x10000) {","      utf16buf[out++] = c;","    } else {","      c -= 0x10000;","      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);","      utf16buf[out++] = 0xdc00 | (c & 0x3ff);","    }","  }","","  return buf2binstring(utf16buf, out);","};","","","// Calculate max possible position in utf8 buffer,","// that will not break sequence. If that's not possible","// - (very small limits) return max size as is.","//","// buf[] - utf8 bytes array","// max   - length limit (mandatory);","exports.utf8border = function(buf, max) {","  var pos;","","  max = max || buf.length;","  if (max > buf.length) { max = buf.length; }","","  // go back from last position, until start of sequence found","  pos = max-1;","  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }","","  // Fuckup - very small and broken sequence,","  // return max, because we should return something anyway.","  if (pos < 0) { return max; }","","  // If we came to start of buffer - that means vuffer is too small,","  // return max too.","  if (pos === 0) { return max; }","","  return (pos + _utf8len[buf[pos]] > max) ? pos : max;","};",""],"l":{"5":1,"13":1,"14":1,"16":1,"17":1,"23":1,"24":1,"25":256,"27":1,"31":1,"32":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"44":0,"48":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"60":0,"62":0,"63":0,"65":0,"66":0,"67":0,"69":0,"70":0,"71":0,"74":0,"75":0,"76":0,"77":0,"81":0,"85":1,"87":0,"88":0,"89":0,"93":0,"94":0,"95":0,"97":0,"102":1,"103":0,"108":1,"109":0,"110":0,"111":0,"113":0,"118":1,"119":0,"120":0,"125":0,"127":0,"128":0,"130":0,"132":0,"134":0,"137":0,"139":0,"140":0,"141":0,"145":0,"147":0,"148":0,"150":0,"151":0,"152":0,"156":0,"166":1,"167":0,"169":0,"170":0,"173":0,"174":0,"178":0,"182":0,"184":0}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/zlib/zstream.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/zlib/zstream.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"ZStream","line":4,"loc":{"start":{"line":4,"column":0},"end":{"line":4,"column":19}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":27,"column":1}},"2":{"start":{"line":6,"column":2},"end":{"line":6,"column":20}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":19}},"4":{"start":{"line":9,"column":2},"end":{"line":9,"column":20}},"5":{"start":{"line":11,"column":2},"end":{"line":11,"column":20}},"6":{"start":{"line":13,"column":2},"end":{"line":13,"column":21}},"7":{"start":{"line":14,"column":2},"end":{"line":14,"column":20}},"8":{"start":{"line":16,"column":2},"end":{"line":16,"column":21}},"9":{"start":{"line":18,"column":2},"end":{"line":18,"column":21}},"10":{"start":{"line":20,"column":2},"end":{"line":20,"column":26}},"11":{"start":{"line":22,"column":2},"end":{"line":22,"column":20}},"12":{"start":{"line":24,"column":2},"end":{"line":24,"column":34}},"13":{"start":{"line":26,"column":2},"end":{"line":26,"column":17}},"14":{"start":{"line":29,"column":0},"end":{"line":29,"column":25}}},"branchMap":{},"code":["'use strict';","","","function ZStream() {","  /* next input byte */","  this.input = null; // JS specific, because we have no pointers","  this.next_in = 0;","  /* number of bytes available at input */","  this.avail_in = 0;","  /* total number of input bytes read so far */","  this.total_in = 0;","  /* next output byte should be put there */","  this.output = null; // JS specific, because we have no pointers","  this.next_out = 0;","  /* remaining free space at output */","  this.avail_out = 0;","  /* total number of bytes output so far */","  this.total_out = 0;","  /* last error message, NULL if no error */","  this.msg = ''/*Z_NULL*/;","  /* not visible by applications */","  this.state = null;","  /* best guess about the data type: binary or text */","  this.data_type = 2/*Z_UNKNOWN*/;","  /* adler32 value of the uncompressed data */","  this.adler = 0;","}","","module.exports = ZStream;",""],"l":{"4":1,"6":0,"7":0,"9":0,"11":0,"13":0,"14":0,"16":0,"18":0,"20":0,"22":0,"24":0,"26":0,"29":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/inflate.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/inflate.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":1,"104":0,"105":0,"106":0,"107":1,"108":1,"109":1,"110":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0,0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":92,"loc":{"start":{"line":92,"column":14},"end":{"line":92,"column":32}}},"2":{"name":"(anonymous_2)","line":175,"loc":{"start":{"line":175,"column":25},"end":{"line":175,"column":46}}},"3":{"name":"(anonymous_3)","line":289,"loc":{"start":{"line":289,"column":27},"end":{"line":289,"column":43}}},"4":{"name":"(anonymous_4)","line":304,"loc":{"start":{"line":304,"column":26},"end":{"line":304,"column":43}}},"5":{"name":"inflate","line":360,"loc":{"start":{"line":360,"column":0},"end":{"line":360,"column":33}}},"6":{"name":"inflateRaw","line":380,"loc":{"start":{"line":380,"column":0},"end":{"line":380,"column":36}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":48}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":38}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":41}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":36}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":40}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":42}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":41}},"9":{"start":{"line":92,"column":0},"end":{"line":145,"column":2}},"10":{"start":{"line":94,"column":2},"end":{"line":98,"column":20}},"11":{"start":{"line":100,"column":2},"end":{"line":100,"column":25}},"12":{"start":{"line":104,"column":2},"end":{"line":107,"column":3}},"13":{"start":{"line":105,"column":4},"end":{"line":105,"column":37}},"14":{"start":{"line":106,"column":4},"end":{"line":106,"column":55}},"15":{"start":{"line":106,"column":32},"end":{"line":106,"column":53}},"16":{"start":{"line":110,"column":2},"end":{"line":113,"column":3}},"17":{"start":{"line":112,"column":4},"end":{"line":112,"column":25}},"18":{"start":{"line":117,"column":2},"end":{"line":123,"column":3}},"19":{"start":{"line":120,"column":4},"end":{"line":122,"column":5}},"20":{"start":{"line":121,"column":6},"end":{"line":121,"column":27}},"21":{"start":{"line":125,"column":2},"end":{"line":125,"column":18}},"22":{"start":{"line":126,"column":2},"end":{"line":126,"column":19}},"23":{"start":{"line":127,"column":2},"end":{"line":127,"column":22}},"24":{"start":{"line":128,"column":2},"end":{"line":128,"column":19}},"25":{"start":{"line":130,"column":2},"end":{"line":130,"column":30}},"26":{"start":{"line":131,"column":2},"end":{"line":131,"column":26}},"27":{"start":{"line":133,"column":2},"end":{"line":136,"column":4}},"28":{"start":{"line":138,"column":2},"end":{"line":140,"column":3}},"29":{"start":{"line":139,"column":4},"end":{"line":139,"column":33}},"30":{"start":{"line":142,"column":2},"end":{"line":142,"column":31}},"31":{"start":{"line":144,"column":2},"end":{"line":144,"column":56}},"32":{"start":{"line":175,"column":0},"end":{"line":277,"column":2}},"33":{"start":{"line":176,"column":2},"end":{"line":176,"column":23}},"34":{"start":{"line":177,"column":2},"end":{"line":177,"column":41}},"35":{"start":{"line":178,"column":2},"end":{"line":178,"column":20}},"36":{"start":{"line":179,"column":2},"end":{"line":179,"column":35}},"37":{"start":{"line":183,"column":2},"end":{"line":183,"column":28}},"38":{"start":{"line":185,"column":2},"end":{"line":185,"column":35}},"39":{"start":{"line":185,"column":20},"end":{"line":185,"column":33}},"40":{"start":{"line":186,"column":2},"end":{"line":186,"column":83}},"41":{"start":{"line":189,"column":2},"end":{"line":196,"column":3}},"42":{"start":{"line":191,"column":4},"end":{"line":191,"column":45}},"43":{"start":{"line":192,"column":9},"end":{"line":196,"column":3}},"44":{"start":{"line":193,"column":4},"end":{"line":193,"column":38}},"45":{"start":{"line":195,"column":4},"end":{"line":195,"column":22}},"46":{"start":{"line":198,"column":2},"end":{"line":198,"column":19}},"47":{"start":{"line":199,"column":2},"end":{"line":199,"column":36}},"48":{"start":{"line":201,"column":2},"end":{"line":255,"column":85}},"49":{"start":{"line":202,"column":4},"end":{"line":206,"column":5}},"50":{"start":{"line":203,"column":6},"end":{"line":203,"column":46}},"51":{"start":{"line":204,"column":6},"end":{"line":204,"column":24}},"52":{"start":{"line":205,"column":6},"end":{"line":205,"column":33}},"53":{"start":{"line":208,"column":4},"end":{"line":208,"column":54}},"54":{"start":{"line":210,"column":4},"end":{"line":213,"column":5}},"55":{"start":{"line":211,"column":6},"end":{"line":211,"column":22}},"56":{"start":{"line":212,"column":6},"end":{"line":212,"column":28}},"57":{"start":{"line":215,"column":4},"end":{"line":219,"column":5}},"58":{"start":{"line":216,"column":6},"end":{"line":216,"column":25}},"59":{"start":{"line":217,"column":6},"end":{"line":217,"column":24}},"60":{"start":{"line":218,"column":6},"end":{"line":218,"column":19}},"61":{"start":{"line":221,"column":4},"end":{"line":242,"column":5}},"62":{"start":{"line":222,"column":6},"end":{"line":241,"column":7}},"63":{"start":{"line":224,"column":8},"end":{"line":240,"column":9}},"64":{"start":{"line":226,"column":10},"end":{"line":226,"column":73}},"65":{"start":{"line":228,"column":10},"end":{"line":228,"column":47}},"66":{"start":{"line":229,"column":10},"end":{"line":229,"column":67}},"67":{"start":{"line":232,"column":10},"end":{"line":232,"column":31}},"68":{"start":{"line":233,"column":10},"end":{"line":233,"column":44}},"69":{"start":{"line":234,"column":10},"end":{"line":234,"column":89}},"70":{"start":{"line":234,"column":22},"end":{"line":234,"column":87}},"71":{"start":{"line":236,"column":10},"end":{"line":236,"column":31}},"72":{"start":{"line":239,"column":10},"end":{"line":239,"column":67}},"73":{"start":{"line":251,"column":4},"end":{"line":253,"column":5}},"74":{"start":{"line":252,"column":6},"end":{"line":252,"column":27}},"75":{"start":{"line":257,"column":2},"end":{"line":259,"column":3}},"76":{"start":{"line":258,"column":4},"end":{"line":258,"column":23}},"77":{"start":{"line":262,"column":2},"end":{"line":267,"column":3}},"78":{"start":{"line":263,"column":4},"end":{"line":263,"column":48}},"79":{"start":{"line":264,"column":4},"end":{"line":264,"column":23}},"80":{"start":{"line":265,"column":4},"end":{"line":265,"column":22}},"81":{"start":{"line":266,"column":4},"end":{"line":266,"column":29}},"82":{"start":{"line":270,"column":2},"end":{"line":274,"column":3}},"83":{"start":{"line":271,"column":4},"end":{"line":271,"column":23}},"84":{"start":{"line":272,"column":4},"end":{"line":272,"column":23}},"85":{"start":{"line":273,"column":4},"end":{"line":273,"column":16}},"86":{"start":{"line":276,"column":2},"end":{"line":276,"column":14}},"87":{"start":{"line":289,"column":0},"end":{"line":291,"column":2}},"88":{"start":{"line":290,"column":2},"end":{"line":290,"column":26}},"89":{"start":{"line":304,"column":0},"end":{"line":318,"column":2}},"90":{"start":{"line":306,"column":2},"end":{"line":314,"column":3}},"91":{"start":{"line":307,"column":4},"end":{"line":313,"column":5}},"92":{"start":{"line":310,"column":6},"end":{"line":310,"column":41}},"93":{"start":{"line":312,"column":6},"end":{"line":312,"column":53}},"94":{"start":{"line":315,"column":2},"end":{"line":315,"column":19}},"95":{"start":{"line":316,"column":2},"end":{"line":316,"column":20}},"96":{"start":{"line":317,"column":2},"end":{"line":317,"column":27}},"97":{"start":{"line":360,"column":0},"end":{"line":369,"column":1}},"98":{"start":{"line":361,"column":2},"end":{"line":361,"column":38}},"99":{"start":{"line":363,"column":2},"end":{"line":363,"column":29}},"100":{"start":{"line":366,"column":2},"end":{"line":366,"column":43}},"101":{"start":{"line":366,"column":22},"end":{"line":366,"column":41}},"102":{"start":{"line":368,"column":2},"end":{"line":368,"column":25}},"103":{"start":{"line":380,"column":0},"end":{"line":384,"column":1}},"104":{"start":{"line":381,"column":2},"end":{"line":381,"column":26}},"105":{"start":{"line":382,"column":2},"end":{"line":382,"column":21}},"106":{"start":{"line":383,"column":2},"end":{"line":383,"column":33}},"107":{"start":{"line":397,"column":0},"end":{"line":397,"column":26}},"108":{"start":{"line":398,"column":0},"end":{"line":398,"column":26}},"109":{"start":{"line":399,"column":0},"end":{"line":399,"column":32}},"110":{"start":{"line":400,"column":0},"end":{"line":400,"column":26}}},"branchMap":{"1":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":5},"end":{"line":98,"column":12}},{"start":{"line":98,"column":16},"end":{"line":98,"column":18}}]},"2":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":2},"end":{"line":104,"column":2}},{"start":{"line":104,"column":2},"end":{"line":104,"column":2}}]},"3":{"line":104,"type":"binary-expr","locations":[{"start":{"line":104,"column":6},"end":{"line":104,"column":13}},{"start":{"line":104,"column":18},"end":{"line":104,"column":37}},{"start":{"line":104,"column":43},"end":{"line":104,"column":62}}]},"4":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":106,"column":4}},{"start":{"line":106,"column":4},"end":{"line":106,"column":4}}]},"5":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":2},"end":{"line":110,"column":2}},{"start":{"line":110,"column":2},"end":{"line":110,"column":2}}]},"6":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":7},"end":{"line":110,"column":26}},{"start":{"line":110,"column":32},"end":{"line":110,"column":51}},{"start":{"line":111,"column":6},"end":{"line":111,"column":38}}]},"7":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":8},"end":{"line":111,"column":15}},{"start":{"line":111,"column":19},"end":{"line":111,"column":37}}]},"8":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":2},"end":{"line":117,"column":2}},{"start":{"line":117,"column":2},"end":{"line":117,"column":2}}]},"9":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":7},"end":{"line":117,"column":26}},{"start":{"line":117,"column":32},"end":{"line":117,"column":51}}]},"10":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":4}},{"start":{"line":120,"column":4},"end":{"line":120,"column":4}}]},"11":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":2},"end":{"line":138,"column":2}},{"start":{"line":138,"column":2},"end":{"line":138,"column":2}}]},"12":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":2},"end":{"line":185,"column":2}},{"start":{"line":185,"column":2},"end":{"line":185,"column":2}}]},"13":{"line":186,"type":"cond-expr","locations":[{"start":{"line":186,"column":30},"end":{"line":186,"column":34}},{"start":{"line":186,"column":38},"end":{"line":186,"column":81}}]},"14":{"line":186,"type":"cond-expr","locations":[{"start":{"line":186,"column":56},"end":{"line":186,"column":66}},{"start":{"line":186,"column":69},"end":{"line":186,"column":81}}]},"15":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":2},"end":{"line":189,"column":2}},{"start":{"line":189,"column":2},"end":{"line":189,"column":2}}]},"16":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":9},"end":{"line":192,"column":9}},{"start":{"line":192,"column":9},"end":{"line":192,"column":9}}]},"17":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":4},"end":{"line":202,"column":4}},{"start":{"line":202,"column":4},"end":{"line":202,"column":4}}]},"18":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":4},"end":{"line":210,"column":4}},{"start":{"line":210,"column":4},"end":{"line":210,"column":4}}]},"19":{"line":210,"type":"binary-expr","locations":[{"start":{"line":210,"column":8},"end":{"line":210,"column":32}},{"start":{"line":210,"column":36},"end":{"line":210,"column":58}}]},"20":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":4},"end":{"line":215,"column":4}},{"start":{"line":215,"column":4},"end":{"line":215,"column":4}}]},"21":{"line":215,"type":"binary-expr","locations":[{"start":{"line":215,"column":8},"end":{"line":215,"column":33}},{"start":{"line":215,"column":37},"end":{"line":215,"column":54}}]},"22":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":4},"end":{"line":221,"column":4}},{"start":{"line":221,"column":4},"end":{"line":221,"column":4}}]},"23":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":6},"end":{"line":222,"column":6}},{"start":{"line":222,"column":6},"end":{"line":222,"column":6}}]},"24":{"line":222,"type":"binary-expr","locations":[{"start":{"line":222,"column":10},"end":{"line":222,"column":30}},{"start":{"line":222,"column":34},"end":{"line":222,"column":59}},{"start":{"line":222,"column":64},"end":{"line":222,"column":83}},{"start":{"line":222,"column":88},"end":{"line":222,"column":108}},{"start":{"line":222,"column":112},"end":{"line":222,"column":136}}]},"25":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":8},"end":{"line":224,"column":8}},{"start":{"line":224,"column":8},"end":{"line":224,"column":8}}]},"26":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":10},"end":{"line":234,"column":10}},{"start":{"line":234,"column":10},"end":{"line":234,"column":10}}]},"27":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":4},"end":{"line":251,"column":4}},{"start":{"line":251,"column":4},"end":{"line":251,"column":4}}]},"28":{"line":251,"type":"binary-expr","locations":[{"start":{"line":251,"column":8},"end":{"line":251,"column":27}},{"start":{"line":251,"column":31},"end":{"line":251,"column":51}}]},"29":{"line":255,"type":"binary-expr","locations":[{"start":{"line":255,"column":12},"end":{"line":255,"column":29}},{"start":{"line":255,"column":33},"end":{"line":255,"column":53}},{"start":{"line":255,"column":58},"end":{"line":255,"column":83}}]},"30":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":2},"end":{"line":257,"column":2}},{"start":{"line":257,"column":2},"end":{"line":257,"column":2}}]},"31":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":2},"end":{"line":262,"column":2}},{"start":{"line":262,"column":2},"end":{"line":262,"column":2}}]},"32":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":2},"end":{"line":270,"column":2}},{"start":{"line":270,"column":2},"end":{"line":270,"column":2}}]},"33":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":2},"end":{"line":306,"column":2}},{"start":{"line":306,"column":2},"end":{"line":306,"column":2}}]},"34":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":4},"end":{"line":307,"column":4}},{"start":{"line":307,"column":4},"end":{"line":307,"column":4}}]},"35":{"line":366,"type":"if","locations":[{"start":{"line":366,"column":2},"end":{"line":366,"column":2}},{"start":{"line":366,"column":2},"end":{"line":366,"column":2}}]},"36":{"line":381,"type":"binary-expr","locations":[{"start":{"line":381,"column":12},"end":{"line":381,"column":19}},{"start":{"line":381,"column":23},"end":{"line":381,"column":25}}]}},"code":["'use strict';","","","var zlib_inflate = require('./zlib/inflate.js');","var utils = require('./utils/common');","var strings = require('./utils/strings');","var c = require('./zlib/constants');","var msg = require('./zlib/messages');","var zstream = require('./zlib/zstream');","var gzheader = require('./zlib/gzheader');","","var toString = Object.prototype.toString;","","/**"," * class Inflate"," *"," * Generic JS-style wrapper for zlib calls. If you don't need"," * streaming behaviour - use more simple functions: [[inflate]]"," * and [[inflateRaw]]."," **/","","/* internal"," * inflate.chunks -> Array"," *"," * Chunks of output data, if [[Inflate#onData]] not overriden."," **/","","/**"," * Inflate.result -> Uint8Array|Array|String"," *"," * Uncompressed result, generated by default [[Inflate#onData]]"," * and [[Inflate#onEnd]] handlers. Filled after you push last chunk"," * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you"," * push a chunk with explicit flush (call [[Inflate#push]] with"," * `Z_SYNC_FLUSH` param)."," **/","","/**"," * Inflate.err -> Number"," *"," * Error code after inflate finished. 0 (Z_OK) on success."," * Should be checked if broken data possible."," **/","","/**"," * Inflate.msg -> String"," *"," * Error message, if [[Inflate.err]] != 0"," **/","","","/**"," * new Inflate(options)"," * - options (Object): zlib inflate options."," *"," * Creates new inflator instance with specified params. Throws exception"," * on bad params. Supported options:"," *"," * - `windowBits`"," *"," * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)"," * for more information on these."," *"," * Additional options, for internal needs:"," *"," * - `chunkSize` - size of generated data chunks (16K by default)"," * - `raw` (Boolean) - do raw inflate"," * - `to` (String) - if equal to 'string', then result will be converted"," *   from utf8 to utf16 (javascript) string. When string output requested,"," *   chunk length can differ from `chunkSize`, depending on content."," *"," * By default, when no options set, autodetect deflate/gzip data format via"," * wrapper header."," *"," * ##### Example:"," *"," * ```javascript"," * var pako = require('pako')"," *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])"," *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);"," *"," * var inflate = new pako.Inflate({ level: 3});"," *"," * inflate.push(chunk1, false);"," * inflate.push(chunk2, true);  // true -> last chunk"," *"," * if (inflate.err) { throw new Error(inflate.err); }"," *"," * console.log(inflate.result);"," * ```"," **/","var Inflate = function(options) {","","  this.options = utils.assign({","    chunkSize: 16384,","    windowBits: 0,","    to: ''","  }, options || {});","","  var opt = this.options;","","  // Force window size for `raw` data, if not set directly,","  // because we have no header for autodetect.","  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {","    opt.windowBits = -opt.windowBits;","    if (opt.windowBits === 0) { opt.windowBits = -15; }","  }","","  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate","  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&","      !(options && options.windowBits)) {","    opt.windowBits += 32;","  }","","  // Gzip header has no info about windows size, we can do autodetect only","  // for deflate. So, if window size not set, force it to max when gzip possible","  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {","    // bit 3 (16) -> gzipped data","    // bit 4 (32) -> autodetect gzip/deflate","    if ((opt.windowBits & 15) === 0) {","      opt.windowBits |= 15;","    }","  }","","  this.err    = 0;      // error code, if happens (0 = Z_OK)","  this.msg    = '';     // error message","  this.ended  = false;  // used to avoid multiple onEnd() calls","  this.chunks = [];     // chunks of compressed data","","  this.strm   = new zstream();","  this.strm.avail_out = 0;","","  var status  = zlib_inflate.inflateInit2(","    this.strm,","    opt.windowBits","  );","","  if (status !== c.Z_OK) {","    throw new Error(msg[status]);","  }","","  this.header = new gzheader();","","  zlib_inflate.inflateGetHeader(this.strm, this.header);","};","","/**"," * Inflate#push(data[, mode]) -> Boolean"," * - data (Uint8Array|Array|ArrayBuffer|String): input data"," * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes."," *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` meansh Z_FINISH."," *"," * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with"," * new output chunks. Returns `true` on success. The last data block must have"," * mode Z_FINISH (or `true`). That will flush internal pending buffers and call"," * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you"," * can use mode Z_SYNC_FLUSH, keeping the decompression context."," *"," * On fail call [[Inflate#onEnd]] with error code and return false."," *"," * We strongly recommend to use `Uint8Array` on input for best speed (output"," * format is detected automatically). Also, don't skip last param and always"," * use the same type in your code (boolean or number). That will improve JS speed."," *"," * For regular `Array`-s make sure all elements are [0..255]."," *"," * ##### Example"," *"," * ```javascript"," * push(chunk, false); // push one of data chunks"," * ..."," * push(chunk, true);  // push last chunk"," * ```"," **/","Inflate.prototype.push = function(data, mode) {","  var strm = this.strm;","  var chunkSize = this.options.chunkSize;","  var status, _mode;","  var next_out_utf8, tail, utf8str;","","  // Flag to properly process Z_BUF_ERROR on testing inflate call","  // when we check that all output data was flushed.","  var allowBufError = false;","","  if (this.ended) { return false; }","  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);","","  // Convert data if needed","  if (typeof data === 'string') {","    // Only binary strings can be decompressed on practice","    strm.input = strings.binstring2buf(data);","  } else if (toString.call(data) === '[object ArrayBuffer]') {","    strm.input = new Uint8Array(data);","  } else {","    strm.input = data;","  }","","  strm.next_in = 0;","  strm.avail_in = strm.input.length;","","  do {","    if (strm.avail_out === 0) {","      strm.output = new utils.Buf8(chunkSize);","      strm.next_out = 0;","      strm.avail_out = chunkSize;","    }","","    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */","","    if (status === c.Z_BUF_ERROR && allowBufError === true) {","      status = c.Z_OK;","      allowBufError = false;","    }","","    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {","      this.onEnd(status);","      this.ended = true;","      return false;","    }","","    if (strm.next_out) {","      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {","","        if (this.options.to === 'string') {","","          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);","","          tail = strm.next_out - next_out_utf8;","          utf8str = strings.buf2string(strm.output, next_out_utf8);","","          // move tail","          strm.next_out = tail;","          strm.avail_out = chunkSize - tail;","          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }","","          this.onData(utf8str);","","        } else {","          this.onData(utils.shrinkBuf(strm.output, strm.next_out));","        }","      }","    }","","    // When no more input data, we should check that internal inflate buffers","    // are flushed. The only way to do it when avail_out = 0 - run one more","    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.","    // Here we set flag to process this error properly.","    //","    // NOTE. Deflate does not return error in this case and does not needs such","    // logic.","    if (strm.avail_in === 0 && strm.avail_out === 0) {","      allowBufError = true;","    }","","  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);","","  if (status === c.Z_STREAM_END) {","    _mode = c.Z_FINISH;","  }","","  // Finalize on the last chunk.","  if (_mode === c.Z_FINISH) {","    status = zlib_inflate.inflateEnd(this.strm);","    this.onEnd(status);","    this.ended = true;","    return status === c.Z_OK;","  }","","  // callback interim results if Z_SYNC_FLUSH.","  if (_mode === c.Z_SYNC_FLUSH) {","    this.onEnd(c.Z_OK);","    strm.avail_out = 0;","    return true;","  }","","  return true;","};","","","/**"," * Inflate#onData(chunk) -> Void"," * - chunk (Uint8Array|Array|String): ouput data. Type of array depends"," *   on js engine support. When string output requested, each chunk"," *   will be string."," *"," * By default, stores data blocks in `chunks[]` property and glue"," * those in `onEnd`. Override this handler, if you need another behaviour."," **/","Inflate.prototype.onData = function(chunk) {","  this.chunks.push(chunk);","};","","","/**"," * Inflate#onEnd(status) -> Void"," * - status (Number): inflate status. 0 (Z_OK) on success,"," *   other if not."," *"," * Called either after you tell inflate that the input stream is"," * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)"," * or if an error happened. By default - join collected chunks,"," * free memory and fill `results` / `err` properties."," **/","Inflate.prototype.onEnd = function(status) {","  // On success - join","  if (status === c.Z_OK) {","    if (this.options.to === 'string') {","      // Glue & convert here, until we teach pako to send","      // utf8 alligned strings to onData","      this.result = this.chunks.join('');","    } else {","      this.result = utils.flattenChunks(this.chunks);","    }","  }","  this.chunks = [];","  this.err = status;","  this.msg = this.strm.msg;","};","","","/**"," * inflate(data[, options]) -> Uint8Array|Array|String"," * - data (Uint8Array|Array|String): input data to decompress."," * - options (Object): zlib inflate options."," *"," * Decompress `data` with inflate/ungzip and `options`. Autodetect"," * format via wrapper header by default. That's why we don't provide"," * separate `ungzip` method."," *"," * Supported options are:"," *"," * - windowBits"," *"," * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)"," * for more information."," *"," * Sugar (options):"," *"," * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify"," *   negative windowBits implicitly."," * - `to` (String) - if equal to 'string', then result will be converted"," *   from utf8 to utf16 (javascript) string. When string output requested,"," *   chunk length can differ from `chunkSize`, depending on content."," *"," *"," * ##### Example:"," *"," * ```javascript"," * var pako = require('pako')"," *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])"," *   , output;"," *"," * try {"," *   output = pako.inflate(input);"," * } catch (err)"," *   console.log(err);"," * }"," * ```"," **/","function inflate(input, options) {","  var inflator = new Inflate(options);","","  inflator.push(input, true);","","  // That will never happens, if you don't cheat with options :)","  if (inflator.err) { throw inflator.msg; }","","  return inflator.result;","}","","","/**"," * inflateRaw(data[, options]) -> Uint8Array|Array|String"," * - data (Uint8Array|Array|String): input data to decompress."," * - options (Object): zlib inflate options."," *"," * The same as [[inflate]], but creates raw data, without wrapper"," * (header and adler32 crc)."," **/","function inflateRaw(input, options) {","  options = options || {};","  options.raw = true;","  return inflate(input, options);","}","","","/**"," * ungzip(data[, options]) -> Uint8Array|Array|String"," * - data (Uint8Array|Array|String): input data to decompress."," * - options (Object): zlib inflate options."," *"," * Just shortcut to [[inflate]], because it autodetects format"," * by header.content. Done for convenience."," **/","","","exports.Inflate = Inflate;","exports.inflate = inflate;","exports.inflateRaw = inflateRaw;","exports.ungzip  = inflate;",""],"l":{"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"12":1,"92":1,"94":0,"100":0,"104":0,"105":0,"106":0,"110":0,"112":0,"117":0,"120":0,"121":0,"125":0,"126":0,"127":0,"128":0,"130":0,"131":0,"133":0,"138":0,"139":0,"142":0,"144":0,"175":1,"176":0,"177":0,"178":0,"179":0,"183":0,"185":0,"186":0,"189":0,"191":0,"192":0,"193":0,"195":0,"198":0,"199":0,"201":0,"202":0,"203":0,"204":0,"205":0,"208":0,"210":0,"211":0,"212":0,"215":0,"216":0,"217":0,"218":0,"221":0,"222":0,"224":0,"226":0,"228":0,"229":0,"232":0,"233":0,"234":0,"236":0,"239":0,"251":0,"252":0,"257":0,"258":0,"262":0,"263":0,"264":0,"265":0,"266":0,"270":0,"271":0,"272":0,"273":0,"276":0,"289":1,"290":0,"304":1,"306":0,"307":0,"310":0,"312":0,"315":0,"316":0,"317":0,"360":1,"361":0,"363":0,"366":0,"368":0,"380":1,"381":0,"382":0,"383":0,"397":1,"398":1,"399":1,"400":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/zlib/inflate.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/zlib/inflate.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":1,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":1,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":1,"156":0,"157":1,"158":1,"159":1,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":1,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":1,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"877":0,"878":0,"879":0,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"893":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":0,"900":0,"901":0,"902":0,"903":0,"904":0,"905":0,"906":0,"907":1,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":0,"915":1,"916":0,"917":0,"918":0,"919":0,"920":0,"921":0,"922":0,"923":0,"924":0,"925":1,"926":1,"927":1,"928":1,"929":1,"930":1,"931":1,"932":1,"933":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0,0,0],"25":[0,0],"26":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0,0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0,0,0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0,0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"ZSWAP32","line":95,"loc":{"start":{"line":95,"column":0},"end":{"line":95,"column":20}}},"2":{"name":"InflateState","line":103,"loc":{"start":{"line":103,"column":0},"end":{"line":103,"column":24}}},"3":{"name":"inflateResetKeep","line":161,"loc":{"start":{"line":161,"column":0},"end":{"line":161,"column":32}}},"4":{"name":"inflateReset","line":188,"loc":{"start":{"line":188,"column":0},"end":{"line":188,"column":28}}},"5":{"name":"inflateReset2","line":200,"loc":{"start":{"line":200,"column":0},"end":{"line":200,"column":41}}},"6":{"name":"inflateInit2","line":234,"loc":{"start":{"line":234,"column":0},"end":{"line":234,"column":40}}},"7":{"name":"inflateInit","line":254,"loc":{"start":{"line":254,"column":0},"end":{"line":254,"column":27}}},"8":{"name":"fixedtables","line":273,"loc":{"start":{"line":273,"column":0},"end":{"line":273,"column":28}}},"9":{"name":"updatewindow","line":321,"loc":{"start":{"line":321,"column":0},"end":{"line":321,"column":44}}},"10":{"name":"inflate","line":363,"loc":{"start":{"line":363,"column":0},"end":{"line":363,"column":30}}},"11":{"name":"inflateEnd","line":1455,"loc":{"start":{"line":1455,"column":0},"end":{"line":1455,"column":26}}},"12":{"name":"inflateGetHeader","line":1469,"loc":{"start":{"line":1469,"column":0},"end":{"line":1469,"column":38}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":33}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":14}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":13}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":14}},"9":{"start":{"line":23,"column":0},"end":{"line":23,"column":24}},"10":{"start":{"line":24,"column":0},"end":{"line":24,"column":24}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":24}},"12":{"start":{"line":31,"column":0},"end":{"line":31,"column":24}},"13":{"start":{"line":32,"column":0},"end":{"line":32,"column":24}},"14":{"start":{"line":33,"column":0},"end":{"line":33,"column":24}},"15":{"start":{"line":35,"column":0},"end":{"line":35,"column":25}},"16":{"start":{"line":36,"column":0},"end":{"line":36,"column":25}},"17":{"start":{"line":37,"column":0},"end":{"line":37,"column":25}},"18":{"start":{"line":38,"column":0},"end":{"line":38,"column":25}},"19":{"start":{"line":42,"column":0},"end":{"line":42,"column":20}},"20":{"start":{"line":49,"column":0},"end":{"line":49,"column":16}},"21":{"start":{"line":50,"column":0},"end":{"line":50,"column":17}},"22":{"start":{"line":51,"column":0},"end":{"line":51,"column":16}},"23":{"start":{"line":52,"column":0},"end":{"line":52,"column":14}},"24":{"start":{"line":53,"column":0},"end":{"line":53,"column":17}},"25":{"start":{"line":54,"column":0},"end":{"line":54,"column":17}},"26":{"start":{"line":55,"column":0},"end":{"line":55,"column":16}},"27":{"start":{"line":56,"column":0},"end":{"line":56,"column":19}},"28":{"start":{"line":57,"column":0},"end":{"line":57,"column":16}},"29":{"start":{"line":58,"column":0},"end":{"line":58,"column":19}},"30":{"start":{"line":59,"column":0},"end":{"line":59,"column":17}},"31":{"start":{"line":60,"column":0},"end":{"line":60,"column":21}},"32":{"start":{"line":61,"column":0},"end":{"line":61,"column":23}},"33":{"start":{"line":62,"column":0},"end":{"line":62,"column":23}},"34":{"start":{"line":63,"column":0},"end":{"line":63,"column":22}},"35":{"start":{"line":64,"column":0},"end":{"line":64,"column":21}},"36":{"start":{"line":65,"column":0},"end":{"line":65,"column":22}},"37":{"start":{"line":66,"column":0},"end":{"line":66,"column":24}},"38":{"start":{"line":67,"column":0},"end":{"line":67,"column":25}},"39":{"start":{"line":68,"column":0},"end":{"line":68,"column":25}},"40":{"start":{"line":69,"column":0},"end":{"line":69,"column":24}},"41":{"start":{"line":70,"column":0},"end":{"line":70,"column":27}},"42":{"start":{"line":71,"column":0},"end":{"line":71,"column":25}},"43":{"start":{"line":72,"column":0},"end":{"line":72,"column":28}},"44":{"start":{"line":73,"column":0},"end":{"line":73,"column":26}},"45":{"start":{"line":74,"column":0},"end":{"line":74,"column":24}},"46":{"start":{"line":75,"column":0},"end":{"line":75,"column":18}},"47":{"start":{"line":76,"column":0},"end":{"line":76,"column":19}},"48":{"start":{"line":77,"column":0},"end":{"line":77,"column":17}},"49":{"start":{"line":78,"column":0},"end":{"line":78,"column":16}},"50":{"start":{"line":79,"column":0},"end":{"line":79,"column":16}},"51":{"start":{"line":80,"column":0},"end":{"line":80,"column":17}},"52":{"start":{"line":86,"column":0},"end":{"line":86,"column":22}},"53":{"start":{"line":87,"column":0},"end":{"line":87,"column":23}},"54":{"start":{"line":90,"column":0},"end":{"line":90,"column":19}},"55":{"start":{"line":92,"column":0},"end":{"line":92,"column":26}},"56":{"start":{"line":95,"column":0},"end":{"line":100,"column":1}},"57":{"start":{"line":96,"column":2},"end":{"line":99,"column":30}},"58":{"start":{"line":103,"column":0},"end":{"line":159,"column":1}},"59":{"start":{"line":104,"column":2},"end":{"line":104,"column":16}},"60":{"start":{"line":105,"column":2},"end":{"line":105,"column":20}},"61":{"start":{"line":106,"column":2},"end":{"line":106,"column":16}},"62":{"start":{"line":107,"column":2},"end":{"line":107,"column":24}},"63":{"start":{"line":108,"column":2},"end":{"line":108,"column":17}},"64":{"start":{"line":109,"column":2},"end":{"line":109,"column":16}},"65":{"start":{"line":110,"column":2},"end":{"line":110,"column":17}},"66":{"start":{"line":111,"column":2},"end":{"line":111,"column":17}},"67":{"start":{"line":113,"column":2},"end":{"line":113,"column":19}},"68":{"start":{"line":116,"column":2},"end":{"line":116,"column":17}},"69":{"start":{"line":117,"column":2},"end":{"line":117,"column":17}},"70":{"start":{"line":118,"column":2},"end":{"line":118,"column":17}},"71":{"start":{"line":119,"column":2},"end":{"line":119,"column":17}},"72":{"start":{"line":120,"column":2},"end":{"line":120,"column":21}},"73":{"start":{"line":123,"column":2},"end":{"line":123,"column":16}},"74":{"start":{"line":124,"column":2},"end":{"line":124,"column":16}},"75":{"start":{"line":127,"column":2},"end":{"line":127,"column":18}},"76":{"start":{"line":128,"column":2},"end":{"line":128,"column":18}},"77":{"start":{"line":131,"column":2},"end":{"line":131,"column":17}},"78":{"start":{"line":134,"column":2},"end":{"line":134,"column":22}},"79":{"start":{"line":135,"column":2},"end":{"line":135,"column":23}},"80":{"start":{"line":136,"column":2},"end":{"line":136,"column":19}},"81":{"start":{"line":137,"column":2},"end":{"line":137,"column":20}},"82":{"start":{"line":140,"column":2},"end":{"line":140,"column":17}},"83":{"start":{"line":141,"column":2},"end":{"line":141,"column":16}},"84":{"start":{"line":142,"column":2},"end":{"line":142,"column":17}},"85":{"start":{"line":143,"column":2},"end":{"line":143,"column":16}},"86":{"start":{"line":144,"column":2},"end":{"line":144,"column":19}},"87":{"start":{"line":146,"column":2},"end":{"line":146,"column":35}},"88":{"start":{"line":147,"column":2},"end":{"line":147,"column":35}},"89":{"start":{"line":154,"column":2},"end":{"line":154,"column":21}},"90":{"start":{"line":155,"column":2},"end":{"line":155,"column":22}},"91":{"start":{"line":156,"column":2},"end":{"line":156,"column":16}},"92":{"start":{"line":157,"column":2},"end":{"line":157,"column":16}},"93":{"start":{"line":158,"column":2},"end":{"line":158,"column":15}},"94":{"start":{"line":161,"column":0},"end":{"line":186,"column":1}},"95":{"start":{"line":162,"column":2},"end":{"line":162,"column":12}},"96":{"start":{"line":164,"column":2},"end":{"line":164,"column":54}},"97":{"start":{"line":164,"column":30},"end":{"line":164,"column":52}},"98":{"start":{"line":165,"column":2},"end":{"line":165,"column":21}},"99":{"start":{"line":166,"column":2},"end":{"line":166,"column":51}},"100":{"start":{"line":167,"column":2},"end":{"line":167,"column":16}},"101":{"start":{"line":168,"column":2},"end":{"line":170,"column":3}},"102":{"start":{"line":169,"column":4},"end":{"line":169,"column":32}},"103":{"start":{"line":171,"column":2},"end":{"line":171,"column":20}},"104":{"start":{"line":172,"column":2},"end":{"line":172,"column":17}},"105":{"start":{"line":173,"column":2},"end":{"line":173,"column":21}},"106":{"start":{"line":174,"column":2},"end":{"line":174,"column":21}},"107":{"start":{"line":175,"column":2},"end":{"line":175,"column":30}},"108":{"start":{"line":176,"column":2},"end":{"line":176,"column":17}},"109":{"start":{"line":177,"column":2},"end":{"line":177,"column":17}},"110":{"start":{"line":179,"column":2},"end":{"line":179,"column":62}},"111":{"start":{"line":180,"column":2},"end":{"line":180,"column":65}},"112":{"start":{"line":182,"column":2},"end":{"line":182,"column":17}},"113":{"start":{"line":183,"column":2},"end":{"line":183,"column":18}},"114":{"start":{"line":185,"column":2},"end":{"line":185,"column":14}},"115":{"start":{"line":188,"column":0},"end":{"line":198,"column":1}},"116":{"start":{"line":189,"column":2},"end":{"line":189,"column":12}},"117":{"start":{"line":191,"column":2},"end":{"line":191,"column":54}},"118":{"start":{"line":191,"column":30},"end":{"line":191,"column":52}},"119":{"start":{"line":192,"column":2},"end":{"line":192,"column":21}},"120":{"start":{"line":193,"column":2},"end":{"line":193,"column":18}},"121":{"start":{"line":194,"column":2},"end":{"line":194,"column":18}},"122":{"start":{"line":195,"column":2},"end":{"line":195,"column":18}},"123":{"start":{"line":196,"column":2},"end":{"line":196,"column":32}},"124":{"start":{"line":200,"column":0},"end":{"line":232,"column":1}},"125":{"start":{"line":201,"column":2},"end":{"line":201,"column":11}},"126":{"start":{"line":202,"column":2},"end":{"line":202,"column":12}},"127":{"start":{"line":205,"column":2},"end":{"line":205,"column":54}},"128":{"start":{"line":205,"column":30},"end":{"line":205,"column":52}},"129":{"start":{"line":206,"column":2},"end":{"line":206,"column":21}},"130":{"start":{"line":209,"column":2},"end":{"line":218,"column":3}},"131":{"start":{"line":210,"column":4},"end":{"line":210,"column":13}},"132":{"start":{"line":211,"column":4},"end":{"line":211,"column":29}},"133":{"start":{"line":214,"column":4},"end":{"line":214,"column":33}},"134":{"start":{"line":215,"column":4},"end":{"line":217,"column":5}},"135":{"start":{"line":216,"column":6},"end":{"line":216,"column":23}},"136":{"start":{"line":221,"column":2},"end":{"line":223,"column":3}},"137":{"start":{"line":222,"column":4},"end":{"line":222,"column":26}},"138":{"start":{"line":224,"column":2},"end":{"line":226,"column":3}},"139":{"start":{"line":225,"column":4},"end":{"line":225,"column":24}},"140":{"start":{"line":229,"column":2},"end":{"line":229,"column":20}},"141":{"start":{"line":230,"column":2},"end":{"line":230,"column":27}},"142":{"start":{"line":231,"column":2},"end":{"line":231,"column":28}},"143":{"start":{"line":234,"column":0},"end":{"line":252,"column":1}},"144":{"start":{"line":235,"column":2},"end":{"line":235,"column":10}},"145":{"start":{"line":236,"column":2},"end":{"line":236,"column":12}},"146":{"start":{"line":238,"column":2},"end":{"line":238,"column":39}},"147":{"start":{"line":238,"column":15},"end":{"line":238,"column":37}},"148":{"start":{"line":241,"column":2},"end":{"line":241,"column":29}},"149":{"start":{"line":245,"column":2},"end":{"line":245,"column":21}},"150":{"start":{"line":246,"column":2},"end":{"line":246,"column":32}},"151":{"start":{"line":247,"column":2},"end":{"line":247,"column":40}},"152":{"start":{"line":248,"column":2},"end":{"line":250,"column":3}},"153":{"start":{"line":249,"column":4},"end":{"line":249,"column":32}},"154":{"start":{"line":251,"column":2},"end":{"line":251,"column":13}},"155":{"start":{"line":254,"column":0},"end":{"line":256,"column":1}},"156":{"start":{"line":255,"column":2},"end":{"line":255,"column":39}},"157":{"start":{"line":269,"column":0},"end":{"line":269,"column":18}},"158":{"start":{"line":271,"column":0},"end":{"line":271,"column":20}},"159":{"start":{"line":273,"column":0},"end":{"line":304,"column":1}},"160":{"start":{"line":275,"column":2},"end":{"line":298,"column":3}},"161":{"start":{"line":276,"column":4},"end":{"line":276,"column":12}},"162":{"start":{"line":278,"column":4},"end":{"line":278,"column":34}},"163":{"start":{"line":279,"column":4},"end":{"line":279,"column":34}},"164":{"start":{"line":282,"column":4},"end":{"line":282,"column":12}},"165":{"start":{"line":283,"column":4},"end":{"line":283,"column":48}},"166":{"start":{"line":283,"column":24},"end":{"line":283,"column":46}},"167":{"start":{"line":284,"column":4},"end":{"line":284,"column":48}},"168":{"start":{"line":284,"column":24},"end":{"line":284,"column":46}},"169":{"start":{"line":285,"column":4},"end":{"line":285,"column":48}},"170":{"start":{"line":285,"column":24},"end":{"line":285,"column":46}},"171":{"start":{"line":286,"column":4},"end":{"line":286,"column":48}},"172":{"start":{"line":286,"column":24},"end":{"line":286,"column":46}},"173":{"start":{"line":288,"column":4},"end":{"line":288,"column":81}},"174":{"start":{"line":291,"column":4},"end":{"line":291,"column":12}},"175":{"start":{"line":292,"column":4},"end":{"line":292,"column":47}},"176":{"start":{"line":292,"column":23},"end":{"line":292,"column":45}},"177":{"start":{"line":294,"column":4},"end":{"line":294,"column":81}},"178":{"start":{"line":297,"column":4},"end":{"line":297,"column":19}},"179":{"start":{"line":300,"column":2},"end":{"line":300,"column":25}},"180":{"start":{"line":301,"column":2},"end":{"line":301,"column":20}},"181":{"start":{"line":302,"column":2},"end":{"line":302,"column":27}},"182":{"start":{"line":303,"column":2},"end":{"line":303,"column":21}},"183":{"start":{"line":321,"column":0},"end":{"line":361,"column":1}},"184":{"start":{"line":322,"column":2},"end":{"line":322,"column":11}},"185":{"start":{"line":323,"column":2},"end":{"line":323,"column":25}},"186":{"start":{"line":326,"column":2},"end":{"line":332,"column":3}},"187":{"start":{"line":327,"column":4},"end":{"line":327,"column":35}},"188":{"start":{"line":328,"column":4},"end":{"line":328,"column":20}},"189":{"start":{"line":329,"column":4},"end":{"line":329,"column":20}},"190":{"start":{"line":331,"column":4},"end":{"line":331,"column":47}},"191":{"start":{"line":335,"column":2},"end":{"line":359,"column":3}},"192":{"start":{"line":336,"column":4},"end":{"line":336,"column":72}},"193":{"start":{"line":337,"column":4},"end":{"line":337,"column":20}},"194":{"start":{"line":338,"column":4},"end":{"line":338,"column":30}},"195":{"start":{"line":341,"column":4},"end":{"line":341,"column":37}},"196":{"start":{"line":342,"column":4},"end":{"line":344,"column":5}},"197":{"start":{"line":343,"column":6},"end":{"line":343,"column":18}},"198":{"start":{"line":346,"column":4},"end":{"line":346,"column":68}},"199":{"start":{"line":347,"column":4},"end":{"line":347,"column":17}},"200":{"start":{"line":348,"column":4},"end":{"line":358,"column":5}},"201":{"start":{"line":350,"column":6},"end":{"line":350,"column":60}},"202":{"start":{"line":351,"column":6},"end":{"line":351,"column":25}},"203":{"start":{"line":352,"column":6},"end":{"line":352,"column":32}},"204":{"start":{"line":355,"column":6},"end":{"line":355,"column":26}},"205":{"start":{"line":356,"column":6},"end":{"line":356,"column":59}},"206":{"start":{"line":356,"column":41},"end":{"line":356,"column":57}},"207":{"start":{"line":357,"column":6},"end":{"line":357,"column":61}},"208":{"start":{"line":357,"column":39},"end":{"line":357,"column":59}},"209":{"start":{"line":360,"column":2},"end":{"line":360,"column":11}},"210":{"start":{"line":363,"column":0},"end":{"line":1453,"column":1}},"211":{"start":{"line":364,"column":2},"end":{"line":364,"column":12}},"212":{"start":{"line":365,"column":2},"end":{"line":365,"column":20}},"213":{"start":{"line":366,"column":2},"end":{"line":366,"column":11}},"214":{"start":{"line":367,"column":2},"end":{"line":367,"column":10}},"215":{"start":{"line":368,"column":2},"end":{"line":368,"column":17}},"216":{"start":{"line":369,"column":2},"end":{"line":369,"column":11}},"217":{"start":{"line":370,"column":2},"end":{"line":370,"column":11}},"218":{"start":{"line":371,"column":2},"end":{"line":371,"column":16}},"219":{"start":{"line":372,"column":2},"end":{"line":372,"column":11}},"220":{"start":{"line":373,"column":2},"end":{"line":373,"column":11}},"221":{"start":{"line":374,"column":2},"end":{"line":374,"column":18}},"222":{"start":{"line":375,"column":2},"end":{"line":375,"column":15}},"223":{"start":{"line":376,"column":2},"end":{"line":376,"column":35}},"224":{"start":{"line":378,"column":2},"end":{"line":378,"column":35}},"225":{"start":{"line":379,"column":2},"end":{"line":379,"column":10}},"226":{"start":{"line":380,"column":2},"end":{"line":380,"column":10}},"227":{"start":{"line":381,"column":2},"end":{"line":381,"column":31}},"228":{"start":{"line":382,"column":2},"end":{"line":382,"column":11}},"229":{"start":{"line":384,"column":2},"end":{"line":384,"column":8}},"230":{"start":{"line":386,"column":2},"end":{"line":387,"column":71}},"231":{"start":{"line":390,"column":2},"end":{"line":393,"column":3}},"232":{"start":{"line":392,"column":4},"end":{"line":392,"column":26}},"233":{"start":{"line":395,"column":2},"end":{"line":395,"column":21}},"234":{"start":{"line":396,"column":2},"end":{"line":396,"column":51}},"235":{"start":{"line":396,"column":29},"end":{"line":396,"column":49}},"236":{"start":{"line":400,"column":2},"end":{"line":400,"column":22}},"237":{"start":{"line":401,"column":2},"end":{"line":401,"column":23}},"238":{"start":{"line":402,"column":2},"end":{"line":402,"column":24}},"239":{"start":{"line":403,"column":2},"end":{"line":403,"column":22}},"240":{"start":{"line":404,"column":2},"end":{"line":404,"column":21}},"241":{"start":{"line":405,"column":2},"end":{"line":405,"column":23}},"242":{"start":{"line":406,"column":2},"end":{"line":406,"column":20}},"243":{"start":{"line":407,"column":2},"end":{"line":407,"column":20}},"244":{"start":{"line":410,"column":2},"end":{"line":410,"column":13}},"245":{"start":{"line":411,"column":2},"end":{"line":411,"column":14}},"246":{"start":{"line":412,"column":2},"end":{"line":412,"column":13}},"247":{"start":{"line":414,"column":2},"end":{"line":1410,"column":3}},"248":{"start":{"line":415,"column":2},"end":{"line":1410,"column":3}},"249":{"start":{"line":416,"column":4},"end":{"line":1409,"column":5}},"250":{"start":{"line":418,"column":6},"end":{"line":421,"column":7}},"251":{"start":{"line":419,"column":8},"end":{"line":419,"column":28}},"252":{"start":{"line":420,"column":8},"end":{"line":420,"column":14}},"253":{"start":{"line":423,"column":6},"end":{"line":428,"column":7}},"254":{"start":{"line":424,"column":8},"end":{"line":424,"column":44}},"255":{"start":{"line":424,"column":26},"end":{"line":424,"column":42}},"256":{"start":{"line":425,"column":8},"end":{"line":425,"column":15}},"257":{"start":{"line":426,"column":8},"end":{"line":426,"column":38}},"258":{"start":{"line":427,"column":8},"end":{"line":427,"column":18}},"259":{"start":{"line":430,"column":6},"end":{"line":444,"column":7}},"260":{"start":{"line":431,"column":8},"end":{"line":431,"column":48}},"261":{"start":{"line":433,"column":8},"end":{"line":433,"column":30}},"262":{"start":{"line":434,"column":8},"end":{"line":434,"column":38}},"263":{"start":{"line":435,"column":8},"end":{"line":435,"column":53}},"264":{"start":{"line":439,"column":8},"end":{"line":439,"column":17}},"265":{"start":{"line":440,"column":8},"end":{"line":440,"column":17}},"266":{"start":{"line":442,"column":8},"end":{"line":442,"column":27}},"267":{"start":{"line":443,"column":8},"end":{"line":443,"column":14}},"268":{"start":{"line":445,"column":6},"end":{"line":445,"column":22}},"269":{"start":{"line":446,"column":6},"end":{"line":448,"column":7}},"270":{"start":{"line":447,"column":8},"end":{"line":447,"column":32}},"271":{"start":{"line":449,"column":6},"end":{"line":454,"column":7}},"272":{"start":{"line":451,"column":8},"end":{"line":451,"column":44}},"273":{"start":{"line":452,"column":8},"end":{"line":452,"column":25}},"274":{"start":{"line":453,"column":8},"end":{"line":453,"column":14}},"275":{"start":{"line":455,"column":6},"end":{"line":459,"column":7}},"276":{"start":{"line":456,"column":8},"end":{"line":456,"column":48}},"277":{"start":{"line":457,"column":8},"end":{"line":457,"column":25}},"278":{"start":{"line":458,"column":8},"end":{"line":458,"column":14}},"279":{"start":{"line":461,"column":6},"end":{"line":461,"column":18}},"280":{"start":{"line":462,"column":6},"end":{"line":462,"column":16}},"281":{"start":{"line":464,"column":6},"end":{"line":464,"column":41}},"282":{"start":{"line":465,"column":6},"end":{"line":472,"column":7}},"283":{"start":{"line":466,"column":8},"end":{"line":466,"column":26}},"284":{"start":{"line":468,"column":11},"end":{"line":472,"column":7}},"285":{"start":{"line":469,"column":8},"end":{"line":469,"column":41}},"286":{"start":{"line":470,"column":8},"end":{"line":470,"column":25}},"287":{"start":{"line":471,"column":8},"end":{"line":471,"column":14}},"288":{"start":{"line":473,"column":6},"end":{"line":473,"column":28}},"289":{"start":{"line":475,"column":6},"end":{"line":475,"column":61}},"290":{"start":{"line":476,"column":6},"end":{"line":476,"column":48}},"291":{"start":{"line":478,"column":6},"end":{"line":478,"column":15}},"292":{"start":{"line":479,"column":6},"end":{"line":479,"column":15}},"293":{"start":{"line":481,"column":6},"end":{"line":481,"column":12}},"294":{"start":{"line":484,"column":6},"end":{"line":489,"column":7}},"295":{"start":{"line":485,"column":8},"end":{"line":485,"column":44}},"296":{"start":{"line":485,"column":26},"end":{"line":485,"column":42}},"297":{"start":{"line":486,"column":8},"end":{"line":486,"column":15}},"298":{"start":{"line":487,"column":8},"end":{"line":487,"column":38}},"299":{"start":{"line":488,"column":8},"end":{"line":488,"column":18}},"300":{"start":{"line":491,"column":6},"end":{"line":491,"column":25}},"301":{"start":{"line":492,"column":6},"end":{"line":496,"column":7}},"302":{"start":{"line":493,"column":8},"end":{"line":493,"column":48}},"303":{"start":{"line":494,"column":8},"end":{"line":494,"column":25}},"304":{"start":{"line":495,"column":8},"end":{"line":495,"column":14}},"305":{"start":{"line":497,"column":6},"end":{"line":501,"column":7}},"306":{"start":{"line":498,"column":8},"end":{"line":498,"column":46}},"307":{"start":{"line":499,"column":8},"end":{"line":499,"column":25}},"308":{"start":{"line":500,"column":8},"end":{"line":500,"column":14}},"309":{"start":{"line":502,"column":6},"end":{"line":504,"column":7}},"310":{"start":{"line":503,"column":8},"end":{"line":503,"column":44}},"311":{"start":{"line":505,"column":6},"end":{"line":511,"column":7}},"312":{"start":{"line":507,"column":8},"end":{"line":507,"column":30}},"313":{"start":{"line":508,"column":8},"end":{"line":508,"column":38}},"314":{"start":{"line":509,"column":8},"end":{"line":509,"column":53}},"315":{"start":{"line":513,"column":6},"end":{"line":513,"column":15}},"316":{"start":{"line":514,"column":6},"end":{"line":514,"column":15}},"317":{"start":{"line":516,"column":6},"end":{"line":516,"column":24}},"318":{"start":{"line":520,"column":6},"end":{"line":525,"column":7}},"319":{"start":{"line":521,"column":8},"end":{"line":521,"column":44}},"320":{"start":{"line":521,"column":26},"end":{"line":521,"column":42}},"321":{"start":{"line":522,"column":8},"end":{"line":522,"column":15}},"322":{"start":{"line":523,"column":8},"end":{"line":523,"column":38}},"323":{"start":{"line":524,"column":8},"end":{"line":524,"column":18}},"324":{"start":{"line":527,"column":6},"end":{"line":529,"column":7}},"325":{"start":{"line":528,"column":8},"end":{"line":528,"column":31}},"326":{"start":{"line":530,"column":6},"end":{"line":538,"column":7}},"327":{"start":{"line":532,"column":8},"end":{"line":532,"column":30}},"328":{"start":{"line":533,"column":8},"end":{"line":533,"column":38}},"329":{"start":{"line":534,"column":8},"end":{"line":534,"column":39}},"330":{"start":{"line":535,"column":8},"end":{"line":535,"column":39}},"331":{"start":{"line":536,"column":8},"end":{"line":536,"column":53}},"332":{"start":{"line":540,"column":6},"end":{"line":540,"column":15}},"333":{"start":{"line":541,"column":6},"end":{"line":541,"column":15}},"334":{"start":{"line":543,"column":6},"end":{"line":543,"column":22}},"335":{"start":{"line":547,"column":6},"end":{"line":552,"column":7}},"336":{"start":{"line":548,"column":8},"end":{"line":548,"column":44}},"337":{"start":{"line":548,"column":26},"end":{"line":548,"column":42}},"338":{"start":{"line":549,"column":8},"end":{"line":549,"column":15}},"339":{"start":{"line":550,"column":8},"end":{"line":550,"column":38}},"340":{"start":{"line":551,"column":8},"end":{"line":551,"column":18}},"341":{"start":{"line":554,"column":6},"end":{"line":557,"column":7}},"342":{"start":{"line":555,"column":8},"end":{"line":555,"column":42}},"343":{"start":{"line":556,"column":8},"end":{"line":556,"column":36}},"344":{"start":{"line":558,"column":6},"end":{"line":564,"column":7}},"345":{"start":{"line":560,"column":8},"end":{"line":560,"column":30}},"346":{"start":{"line":561,"column":8},"end":{"line":561,"column":38}},"347":{"start":{"line":562,"column":8},"end":{"line":562,"column":53}},"348":{"start":{"line":566,"column":6},"end":{"line":566,"column":15}},"349":{"start":{"line":567,"column":6},"end":{"line":567,"column":15}},"350":{"start":{"line":569,"column":6},"end":{"line":569,"column":25}},"351":{"start":{"line":572,"column":6},"end":{"line":599,"column":7}},"352":{"start":{"line":574,"column":8},"end":{"line":579,"column":9}},"353":{"start":{"line":575,"column":10},"end":{"line":575,"column":46}},"354":{"start":{"line":575,"column":28},"end":{"line":575,"column":44}},"355":{"start":{"line":576,"column":10},"end":{"line":576,"column":17}},"356":{"start":{"line":577,"column":10},"end":{"line":577,"column":40}},"357":{"start":{"line":578,"column":10},"end":{"line":578,"column":20}},"358":{"start":{"line":581,"column":8},"end":{"line":581,"column":28}},"359":{"start":{"line":582,"column":8},"end":{"line":584,"column":9}},"360":{"start":{"line":583,"column":10},"end":{"line":583,"column":38}},"361":{"start":{"line":585,"column":8},"end":{"line":591,"column":9}},"362":{"start":{"line":587,"column":10},"end":{"line":587,"column":32}},"363":{"start":{"line":588,"column":10},"end":{"line":588,"column":40}},"364":{"start":{"line":589,"column":10},"end":{"line":589,"column":55}},"365":{"start":{"line":593,"column":8},"end":{"line":593,"column":17}},"366":{"start":{"line":594,"column":8},"end":{"line":594,"column":17}},"367":{"start":{"line":597,"column":11},"end":{"line":599,"column":7}},"368":{"start":{"line":598,"column":8},"end":{"line":598,"column":42}},"369":{"start":{"line":600,"column":6},"end":{"line":600,"column":25}},"370":{"start":{"line":603,"column":6},"end":{"line":635,"column":7}},"371":{"start":{"line":604,"column":8},"end":{"line":604,"column":28}},"372":{"start":{"line":605,"column":8},"end":{"line":605,"column":41}},"373":{"start":{"line":605,"column":27},"end":{"line":605,"column":39}},"374":{"start":{"line":606,"column":8},"end":{"line":633,"column":9}},"375":{"start":{"line":607,"column":10},"end":{"line":626,"column":11}},"376":{"start":{"line":608,"column":12},"end":{"line":608,"column":54}},"377":{"start":{"line":609,"column":12},"end":{"line":612,"column":13}},"378":{"start":{"line":611,"column":14},"end":{"line":611,"column":65}},"379":{"start":{"line":613,"column":12},"end":{"line":622,"column":14}},"380":{"start":{"line":627,"column":10},"end":{"line":629,"column":11}},"381":{"start":{"line":628,"column":12},"end":{"line":628,"column":64}},"382":{"start":{"line":630,"column":10},"end":{"line":630,"column":23}},"383":{"start":{"line":631,"column":10},"end":{"line":631,"column":23}},"384":{"start":{"line":632,"column":10},"end":{"line":632,"column":31}},"385":{"start":{"line":634,"column":8},"end":{"line":634,"column":46}},"386":{"start":{"line":634,"column":28},"end":{"line":634,"column":44}},"387":{"start":{"line":636,"column":6},"end":{"line":636,"column":23}},"388":{"start":{"line":637,"column":6},"end":{"line":637,"column":24}},"389":{"start":{"line":640,"column":6},"end":{"line":662,"column":7}},"390":{"start":{"line":641,"column":8},"end":{"line":641,"column":44}},"391":{"start":{"line":641,"column":26},"end":{"line":641,"column":42}},"392":{"start":{"line":642,"column":8},"end":{"line":642,"column":17}},"393":{"start":{"line":643,"column":8},"end":{"line":651,"column":37}},"394":{"start":{"line":645,"column":10},"end":{"line":645,"column":37}},"395":{"start":{"line":647,"column":10},"end":{"line":650,"column":11}},"396":{"start":{"line":649,"column":12},"end":{"line":649,"column":56}},"397":{"start":{"line":653,"column":8},"end":{"line":655,"column":9}},"398":{"start":{"line":654,"column":10},"end":{"line":654,"column":62}},"399":{"start":{"line":656,"column":8},"end":{"line":656,"column":21}},"400":{"start":{"line":657,"column":8},"end":{"line":657,"column":21}},"401":{"start":{"line":658,"column":8},"end":{"line":658,"column":37}},"402":{"start":{"line":658,"column":19},"end":{"line":658,"column":35}},"403":{"start":{"line":660,"column":11},"end":{"line":662,"column":7}},"404":{"start":{"line":661,"column":8},"end":{"line":661,"column":31}},"405":{"start":{"line":663,"column":6},"end":{"line":663,"column":23}},"406":{"start":{"line":664,"column":6},"end":{"line":664,"column":27}},"407":{"start":{"line":667,"column":6},"end":{"line":687,"column":7}},"408":{"start":{"line":668,"column":8},"end":{"line":668,"column":44}},"409":{"start":{"line":668,"column":26},"end":{"line":668,"column":42}},"410":{"start":{"line":669,"column":8},"end":{"line":669,"column":17}},"411":{"start":{"line":670,"column":8},"end":{"line":677,"column":37}},"412":{"start":{"line":671,"column":10},"end":{"line":671,"column":37}},"413":{"start":{"line":673,"column":10},"end":{"line":676,"column":11}},"414":{"start":{"line":675,"column":12},"end":{"line":675,"column":59}},"415":{"start":{"line":678,"column":8},"end":{"line":680,"column":9}},"416":{"start":{"line":679,"column":10},"end":{"line":679,"column":62}},"417":{"start":{"line":681,"column":8},"end":{"line":681,"column":21}},"418":{"start":{"line":682,"column":8},"end":{"line":682,"column":21}},"419":{"start":{"line":683,"column":8},"end":{"line":683,"column":37}},"420":{"start":{"line":683,"column":19},"end":{"line":683,"column":35}},"421":{"start":{"line":685,"column":11},"end":{"line":687,"column":7}},"422":{"start":{"line":686,"column":8},"end":{"line":686,"column":34}},"423":{"start":{"line":688,"column":6},"end":{"line":688,"column":24}},"424":{"start":{"line":691,"column":6},"end":{"line":709,"column":7}},"425":{"start":{"line":693,"column":8},"end":{"line":698,"column":9}},"426":{"start":{"line":694,"column":10},"end":{"line":694,"column":46}},"427":{"start":{"line":694,"column":28},"end":{"line":694,"column":44}},"428":{"start":{"line":695,"column":10},"end":{"line":695,"column":17}},"429":{"start":{"line":696,"column":10},"end":{"line":696,"column":40}},"430":{"start":{"line":697,"column":10},"end":{"line":697,"column":20}},"431":{"start":{"line":700,"column":8},"end":{"line":704,"column":9}},"432":{"start":{"line":701,"column":10},"end":{"line":701,"column":43}},"433":{"start":{"line":702,"column":10},"end":{"line":702,"column":27}},"434":{"start":{"line":703,"column":10},"end":{"line":703,"column":16}},"435":{"start":{"line":706,"column":8},"end":{"line":706,"column":17}},"436":{"start":{"line":707,"column":8},"end":{"line":707,"column":17}},"437":{"start":{"line":710,"column":6},"end":{"line":713,"column":7}},"438":{"start":{"line":711,"column":8},"end":{"line":711,"column":51}},"439":{"start":{"line":712,"column":8},"end":{"line":712,"column":31}},"440":{"start":{"line":714,"column":6},"end":{"line":714,"column":60}},"441":{"start":{"line":715,"column":6},"end":{"line":715,"column":24}},"442":{"start":{"line":716,"column":6},"end":{"line":716,"column":12}},"443":{"start":{"line":719,"column":6},"end":{"line":724,"column":7}},"444":{"start":{"line":720,"column":8},"end":{"line":720,"column":44}},"445":{"start":{"line":720,"column":26},"end":{"line":720,"column":42}},"446":{"start":{"line":721,"column":8},"end":{"line":721,"column":15}},"447":{"start":{"line":722,"column":8},"end":{"line":722,"column":38}},"448":{"start":{"line":723,"column":8},"end":{"line":723,"column":18}},"449":{"start":{"line":726,"column":6},"end":{"line":726,"column":47}},"450":{"start":{"line":728,"column":6},"end":{"line":728,"column":15}},"451":{"start":{"line":729,"column":6},"end":{"line":729,"column":15}},"452":{"start":{"line":731,"column":6},"end":{"line":731,"column":24}},"453":{"start":{"line":734,"column":6},"end":{"line":744,"column":7}},"454":{"start":{"line":736,"column":8},"end":{"line":736,"column":28}},"455":{"start":{"line":737,"column":8},"end":{"line":737,"column":30}},"456":{"start":{"line":738,"column":8},"end":{"line":738,"column":28}},"457":{"start":{"line":739,"column":8},"end":{"line":739,"column":29}},"458":{"start":{"line":740,"column":8},"end":{"line":740,"column":26}},"459":{"start":{"line":741,"column":8},"end":{"line":741,"column":26}},"460":{"start":{"line":743,"column":8},"end":{"line":743,"column":27}},"461":{"start":{"line":745,"column":6},"end":{"line":745,"column":61}},"462":{"start":{"line":746,"column":6},"end":{"line":746,"column":24}},"463":{"start":{"line":749,"column":6},"end":{"line":749,"column":70}},"464":{"start":{"line":749,"column":52},"end":{"line":749,"column":68}},"465":{"start":{"line":752,"column":6},"end":{"line":759,"column":7}},"466":{"start":{"line":754,"column":8},"end":{"line":754,"column":27}},"467":{"start":{"line":755,"column":8},"end":{"line":755,"column":25}},"468":{"start":{"line":757,"column":8},"end":{"line":757,"column":27}},"469":{"start":{"line":758,"column":8},"end":{"line":758,"column":14}},"470":{"start":{"line":761,"column":6},"end":{"line":766,"column":7}},"471":{"start":{"line":762,"column":8},"end":{"line":762,"column":44}},"472":{"start":{"line":762,"column":26},"end":{"line":762,"column":42}},"473":{"start":{"line":763,"column":8},"end":{"line":763,"column":15}},"474":{"start":{"line":764,"column":8},"end":{"line":764,"column":38}},"475":{"start":{"line":765,"column":8},"end":{"line":765,"column":18}},"476":{"start":{"line":768,"column":6},"end":{"line":768,"column":44}},"477":{"start":{"line":770,"column":6},"end":{"line":770,"column":18}},"478":{"start":{"line":771,"column":6},"end":{"line":771,"column":16}},"479":{"start":{"line":774,"column":6},"end":{"line":801,"column":7}},"480":{"start":{"line":778,"column":8},"end":{"line":778,"column":28}},"481":{"start":{"line":779,"column":8},"end":{"line":779,"column":14}},"482":{"start":{"line":781,"column":8},"end":{"line":781,"column":27}},"483":{"start":{"line":784,"column":8},"end":{"line":784,"column":26}},"484":{"start":{"line":785,"column":8},"end":{"line":791,"column":9}},"485":{"start":{"line":787,"column":10},"end":{"line":787,"column":22}},"486":{"start":{"line":788,"column":10},"end":{"line":788,"column":20}},"487":{"start":{"line":790,"column":10},"end":{"line":790,"column":26}},"488":{"start":{"line":792,"column":8},"end":{"line":792,"column":14}},"489":{"start":{"line":796,"column":8},"end":{"line":796,"column":27}},"490":{"start":{"line":797,"column":8},"end":{"line":797,"column":14}},"491":{"start":{"line":799,"column":8},"end":{"line":799,"column":40}},"492":{"start":{"line":800,"column":8},"end":{"line":800,"column":25}},"493":{"start":{"line":803,"column":6},"end":{"line":803,"column":18}},"494":{"start":{"line":804,"column":6},"end":{"line":804,"column":16}},"495":{"start":{"line":806,"column":6},"end":{"line":806,"column":12}},"496":{"start":{"line":809,"column":6},"end":{"line":809,"column":25}},"497":{"start":{"line":810,"column":6},"end":{"line":810,"column":23}},"498":{"start":{"line":813,"column":6},"end":{"line":818,"column":7}},"499":{"start":{"line":814,"column":8},"end":{"line":814,"column":44}},"500":{"start":{"line":814,"column":26},"end":{"line":814,"column":42}},"501":{"start":{"line":815,"column":8},"end":{"line":815,"column":15}},"502":{"start":{"line":816,"column":8},"end":{"line":816,"column":38}},"503":{"start":{"line":817,"column":8},"end":{"line":817,"column":18}},"504":{"start":{"line":820,"column":6},"end":{"line":824,"column":7}},"505":{"start":{"line":821,"column":8},"end":{"line":821,"column":50}},"506":{"start":{"line":822,"column":8},"end":{"line":822,"column":25}},"507":{"start":{"line":823,"column":8},"end":{"line":823,"column":14}},"508":{"start":{"line":825,"column":6},"end":{"line":825,"column":35}},"509":{"start":{"line":829,"column":6},"end":{"line":829,"column":15}},"510":{"start":{"line":830,"column":6},"end":{"line":830,"column":15}},"511":{"start":{"line":832,"column":6},"end":{"line":832,"column":25}},"512":{"start":{"line":833,"column":6},"end":{"line":833,"column":49}},"513":{"start":{"line":833,"column":31},"end":{"line":833,"column":47}},"514":{"start":{"line":836,"column":6},"end":{"line":836,"column":24}},"515":{"start":{"line":839,"column":6},"end":{"line":839,"column":26}},"516":{"start":{"line":840,"column":6},"end":{"line":853,"column":7}},"517":{"start":{"line":841,"column":8},"end":{"line":841,"column":41}},"518":{"start":{"line":841,"column":27},"end":{"line":841,"column":39}},"519":{"start":{"line":842,"column":8},"end":{"line":842,"column":41}},"520":{"start":{"line":842,"column":27},"end":{"line":842,"column":39}},"521":{"start":{"line":843,"column":8},"end":{"line":843,"column":44}},"522":{"start":{"line":843,"column":26},"end":{"line":843,"column":42}},"523":{"start":{"line":845,"column":8},"end":{"line":845,"column":55}},"524":{"start":{"line":847,"column":8},"end":{"line":847,"column":21}},"525":{"start":{"line":848,"column":8},"end":{"line":848,"column":21}},"526":{"start":{"line":849,"column":8},"end":{"line":849,"column":21}},"527":{"start":{"line":850,"column":8},"end":{"line":850,"column":20}},"528":{"start":{"line":851,"column":8},"end":{"line":851,"column":29}},"529":{"start":{"line":852,"column":8},"end":{"line":852,"column":14}},"530":{"start":{"line":855,"column":6},"end":{"line":855,"column":24}},"531":{"start":{"line":856,"column":6},"end":{"line":856,"column":12}},"532":{"start":{"line":859,"column":6},"end":{"line":864,"column":7}},"533":{"start":{"line":860,"column":8},"end":{"line":860,"column":44}},"534":{"start":{"line":860,"column":26},"end":{"line":860,"column":42}},"535":{"start":{"line":861,"column":8},"end":{"line":861,"column":15}},"536":{"start":{"line":862,"column":8},"end":{"line":862,"column":38}},"537":{"start":{"line":863,"column":8},"end":{"line":863,"column":18}},"538":{"start":{"line":866,"column":6},"end":{"line":866,"column":50}},"539":{"start":{"line":868,"column":6},"end":{"line":868,"column":18}},"540":{"start":{"line":869,"column":6},"end":{"line":869,"column":16}},"541":{"start":{"line":871,"column":6},"end":{"line":871,"column":49}},"542":{"start":{"line":873,"column":6},"end":{"line":873,"column":18}},"543":{"start":{"line":874,"column":6},"end":{"line":874,"column":16}},"544":{"start":{"line":876,"column":6},"end":{"line":876,"column":49}},"545":{"start":{"line":878,"column":6},"end":{"line":878,"column":18}},"546":{"start":{"line":879,"column":6},"end":{"line":879,"column":16}},"547":{"start":{"line":882,"column":6},"end":{"line":886,"column":7}},"548":{"start":{"line":883,"column":8},"end":{"line":883,"column":57}},"549":{"start":{"line":884,"column":8},"end":{"line":884,"column":25}},"550":{"start":{"line":885,"column":8},"end":{"line":885,"column":14}},"551":{"start":{"line":889,"column":6},"end":{"line":889,"column":21}},"552":{"start":{"line":890,"column":6},"end":{"line":890,"column":27}},"553":{"start":{"line":893,"column":6},"end":{"line":907,"column":7}},"554":{"start":{"line":895,"column":8},"end":{"line":900,"column":9}},"555":{"start":{"line":896,"column":10},"end":{"line":896,"column":46}},"556":{"start":{"line":896,"column":28},"end":{"line":896,"column":44}},"557":{"start":{"line":897,"column":10},"end":{"line":897,"column":17}},"558":{"start":{"line":898,"column":10},"end":{"line":898,"column":40}},"559":{"start":{"line":899,"column":10},"end":{"line":899,"column":20}},"560":{"start":{"line":902,"column":8},"end":{"line":902,"column":56}},"561":{"start":{"line":904,"column":8},"end":{"line":904,"column":20}},"562":{"start":{"line":905,"column":8},"end":{"line":905,"column":18}},"563":{"start":{"line":908,"column":6},"end":{"line":910,"column":7}},"564":{"start":{"line":909,"column":8},"end":{"line":909,"column":44}},"565":{"start":{"line":915,"column":6},"end":{"line":915,"column":35}},"566":{"start":{"line":916,"column":6},"end":{"line":916,"column":24}},"567":{"start":{"line":918,"column":6},"end":{"line":918,"column":35}},"568":{"start":{"line":919,"column":6},"end":{"line":919,"column":88}},"569":{"start":{"line":920,"column":6},"end":{"line":920,"column":32}},"570":{"start":{"line":922,"column":6},"end":{"line":926,"column":7}},"571":{"start":{"line":923,"column":8},"end":{"line":923,"column":46}},"572":{"start":{"line":924,"column":8},"end":{"line":924,"column":25}},"573":{"start":{"line":925,"column":8},"end":{"line":925,"column":14}},"574":{"start":{"line":928,"column":6},"end":{"line":928,"column":21}},"575":{"start":{"line":929,"column":6},"end":{"line":929,"column":28}},"576":{"start":{"line":932,"column":6},"end":{"line":1032,"column":7}},"577":{"start":{"line":933,"column":8},"end":{"line":946,"column":9}},"578":{"start":{"line":934,"column":10},"end":{"line":934,"column":66}},"579":{"start":{"line":935,"column":10},"end":{"line":935,"column":34}},"580":{"start":{"line":936,"column":10},"end":{"line":936,"column":41}},"581":{"start":{"line":937,"column":10},"end":{"line":937,"column":35}},"582":{"start":{"line":939,"column":10},"end":{"line":939,"column":45}},"583":{"start":{"line":939,"column":37},"end":{"line":939,"column":43}},"584":{"start":{"line":941,"column":10},"end":{"line":941,"column":46}},"585":{"start":{"line":941,"column":28},"end":{"line":941,"column":44}},"586":{"start":{"line":942,"column":10},"end":{"line":942,"column":17}},"587":{"start":{"line":943,"column":10},"end":{"line":943,"column":40}},"588":{"start":{"line":944,"column":10},"end":{"line":944,"column":20}},"589":{"start":{"line":947,"column":8},"end":{"line":1031,"column":9}},"590":{"start":{"line":949,"column":10},"end":{"line":949,"column":30}},"591":{"start":{"line":950,"column":10},"end":{"line":950,"column":28}},"592":{"start":{"line":952,"column":10},"end":{"line":952,"column":46}},"593":{"start":{"line":955,"column":10},"end":{"line":1022,"column":11}},"594":{"start":{"line":957,"column":12},"end":{"line":957,"column":30}},"595":{"start":{"line":958,"column":12},"end":{"line":963,"column":13}},"596":{"start":{"line":959,"column":14},"end":{"line":959,"column":50}},"597":{"start":{"line":959,"column":32},"end":{"line":959,"column":48}},"598":{"start":{"line":960,"column":14},"end":{"line":960,"column":21}},"599":{"start":{"line":961,"column":14},"end":{"line":961,"column":44}},"600":{"start":{"line":962,"column":14},"end":{"line":962,"column":24}},"601":{"start":{"line":966,"column":12},"end":{"line":966,"column":32}},"602":{"start":{"line":967,"column":12},"end":{"line":967,"column":30}},"603":{"start":{"line":969,"column":12},"end":{"line":973,"column":13}},"604":{"start":{"line":970,"column":14},"end":{"line":970,"column":53}},"605":{"start":{"line":971,"column":14},"end":{"line":971,"column":31}},"606":{"start":{"line":972,"column":14},"end":{"line":972,"column":20}},"607":{"start":{"line":974,"column":12},"end":{"line":974,"column":45}},"608":{"start":{"line":975,"column":12},"end":{"line":975,"column":37}},"609":{"start":{"line":977,"column":12},"end":{"line":977,"column":24}},"610":{"start":{"line":978,"column":12},"end":{"line":978,"column":22}},"611":{"start":{"line":981,"column":15},"end":{"line":1022,"column":11}},"612":{"start":{"line":983,"column":12},"end":{"line":983,"column":30}},"613":{"start":{"line":984,"column":12},"end":{"line":989,"column":13}},"614":{"start":{"line":985,"column":14},"end":{"line":985,"column":50}},"615":{"start":{"line":985,"column":32},"end":{"line":985,"column":48}},"616":{"start":{"line":986,"column":14},"end":{"line":986,"column":21}},"617":{"start":{"line":987,"column":14},"end":{"line":987,"column":44}},"618":{"start":{"line":988,"column":14},"end":{"line":988,"column":24}},"619":{"start":{"line":992,"column":12},"end":{"line":992,"column":32}},"620":{"start":{"line":993,"column":12},"end":{"line":993,"column":30}},"621":{"start":{"line":995,"column":12},"end":{"line":995,"column":20}},"622":{"start":{"line":996,"column":12},"end":{"line":996,"column":37}},"623":{"start":{"line":998,"column":12},"end":{"line":998,"column":24}},"624":{"start":{"line":999,"column":12},"end":{"line":999,"column":22}},"625":{"start":{"line":1004,"column":12},"end":{"line":1004,"column":30}},"626":{"start":{"line":1005,"column":12},"end":{"line":1010,"column":13}},"627":{"start":{"line":1006,"column":14},"end":{"line":1006,"column":50}},"628":{"start":{"line":1006,"column":32},"end":{"line":1006,"column":48}},"629":{"start":{"line":1007,"column":14},"end":{"line":1007,"column":21}},"630":{"start":{"line":1008,"column":14},"end":{"line":1008,"column":44}},"631":{"start":{"line":1009,"column":14},"end":{"line":1009,"column":24}},"632":{"start":{"line":1013,"column":12},"end":{"line":1013,"column":32}},"633":{"start":{"line":1014,"column":12},"end":{"line":1014,"column":30}},"634":{"start":{"line":1016,"column":12},"end":{"line":1016,"column":20}},"635":{"start":{"line":1017,"column":12},"end":{"line":1017,"column":38}},"636":{"start":{"line":1019,"column":12},"end":{"line":1019,"column":24}},"637":{"start":{"line":1020,"column":12},"end":{"line":1020,"column":22}},"638":{"start":{"line":1023,"column":10},"end":{"line":1027,"column":11}},"639":{"start":{"line":1024,"column":12},"end":{"line":1024,"column":51}},"640":{"start":{"line":1025,"column":12},"end":{"line":1025,"column":29}},"641":{"start":{"line":1026,"column":12},"end":{"line":1026,"column":18}},"642":{"start":{"line":1028,"column":10},"end":{"line":1030,"column":11}},"643":{"start":{"line":1029,"column":12},"end":{"line":1029,"column":43}},"644":{"start":{"line":1035,"column":6},"end":{"line":1035,"column":40}},"645":{"start":{"line":1035,"column":32},"end":{"line":1035,"column":38}},"646":{"start":{"line":1038,"column":6},"end":{"line":1042,"column":7}},"647":{"start":{"line":1039,"column":8},"end":{"line":1039,"column":58}},"648":{"start":{"line":1040,"column":8},"end":{"line":1040,"column":25}},"649":{"start":{"line":1041,"column":8},"end":{"line":1041,"column":14}},"650":{"start":{"line":1047,"column":6},"end":{"line":1047,"column":24}},"651":{"start":{"line":1049,"column":6},"end":{"line":1049,"column":35}},"652":{"start":{"line":1050,"column":6},"end":{"line":1050,"column":95}},"653":{"start":{"line":1053,"column":6},"end":{"line":1053,"column":32}},"654":{"start":{"line":1056,"column":6},"end":{"line":1060,"column":7}},"655":{"start":{"line":1057,"column":8},"end":{"line":1057,"column":49}},"656":{"start":{"line":1058,"column":8},"end":{"line":1058,"column":25}},"657":{"start":{"line":1059,"column":8},"end":{"line":1059,"column":14}},"658":{"start":{"line":1062,"column":6},"end":{"line":1062,"column":25}},"659":{"start":{"line":1065,"column":6},"end":{"line":1065,"column":37}},"660":{"start":{"line":1066,"column":6},"end":{"line":1066,"column":36}},"661":{"start":{"line":1067,"column":6},"end":{"line":1067,"column":107}},"662":{"start":{"line":1070,"column":6},"end":{"line":1070,"column":33}},"663":{"start":{"line":1073,"column":6},"end":{"line":1077,"column":7}},"664":{"start":{"line":1074,"column":8},"end":{"line":1074,"column":43}},"665":{"start":{"line":1075,"column":8},"end":{"line":1075,"column":25}},"666":{"start":{"line":1076,"column":8},"end":{"line":1076,"column":14}},"667":{"start":{"line":1079,"column":6},"end":{"line":1079,"column":24}},"668":{"start":{"line":1080,"column":6},"end":{"line":1080,"column":49}},"669":{"start":{"line":1080,"column":31},"end":{"line":1080,"column":47}},"670":{"start":{"line":1083,"column":6},"end":{"line":1083,"column":23}},"671":{"start":{"line":1086,"column":6},"end":{"line":1111,"column":7}},"672":{"start":{"line":1088,"column":8},"end":{"line":1088,"column":28}},"673":{"start":{"line":1089,"column":8},"end":{"line":1089,"column":30}},"674":{"start":{"line":1090,"column":8},"end":{"line":1090,"column":28}},"675":{"start":{"line":1091,"column":8},"end":{"line":1091,"column":29}},"676":{"start":{"line":1092,"column":8},"end":{"line":1092,"column":26}},"677":{"start":{"line":1093,"column":8},"end":{"line":1093,"column":26}},"678":{"start":{"line":1095,"column":8},"end":{"line":1095,"column":33}},"679":{"start":{"line":1097,"column":8},"end":{"line":1097,"column":28}},"680":{"start":{"line":1098,"column":8},"end":{"line":1098,"column":29}},"681":{"start":{"line":1099,"column":8},"end":{"line":1099,"column":30}},"682":{"start":{"line":1100,"column":8},"end":{"line":1100,"column":28}},"683":{"start":{"line":1101,"column":8},"end":{"line":1101,"column":27}},"684":{"start":{"line":1102,"column":8},"end":{"line":1102,"column":29}},"685":{"start":{"line":1103,"column":8},"end":{"line":1103,"column":26}},"686":{"start":{"line":1104,"column":8},"end":{"line":1104,"column":26}},"687":{"start":{"line":1107,"column":8},"end":{"line":1109,"column":9}},"688":{"start":{"line":1108,"column":10},"end":{"line":1108,"column":26}},"689":{"start":{"line":1110,"column":8},"end":{"line":1110,"column":14}},"690":{"start":{"line":1112,"column":6},"end":{"line":1112,"column":21}},"691":{"start":{"line":1113,"column":6},"end":{"line":1126,"column":7}},"692":{"start":{"line":1114,"column":8},"end":{"line":1114,"column":63}},"693":{"start":{"line":1115,"column":8},"end":{"line":1115,"column":32}},"694":{"start":{"line":1116,"column":8},"end":{"line":1116,"column":39}},"695":{"start":{"line":1117,"column":8},"end":{"line":1117,"column":33}},"696":{"start":{"line":1119,"column":8},"end":{"line":1119,"column":41}},"697":{"start":{"line":1119,"column":33},"end":{"line":1119,"column":39}},"698":{"start":{"line":1121,"column":8},"end":{"line":1121,"column":44}},"699":{"start":{"line":1121,"column":26},"end":{"line":1121,"column":42}},"700":{"start":{"line":1122,"column":8},"end":{"line":1122,"column":15}},"701":{"start":{"line":1123,"column":8},"end":{"line":1123,"column":38}},"702":{"start":{"line":1124,"column":8},"end":{"line":1124,"column":18}},"703":{"start":{"line":1127,"column":6},"end":{"line":1151,"column":7}},"704":{"start":{"line":1128,"column":8},"end":{"line":1128,"column":30}},"705":{"start":{"line":1129,"column":8},"end":{"line":1129,"column":26}},"706":{"start":{"line":1130,"column":8},"end":{"line":1130,"column":28}},"707":{"start":{"line":1131,"column":8},"end":{"line":1145,"column":9}},"708":{"start":{"line":1132,"column":10},"end":{"line":1133,"column":106}},"709":{"start":{"line":1134,"column":10},"end":{"line":1134,"column":34}},"710":{"start":{"line":1135,"column":10},"end":{"line":1135,"column":41}},"711":{"start":{"line":1136,"column":10},"end":{"line":1136,"column":35}},"712":{"start":{"line":1138,"column":10},"end":{"line":1138,"column":57}},"713":{"start":{"line":1138,"column":49},"end":{"line":1138,"column":55}},"714":{"start":{"line":1140,"column":10},"end":{"line":1140,"column":46}},"715":{"start":{"line":1140,"column":28},"end":{"line":1140,"column":44}},"716":{"start":{"line":1141,"column":10},"end":{"line":1141,"column":17}},"717":{"start":{"line":1142,"column":10},"end":{"line":1142,"column":40}},"718":{"start":{"line":1143,"column":10},"end":{"line":1143,"column":20}},"719":{"start":{"line":1147,"column":8},"end":{"line":1147,"column":28}},"720":{"start":{"line":1148,"column":8},"end":{"line":1148,"column":26}},"721":{"start":{"line":1150,"column":8},"end":{"line":1150,"column":32}},"722":{"start":{"line":1153,"column":6},"end":{"line":1153,"column":26}},"723":{"start":{"line":1154,"column":6},"end":{"line":1154,"column":24}},"724":{"start":{"line":1156,"column":6},"end":{"line":1156,"column":30}},"725":{"start":{"line":1157,"column":6},"end":{"line":1157,"column":30}},"726":{"start":{"line":1158,"column":6},"end":{"line":1164,"column":7}},"727":{"start":{"line":1162,"column":8},"end":{"line":1162,"column":25}},"728":{"start":{"line":1163,"column":8},"end":{"line":1163,"column":14}},"729":{"start":{"line":1165,"column":6},"end":{"line":1170,"column":7}},"730":{"start":{"line":1167,"column":8},"end":{"line":1167,"column":24}},"731":{"start":{"line":1168,"column":8},"end":{"line":1168,"column":26}},"732":{"start":{"line":1169,"column":8},"end":{"line":1169,"column":14}},"733":{"start":{"line":1171,"column":6},"end":{"line":1175,"column":7}},"734":{"start":{"line":1172,"column":8},"end":{"line":1172,"column":49}},"735":{"start":{"line":1173,"column":8},"end":{"line":1173,"column":25}},"736":{"start":{"line":1174,"column":8},"end":{"line":1174,"column":14}},"737":{"start":{"line":1176,"column":6},"end":{"line":1176,"column":33}},"738":{"start":{"line":1177,"column":6},"end":{"line":1177,"column":26}},"739":{"start":{"line":1180,"column":6},"end":{"line":1196,"column":7}},"740":{"start":{"line":1182,"column":8},"end":{"line":1182,"column":24}},"741":{"start":{"line":1183,"column":8},"end":{"line":1188,"column":9}},"742":{"start":{"line":1184,"column":10},"end":{"line":1184,"column":46}},"743":{"start":{"line":1184,"column":28},"end":{"line":1184,"column":44}},"744":{"start":{"line":1185,"column":10},"end":{"line":1185,"column":17}},"745":{"start":{"line":1186,"column":10},"end":{"line":1186,"column":40}},"746":{"start":{"line":1187,"column":10},"end":{"line":1187,"column":20}},"747":{"start":{"line":1190,"column":8},"end":{"line":1190,"column":76}},"748":{"start":{"line":1192,"column":8},"end":{"line":1192,"column":30}},"749":{"start":{"line":1193,"column":8},"end":{"line":1193,"column":28}},"750":{"start":{"line":1195,"column":8},"end":{"line":1195,"column":34}},"751":{"start":{"line":1198,"column":6},"end":{"line":1198,"column":31}},"752":{"start":{"line":1199,"column":6},"end":{"line":1199,"column":24}},"753":{"start":{"line":1202,"column":6},"end":{"line":1215,"column":7}},"754":{"start":{"line":1203,"column":8},"end":{"line":1203,"column":65}},"755":{"start":{"line":1204,"column":8},"end":{"line":1204,"column":32}},"756":{"start":{"line":1205,"column":8},"end":{"line":1205,"column":39}},"757":{"start":{"line":1206,"column":8},"end":{"line":1206,"column":33}},"758":{"start":{"line":1208,"column":8},"end":{"line":1208,"column":43}},"759":{"start":{"line":1208,"column":35},"end":{"line":1208,"column":41}},"760":{"start":{"line":1210,"column":8},"end":{"line":1210,"column":44}},"761":{"start":{"line":1210,"column":26},"end":{"line":1210,"column":42}},"762":{"start":{"line":1211,"column":8},"end":{"line":1211,"column":15}},"763":{"start":{"line":1212,"column":8},"end":{"line":1212,"column":38}},"764":{"start":{"line":1213,"column":8},"end":{"line":1213,"column":18}},"765":{"start":{"line":1216,"column":6},"end":{"line":1240,"column":7}},"766":{"start":{"line":1217,"column":8},"end":{"line":1217,"column":30}},"767":{"start":{"line":1218,"column":8},"end":{"line":1218,"column":26}},"768":{"start":{"line":1219,"column":8},"end":{"line":1219,"column":28}},"769":{"start":{"line":1220,"column":8},"end":{"line":1234,"column":9}},"770":{"start":{"line":1221,"column":10},"end":{"line":1222,"column":106}},"771":{"start":{"line":1223,"column":10},"end":{"line":1223,"column":34}},"772":{"start":{"line":1224,"column":10},"end":{"line":1224,"column":41}},"773":{"start":{"line":1225,"column":10},"end":{"line":1225,"column":35}},"774":{"start":{"line":1227,"column":10},"end":{"line":1227,"column":57}},"775":{"start":{"line":1227,"column":49},"end":{"line":1227,"column":55}},"776":{"start":{"line":1229,"column":10},"end":{"line":1229,"column":46}},"777":{"start":{"line":1229,"column":28},"end":{"line":1229,"column":44}},"778":{"start":{"line":1230,"column":10},"end":{"line":1230,"column":17}},"779":{"start":{"line":1231,"column":10},"end":{"line":1231,"column":40}},"780":{"start":{"line":1232,"column":10},"end":{"line":1232,"column":20}},"781":{"start":{"line":1236,"column":8},"end":{"line":1236,"column":28}},"782":{"start":{"line":1237,"column":8},"end":{"line":1237,"column":26}},"783":{"start":{"line":1239,"column":8},"end":{"line":1239,"column":32}},"784":{"start":{"line":1242,"column":6},"end":{"line":1242,"column":26}},"785":{"start":{"line":1243,"column":6},"end":{"line":1243,"column":24}},"786":{"start":{"line":1245,"column":6},"end":{"line":1245,"column":30}},"787":{"start":{"line":1246,"column":6},"end":{"line":1250,"column":7}},"788":{"start":{"line":1247,"column":8},"end":{"line":1247,"column":43}},"789":{"start":{"line":1248,"column":8},"end":{"line":1248,"column":25}},"790":{"start":{"line":1249,"column":8},"end":{"line":1249,"column":14}},"791":{"start":{"line":1251,"column":6},"end":{"line":1251,"column":30}},"792":{"start":{"line":1252,"column":6},"end":{"line":1252,"column":35}},"793":{"start":{"line":1253,"column":6},"end":{"line":1253,"column":27}},"794":{"start":{"line":1256,"column":6},"end":{"line":1272,"column":7}},"795":{"start":{"line":1258,"column":8},"end":{"line":1258,"column":24}},"796":{"start":{"line":1259,"column":8},"end":{"line":1264,"column":9}},"797":{"start":{"line":1260,"column":10},"end":{"line":1260,"column":46}},"798":{"start":{"line":1260,"column":28},"end":{"line":1260,"column":44}},"799":{"start":{"line":1261,"column":10},"end":{"line":1261,"column":17}},"800":{"start":{"line":1262,"column":10},"end":{"line":1262,"column":40}},"801":{"start":{"line":1263,"column":10},"end":{"line":1263,"column":20}},"802":{"start":{"line":1266,"column":8},"end":{"line":1266,"column":76}},"803":{"start":{"line":1268,"column":8},"end":{"line":1268,"column":30}},"804":{"start":{"line":1269,"column":8},"end":{"line":1269,"column":28}},"805":{"start":{"line":1271,"column":8},"end":{"line":1271,"column":34}},"806":{"start":{"line":1274,"column":6},"end":{"line":1278,"column":7}},"807":{"start":{"line":1275,"column":8},"end":{"line":1275,"column":51}},"808":{"start":{"line":1276,"column":8},"end":{"line":1276,"column":25}},"809":{"start":{"line":1277,"column":8},"end":{"line":1277,"column":14}},"810":{"start":{"line":1281,"column":6},"end":{"line":1281,"column":25}},"811":{"start":{"line":1284,"column":6},"end":{"line":1284,"column":42}},"812":{"start":{"line":1284,"column":24},"end":{"line":1284,"column":40}},"813":{"start":{"line":1285,"column":6},"end":{"line":1285,"column":25}},"814":{"start":{"line":1286,"column":6},"end":{"line":1324,"column":7}},"815":{"start":{"line":1287,"column":8},"end":{"line":1287,"column":35}},"816":{"start":{"line":1288,"column":8},"end":{"line":1309,"column":9}},"817":{"start":{"line":1289,"column":10},"end":{"line":1293,"column":11}},"818":{"start":{"line":1290,"column":12},"end":{"line":1290,"column":55}},"819":{"start":{"line":1291,"column":12},"end":{"line":1291,"column":29}},"820":{"start":{"line":1292,"column":12},"end":{"line":1292,"column":18}},"821":{"start":{"line":1310,"column":8},"end":{"line":1316,"column":9}},"822":{"start":{"line":1311,"column":10},"end":{"line":1311,"column":30}},"823":{"start":{"line":1312,"column":10},"end":{"line":1312,"column":36}},"824":{"start":{"line":1315,"column":10},"end":{"line":1315,"column":36}},"825":{"start":{"line":1317,"column":8},"end":{"line":1317,"column":57}},"826":{"start":{"line":1317,"column":35},"end":{"line":1317,"column":55}},"827":{"start":{"line":1318,"column":8},"end":{"line":1318,"column":35}},"828":{"start":{"line":1321,"column":8},"end":{"line":1321,"column":29}},"829":{"start":{"line":1322,"column":8},"end":{"line":1322,"column":34}},"830":{"start":{"line":1323,"column":8},"end":{"line":1323,"column":28}},"831":{"start":{"line":1325,"column":6},"end":{"line":1325,"column":39}},"832":{"start":{"line":1325,"column":25},"end":{"line":1325,"column":37}},"833":{"start":{"line":1326,"column":6},"end":{"line":1326,"column":19}},"834":{"start":{"line":1327,"column":6},"end":{"line":1327,"column":27}},"835":{"start":{"line":1328,"column":6},"end":{"line":1330,"column":23}},"836":{"start":{"line":1329,"column":8},"end":{"line":1329,"column":44}},"837":{"start":{"line":1331,"column":6},"end":{"line":1331,"column":51}},"838":{"start":{"line":1331,"column":32},"end":{"line":1331,"column":49}},"839":{"start":{"line":1332,"column":6},"end":{"line":1332,"column":12}},"840":{"start":{"line":1334,"column":6},"end":{"line":1334,"column":42}},"841":{"start":{"line":1334,"column":24},"end":{"line":1334,"column":40}},"842":{"start":{"line":1335,"column":6},"end":{"line":1335,"column":35}},"843":{"start":{"line":1336,"column":6},"end":{"line":1336,"column":13}},"844":{"start":{"line":1337,"column":6},"end":{"line":1337,"column":23}},"845":{"start":{"line":1338,"column":6},"end":{"line":1338,"column":12}},"846":{"start":{"line":1340,"column":6},"end":{"line":1371,"column":7}},"847":{"start":{"line":1342,"column":8},"end":{"line":1348,"column":9}},"848":{"start":{"line":1343,"column":10},"end":{"line":1343,"column":46}},"849":{"start":{"line":1343,"column":28},"end":{"line":1343,"column":44}},"850":{"start":{"line":1344,"column":10},"end":{"line":1344,"column":17}},"851":{"start":{"line":1346,"column":10},"end":{"line":1346,"column":40}},"852":{"start":{"line":1347,"column":10},"end":{"line":1347,"column":20}},"853":{"start":{"line":1350,"column":8},"end":{"line":1350,"column":21}},"854":{"start":{"line":1351,"column":8},"end":{"line":1351,"column":31}},"855":{"start":{"line":1352,"column":8},"end":{"line":1352,"column":28}},"856":{"start":{"line":1353,"column":8},"end":{"line":1358,"column":9}},"857":{"start":{"line":1354,"column":10},"end":{"line":1356,"column":124}},"858":{"start":{"line":1359,"column":8},"end":{"line":1359,"column":20}},"859":{"start":{"line":1361,"column":8},"end":{"line":1365,"column":9}},"860":{"start":{"line":1362,"column":10},"end":{"line":1362,"column":44}},"861":{"start":{"line":1363,"column":10},"end":{"line":1363,"column":27}},"862":{"start":{"line":1364,"column":10},"end":{"line":1364,"column":16}},"863":{"start":{"line":1367,"column":8},"end":{"line":1367,"column":17}},"864":{"start":{"line":1368,"column":8},"end":{"line":1368,"column":17}},"865":{"start":{"line":1372,"column":6},"end":{"line":1372,"column":26}},"866":{"start":{"line":1375,"column":6},"end":{"line":1394,"column":7}},"867":{"start":{"line":1377,"column":8},"end":{"line":1382,"column":9}},"868":{"start":{"line":1378,"column":10},"end":{"line":1378,"column":46}},"869":{"start":{"line":1378,"column":28},"end":{"line":1378,"column":44}},"870":{"start":{"line":1379,"column":10},"end":{"line":1379,"column":17}},"871":{"start":{"line":1380,"column":10},"end":{"line":1380,"column":40}},"872":{"start":{"line":1381,"column":10},"end":{"line":1381,"column":20}},"873":{"start":{"line":1384,"column":8},"end":{"line":1388,"column":9}},"874":{"start":{"line":1385,"column":10},"end":{"line":1385,"column":46}},"875":{"start":{"line":1386,"column":10},"end":{"line":1386,"column":27}},"876":{"start":{"line":1387,"column":10},"end":{"line":1387,"column":16}},"877":{"start":{"line":1390,"column":8},"end":{"line":1390,"column":17}},"878":{"start":{"line":1391,"column":8},"end":{"line":1391,"column":17}},"879":{"start":{"line":1395,"column":6},"end":{"line":1395,"column":24}},"880":{"start":{"line":1398,"column":6},"end":{"line":1398,"column":25}},"881":{"start":{"line":1399,"column":6},"end":{"line":1399,"column":22}},"882":{"start":{"line":1401,"column":6},"end":{"line":1401,"column":25}},"883":{"start":{"line":1402,"column":6},"end":{"line":1402,"column":22}},"884":{"start":{"line":1404,"column":6},"end":{"line":1404,"column":25}},"885":{"start":{"line":1408,"column":6},"end":{"line":1408,"column":28}},"886":{"start":{"line":1422,"column":2},"end":{"line":1422,"column":22}},"887":{"start":{"line":1423,"column":2},"end":{"line":1423,"column":24}},"888":{"start":{"line":1424,"column":2},"end":{"line":1424,"column":22}},"889":{"start":{"line":1425,"column":2},"end":{"line":1425,"column":23}},"890":{"start":{"line":1426,"column":2},"end":{"line":1426,"column":20}},"891":{"start":{"line":1427,"column":2},"end":{"line":1427,"column":20}},"892":{"start":{"line":1430,"column":2},"end":{"line":1436,"column":3}},"893":{"start":{"line":1432,"column":4},"end":{"line":1435,"column":5}},"894":{"start":{"line":1433,"column":6},"end":{"line":1433,"column":23}},"895":{"start":{"line":1434,"column":6},"end":{"line":1434,"column":25}},"896":{"start":{"line":1437,"column":2},"end":{"line":1437,"column":23}},"897":{"start":{"line":1438,"column":2},"end":{"line":1438,"column":25}},"898":{"start":{"line":1439,"column":2},"end":{"line":1439,"column":23}},"899":{"start":{"line":1440,"column":2},"end":{"line":1440,"column":25}},"900":{"start":{"line":1441,"column":2},"end":{"line":1441,"column":22}},"901":{"start":{"line":1442,"column":2},"end":{"line":1445,"column":3}},"902":{"start":{"line":1443,"column":4},"end":{"line":1444,"column":136}},"903":{"start":{"line":1446,"column":2},"end":{"line":1448,"column":76}},"904":{"start":{"line":1449,"column":2},"end":{"line":1451,"column":3}},"905":{"start":{"line":1450,"column":4},"end":{"line":1450,"column":22}},"906":{"start":{"line":1452,"column":2},"end":{"line":1452,"column":13}},"907":{"start":{"line":1455,"column":0},"end":{"line":1467,"column":1}},"908":{"start":{"line":1457,"column":2},"end":{"line":1459,"column":3}},"909":{"start":{"line":1458,"column":4},"end":{"line":1458,"column":26}},"910":{"start":{"line":1461,"column":2},"end":{"line":1461,"column":25}},"911":{"start":{"line":1462,"column":2},"end":{"line":1464,"column":3}},"912":{"start":{"line":1463,"column":4},"end":{"line":1463,"column":24}},"913":{"start":{"line":1465,"column":2},"end":{"line":1465,"column":20}},"914":{"start":{"line":1466,"column":2},"end":{"line":1466,"column":14}},"915":{"start":{"line":1469,"column":0},"end":{"line":1481,"column":1}},"916":{"start":{"line":1470,"column":2},"end":{"line":1470,"column":12}},"917":{"start":{"line":1473,"column":2},"end":{"line":1473,"column":54}},"918":{"start":{"line":1473,"column":30},"end":{"line":1473,"column":52}},"919":{"start":{"line":1474,"column":2},"end":{"line":1474,"column":21}},"920":{"start":{"line":1475,"column":2},"end":{"line":1475,"column":56}},"921":{"start":{"line":1475,"column":32},"end":{"line":1475,"column":54}},"922":{"start":{"line":1478,"column":2},"end":{"line":1478,"column":20}},"923":{"start":{"line":1479,"column":2},"end":{"line":1479,"column":20}},"924":{"start":{"line":1480,"column":2},"end":{"line":1480,"column":14}},"925":{"start":{"line":1484,"column":0},"end":{"line":1484,"column":36}},"926":{"start":{"line":1485,"column":0},"end":{"line":1485,"column":38}},"927":{"start":{"line":1486,"column":0},"end":{"line":1486,"column":44}},"928":{"start":{"line":1487,"column":0},"end":{"line":1487,"column":34}},"929":{"start":{"line":1488,"column":0},"end":{"line":1488,"column":36}},"930":{"start":{"line":1489,"column":0},"end":{"line":1489,"column":26}},"931":{"start":{"line":1490,"column":0},"end":{"line":1490,"column":32}},"932":{"start":{"line":1491,"column":0},"end":{"line":1491,"column":44}},"933":{"start":{"line":1492,"column":0},"end":{"line":1492,"column":59}}},"branchMap":{"1":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":2},"end":{"line":164,"column":2}},{"start":{"line":164,"column":2},"end":{"line":164,"column":2}}]},"2":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":6},"end":{"line":164,"column":11}},{"start":{"line":164,"column":15},"end":{"line":164,"column":26}}]},"3":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":2},"end":{"line":168,"column":2}},{"start":{"line":168,"column":2},"end":{"line":168,"column":2}}]},"4":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":2},"end":{"line":191,"column":2}},{"start":{"line":191,"column":2},"end":{"line":191,"column":2}}]},"5":{"line":191,"type":"binary-expr","locations":[{"start":{"line":191,"column":6},"end":{"line":191,"column":11}},{"start":{"line":191,"column":15},"end":{"line":191,"column":26}}]},"6":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":2},"end":{"line":205,"column":2}},{"start":{"line":205,"column":2},"end":{"line":205,"column":2}}]},"7":{"line":205,"type":"binary-expr","locations":[{"start":{"line":205,"column":6},"end":{"line":205,"column":11}},{"start":{"line":205,"column":15},"end":{"line":205,"column":26}}]},"8":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":2},"end":{"line":209,"column":2}},{"start":{"line":209,"column":2},"end":{"line":209,"column":2}}]},"9":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":4},"end":{"line":215,"column":4}},{"start":{"line":215,"column":4},"end":{"line":215,"column":4}}]},"10":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":2},"end":{"line":221,"column":2}},{"start":{"line":221,"column":2},"end":{"line":221,"column":2}}]},"11":{"line":221,"type":"binary-expr","locations":[{"start":{"line":221,"column":6},"end":{"line":221,"column":16}},{"start":{"line":221,"column":21},"end":{"line":221,"column":35}},{"start":{"line":221,"column":39},"end":{"line":221,"column":54}}]},"12":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":2},"end":{"line":224,"column":2}},{"start":{"line":224,"column":2},"end":{"line":224,"column":2}}]},"13":{"line":224,"type":"binary-expr","locations":[{"start":{"line":224,"column":6},"end":{"line":224,"column":27}},{"start":{"line":224,"column":31},"end":{"line":224,"column":57}}]},"14":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":2},"end":{"line":238,"column":2}},{"start":{"line":238,"column":2},"end":{"line":238,"column":2}}]},"15":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":2},"end":{"line":248,"column":2}},{"start":{"line":248,"column":2},"end":{"line":248,"column":2}}]},"16":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":2},"end":{"line":275,"column":2}},{"start":{"line":275,"column":2},"end":{"line":275,"column":2}}]},"17":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":2},"end":{"line":326,"column":2}},{"start":{"line":326,"column":2},"end":{"line":326,"column":2}}]},"18":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":2},"end":{"line":335,"column":2}},{"start":{"line":335,"column":2},"end":{"line":335,"column":2}}]},"19":{"line":342,"type":"if","locations":[{"start":{"line":342,"column":4},"end":{"line":342,"column":4}},{"start":{"line":342,"column":4},"end":{"line":342,"column":4}}]},"20":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":4},"end":{"line":348,"column":4}},{"start":{"line":348,"column":4},"end":{"line":348,"column":4}}]},"21":{"line":356,"type":"if","locations":[{"start":{"line":356,"column":6},"end":{"line":356,"column":6}},{"start":{"line":356,"column":6},"end":{"line":356,"column":6}}]},"22":{"line":357,"type":"if","locations":[{"start":{"line":357,"column":6},"end":{"line":357,"column":6}},{"start":{"line":357,"column":6},"end":{"line":357,"column":6}}]},"23":{"line":390,"type":"if","locations":[{"start":{"line":390,"column":2},"end":{"line":390,"column":2}},{"start":{"line":390,"column":2},"end":{"line":390,"column":2}}]},"24":{"line":390,"type":"binary-expr","locations":[{"start":{"line":390,"column":6},"end":{"line":390,"column":11}},{"start":{"line":390,"column":15},"end":{"line":390,"column":26}},{"start":{"line":390,"column":30},"end":{"line":390,"column":42}},{"start":{"line":391,"column":7},"end":{"line":391,"column":18}},{"start":{"line":391,"column":22},"end":{"line":391,"column":41}}]},"25":{"line":396,"type":"if","locations":[{"start":{"line":396,"column":2},"end":{"line":396,"column":2}},{"start":{"line":396,"column":2},"end":{"line":396,"column":2}}]},"26":{"line":416,"type":"switch","locations":[{"start":{"line":417,"column":4},"end":{"line":481,"column":12}},{"start":{"line":482,"column":4},"end":{"line":516,"column":24}},{"start":{"line":518,"column":4},"end":{"line":543,"column":22}},{"start":{"line":545,"column":4},"end":{"line":569,"column":25}},{"start":{"line":571,"column":4},"end":{"line":600,"column":25}},{"start":{"line":602,"column":4},"end":{"line":637,"column":24}},{"start":{"line":639,"column":4},"end":{"line":664,"column":27}},{"start":{"line":666,"column":4},"end":{"line":688,"column":24}},{"start":{"line":690,"column":4},"end":{"line":716,"column":12}},{"start":{"line":717,"column":4},"end":{"line":731,"column":24}},{"start":{"line":733,"column":4},"end":{"line":746,"column":24}},{"start":{"line":748,"column":4},"end":{"line":749,"column":70}},{"start":{"line":751,"column":4},"end":{"line":806,"column":12}},{"start":{"line":807,"column":4},"end":{"line":833,"column":49}},{"start":{"line":835,"column":4},"end":{"line":836,"column":24}},{"start":{"line":838,"column":4},"end":{"line":856,"column":12}},{"start":{"line":857,"column":4},"end":{"line":890,"column":27}},{"start":{"line":892,"column":4},"end":{"line":929,"column":28}},{"start":{"line":931,"column":4},"end":{"line":1080,"column":49}},{"start":{"line":1082,"column":4},"end":{"line":1083,"column":23}},{"start":{"line":1085,"column":4},"end":{"line":1177,"column":26}},{"start":{"line":1179,"column":4},"end":{"line":1199,"column":24}},{"start":{"line":1201,"column":4},"end":{"line":1253,"column":27}},{"start":{"line":1255,"column":4},"end":{"line":1281,"column":25}},{"start":{"line":1283,"column":4},"end":{"line":1332,"column":12}},{"start":{"line":1333,"column":4},"end":{"line":1338,"column":12}},{"start":{"line":1339,"column":4},"end":{"line":1372,"column":26}},{"start":{"line":1374,"column":4},"end":{"line":1395,"column":24}},{"start":{"line":1397,"column":4},"end":{"line":1399,"column":22}},{"start":{"line":1400,"column":4},"end":{"line":1402,"column":22}},{"start":{"line":1403,"column":4},"end":{"line":1404,"column":25}},{"start":{"line":1405,"column":4},"end":{"line":1405,"column":14}},{"start":{"line":1407,"column":4},"end":{"line":1408,"column":28}}]},"27":{"line":418,"type":"if","locations":[{"start":{"line":418,"column":6},"end":{"line":418,"column":6}},{"start":{"line":418,"column":6},"end":{"line":418,"column":6}}]},"28":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":8},"end":{"line":424,"column":8}},{"start":{"line":424,"column":8},"end":{"line":424,"column":8}}]},"29":{"line":430,"type":"if","locations":[{"start":{"line":430,"column":6},"end":{"line":430,"column":6}},{"start":{"line":430,"column":6},"end":{"line":430,"column":6}}]},"30":{"line":430,"type":"binary-expr","locations":[{"start":{"line":430,"column":11},"end":{"line":430,"column":25}},{"start":{"line":430,"column":30},"end":{"line":430,"column":45}}]},"31":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":6},"end":{"line":446,"column":6}},{"start":{"line":446,"column":6},"end":{"line":446,"column":6}}]},"32":{"line":449,"type":"if","locations":[{"start":{"line":449,"column":6},"end":{"line":449,"column":6}},{"start":{"line":449,"column":6},"end":{"line":449,"column":6}}]},"33":{"line":449,"type":"binary-expr","locations":[{"start":{"line":449,"column":10},"end":{"line":449,"column":27}},{"start":{"line":450,"column":8},"end":{"line":450,"column":60}}]},"34":{"line":455,"type":"if","locations":[{"start":{"line":455,"column":6},"end":{"line":455,"column":6}},{"start":{"line":455,"column":6},"end":{"line":455,"column":6}}]},"35":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":6},"end":{"line":465,"column":6}},{"start":{"line":465,"column":6},"end":{"line":465,"column":6}}]},"36":{"line":468,"type":"if","locations":[{"start":{"line":468,"column":11},"end":{"line":468,"column":11}},{"start":{"line":468,"column":11},"end":{"line":468,"column":11}}]},"37":{"line":476,"type":"cond-expr","locations":[{"start":{"line":476,"column":34},"end":{"line":476,"column":40}},{"start":{"line":476,"column":43},"end":{"line":476,"column":47}}]},"38":{"line":485,"type":"if","locations":[{"start":{"line":485,"column":8},"end":{"line":485,"column":8}},{"start":{"line":485,"column":8},"end":{"line":485,"column":8}}]},"39":{"line":492,"type":"if","locations":[{"start":{"line":492,"column":6},"end":{"line":492,"column":6}},{"start":{"line":492,"column":6},"end":{"line":492,"column":6}}]},"40":{"line":497,"type":"if","locations":[{"start":{"line":497,"column":6},"end":{"line":497,"column":6}},{"start":{"line":497,"column":6},"end":{"line":497,"column":6}}]},"41":{"line":502,"type":"if","locations":[{"start":{"line":502,"column":6},"end":{"line":502,"column":6}},{"start":{"line":502,"column":6},"end":{"line":502,"column":6}}]},"42":{"line":505,"type":"if","locations":[{"start":{"line":505,"column":6},"end":{"line":505,"column":6}},{"start":{"line":505,"column":6},"end":{"line":505,"column":6}}]},"43":{"line":521,"type":"if","locations":[{"start":{"line":521,"column":8},"end":{"line":521,"column":8}},{"start":{"line":521,"column":8},"end":{"line":521,"column":8}}]},"44":{"line":527,"type":"if","locations":[{"start":{"line":527,"column":6},"end":{"line":527,"column":6}},{"start":{"line":527,"column":6},"end":{"line":527,"column":6}}]},"45":{"line":530,"type":"if","locations":[{"start":{"line":530,"column":6},"end":{"line":530,"column":6}},{"start":{"line":530,"column":6},"end":{"line":530,"column":6}}]},"46":{"line":548,"type":"if","locations":[{"start":{"line":548,"column":8},"end":{"line":548,"column":8}},{"start":{"line":548,"column":8},"end":{"line":548,"column":8}}]},"47":{"line":554,"type":"if","locations":[{"start":{"line":554,"column":6},"end":{"line":554,"column":6}},{"start":{"line":554,"column":6},"end":{"line":554,"column":6}}]},"48":{"line":558,"type":"if","locations":[{"start":{"line":558,"column":6},"end":{"line":558,"column":6}},{"start":{"line":558,"column":6},"end":{"line":558,"column":6}}]},"49":{"line":572,"type":"if","locations":[{"start":{"line":572,"column":6},"end":{"line":572,"column":6}},{"start":{"line":572,"column":6},"end":{"line":572,"column":6}}]},"50":{"line":575,"type":"if","locations":[{"start":{"line":575,"column":10},"end":{"line":575,"column":10}},{"start":{"line":575,"column":10},"end":{"line":575,"column":10}}]},"51":{"line":582,"type":"if","locations":[{"start":{"line":582,"column":8},"end":{"line":582,"column":8}},{"start":{"line":582,"column":8},"end":{"line":582,"column":8}}]},"52":{"line":585,"type":"if","locations":[{"start":{"line":585,"column":8},"end":{"line":585,"column":8}},{"start":{"line":585,"column":8},"end":{"line":585,"column":8}}]},"53":{"line":597,"type":"if","locations":[{"start":{"line":597,"column":11},"end":{"line":597,"column":11}},{"start":{"line":597,"column":11},"end":{"line":597,"column":11}}]},"54":{"line":603,"type":"if","locations":[{"start":{"line":603,"column":6},"end":{"line":603,"column":6}},{"start":{"line":603,"column":6},"end":{"line":603,"column":6}}]},"55":{"line":605,"type":"if","locations":[{"start":{"line":605,"column":8},"end":{"line":605,"column":8}},{"start":{"line":605,"column":8},"end":{"line":605,"column":8}}]},"56":{"line":606,"type":"if","locations":[{"start":{"line":606,"column":8},"end":{"line":606,"column":8}},{"start":{"line":606,"column":8},"end":{"line":606,"column":8}}]},"57":{"line":607,"type":"if","locations":[{"start":{"line":607,"column":10},"end":{"line":607,"column":10}},{"start":{"line":607,"column":10},"end":{"line":607,"column":10}}]},"58":{"line":609,"type":"if","locations":[{"start":{"line":609,"column":12},"end":{"line":609,"column":12}},{"start":{"line":609,"column":12},"end":{"line":609,"column":12}}]},"59":{"line":627,"type":"if","locations":[{"start":{"line":627,"column":10},"end":{"line":627,"column":10}},{"start":{"line":627,"column":10},"end":{"line":627,"column":10}}]},"60":{"line":634,"type":"if","locations":[{"start":{"line":634,"column":8},"end":{"line":634,"column":8}},{"start":{"line":634,"column":8},"end":{"line":634,"column":8}}]},"61":{"line":640,"type":"if","locations":[{"start":{"line":640,"column":6},"end":{"line":640,"column":6}},{"start":{"line":640,"column":6},"end":{"line":640,"column":6}}]},"62":{"line":641,"type":"if","locations":[{"start":{"line":641,"column":8},"end":{"line":641,"column":8}},{"start":{"line":641,"column":8},"end":{"line":641,"column":8}}]},"63":{"line":647,"type":"if","locations":[{"start":{"line":647,"column":10},"end":{"line":647,"column":10}},{"start":{"line":647,"column":10},"end":{"line":647,"column":10}}]},"64":{"line":647,"type":"binary-expr","locations":[{"start":{"line":647,"column":14},"end":{"line":647,"column":24}},{"start":{"line":647,"column":28},"end":{"line":647,"column":31}},{"start":{"line":648,"column":15},"end":{"line":648,"column":35}}]},"65":{"line":651,"type":"binary-expr","locations":[{"start":{"line":651,"column":17},"end":{"line":651,"column":20}},{"start":{"line":651,"column":24},"end":{"line":651,"column":35}}]},"66":{"line":653,"type":"if","locations":[{"start":{"line":653,"column":8},"end":{"line":653,"column":8}},{"start":{"line":653,"column":8},"end":{"line":653,"column":8}}]},"67":{"line":658,"type":"if","locations":[{"start":{"line":658,"column":8},"end":{"line":658,"column":8}},{"start":{"line":658,"column":8},"end":{"line":658,"column":8}}]},"68":{"line":660,"type":"if","locations":[{"start":{"line":660,"column":11},"end":{"line":660,"column":11}},{"start":{"line":660,"column":11},"end":{"line":660,"column":11}}]},"69":{"line":667,"type":"if","locations":[{"start":{"line":667,"column":6},"end":{"line":667,"column":6}},{"start":{"line":667,"column":6},"end":{"line":667,"column":6}}]},"70":{"line":668,"type":"if","locations":[{"start":{"line":668,"column":8},"end":{"line":668,"column":8}},{"start":{"line":668,"column":8},"end":{"line":668,"column":8}}]},"71":{"line":673,"type":"if","locations":[{"start":{"line":673,"column":10},"end":{"line":673,"column":10}},{"start":{"line":673,"column":10},"end":{"line":673,"column":10}}]},"72":{"line":673,"type":"binary-expr","locations":[{"start":{"line":673,"column":14},"end":{"line":673,"column":24}},{"start":{"line":673,"column":28},"end":{"line":673,"column":31}},{"start":{"line":674,"column":15},"end":{"line":674,"column":35}}]},"73":{"line":677,"type":"binary-expr","locations":[{"start":{"line":677,"column":17},"end":{"line":677,"column":20}},{"start":{"line":677,"column":24},"end":{"line":677,"column":35}}]},"74":{"line":678,"type":"if","locations":[{"start":{"line":678,"column":8},"end":{"line":678,"column":8}},{"start":{"line":678,"column":8},"end":{"line":678,"column":8}}]},"75":{"line":683,"type":"if","locations":[{"start":{"line":683,"column":8},"end":{"line":683,"column":8}},{"start":{"line":683,"column":8},"end":{"line":683,"column":8}}]},"76":{"line":685,"type":"if","locations":[{"start":{"line":685,"column":11},"end":{"line":685,"column":11}},{"start":{"line":685,"column":11},"end":{"line":685,"column":11}}]},"77":{"line":691,"type":"if","locations":[{"start":{"line":691,"column":6},"end":{"line":691,"column":6}},{"start":{"line":691,"column":6},"end":{"line":691,"column":6}}]},"78":{"line":694,"type":"if","locations":[{"start":{"line":694,"column":10},"end":{"line":694,"column":10}},{"start":{"line":694,"column":10},"end":{"line":694,"column":10}}]},"79":{"line":700,"type":"if","locations":[{"start":{"line":700,"column":8},"end":{"line":700,"column":8}},{"start":{"line":700,"column":8},"end":{"line":700,"column":8}}]},"80":{"line":710,"type":"if","locations":[{"start":{"line":710,"column":6},"end":{"line":710,"column":6}},{"start":{"line":710,"column":6},"end":{"line":710,"column":6}}]},"81":{"line":720,"type":"if","locations":[{"start":{"line":720,"column":8},"end":{"line":720,"column":8}},{"start":{"line":720,"column":8},"end":{"line":720,"column":8}}]},"82":{"line":734,"type":"if","locations":[{"start":{"line":734,"column":6},"end":{"line":734,"column":6}},{"start":{"line":734,"column":6},"end":{"line":734,"column":6}}]},"83":{"line":749,"type":"if","locations":[{"start":{"line":749,"column":6},"end":{"line":749,"column":6}},{"start":{"line":749,"column":6},"end":{"line":749,"column":6}}]},"84":{"line":749,"type":"binary-expr","locations":[{"start":{"line":749,"column":10},"end":{"line":749,"column":27}},{"start":{"line":749,"column":31},"end":{"line":749,"column":48}}]},"85":{"line":752,"type":"if","locations":[{"start":{"line":752,"column":6},"end":{"line":752,"column":6}},{"start":{"line":752,"column":6},"end":{"line":752,"column":6}}]},"86":{"line":762,"type":"if","locations":[{"start":{"line":762,"column":8},"end":{"line":762,"column":8}},{"start":{"line":762,"column":8},"end":{"line":762,"column":8}}]},"87":{"line":774,"type":"switch","locations":[{"start":{"line":775,"column":6},"end":{"line":779,"column":14}},{"start":{"line":780,"column":6},"end":{"line":792,"column":14}},{"start":{"line":793,"column":6},"end":{"line":797,"column":14}},{"start":{"line":798,"column":6},"end":{"line":800,"column":25}}]},"88":{"line":785,"type":"if","locations":[{"start":{"line":785,"column":8},"end":{"line":785,"column":8}},{"start":{"line":785,"column":8},"end":{"line":785,"column":8}}]},"89":{"line":814,"type":"if","locations":[{"start":{"line":814,"column":8},"end":{"line":814,"column":8}},{"start":{"line":814,"column":8},"end":{"line":814,"column":8}}]},"90":{"line":820,"type":"if","locations":[{"start":{"line":820,"column":6},"end":{"line":820,"column":6}},{"start":{"line":820,"column":6},"end":{"line":820,"column":6}}]},"91":{"line":833,"type":"if","locations":[{"start":{"line":833,"column":6},"end":{"line":833,"column":6}},{"start":{"line":833,"column":6},"end":{"line":833,"column":6}}]},"92":{"line":840,"type":"if","locations":[{"start":{"line":840,"column":6},"end":{"line":840,"column":6}},{"start":{"line":840,"column":6},"end":{"line":840,"column":6}}]},"93":{"line":841,"type":"if","locations":[{"start":{"line":841,"column":8},"end":{"line":841,"column":8}},{"start":{"line":841,"column":8},"end":{"line":841,"column":8}}]},"94":{"line":842,"type":"if","locations":[{"start":{"line":842,"column":8},"end":{"line":842,"column":8}},{"start":{"line":842,"column":8},"end":{"line":842,"column":8}}]},"95":{"line":843,"type":"if","locations":[{"start":{"line":843,"column":8},"end":{"line":843,"column":8}},{"start":{"line":843,"column":8},"end":{"line":843,"column":8}}]},"96":{"line":860,"type":"if","locations":[{"start":{"line":860,"column":8},"end":{"line":860,"column":8}},{"start":{"line":860,"column":8},"end":{"line":860,"column":8}}]},"97":{"line":882,"type":"if","locations":[{"start":{"line":882,"column":6},"end":{"line":882,"column":6}},{"start":{"line":882,"column":6},"end":{"line":882,"column":6}}]},"98":{"line":882,"type":"binary-expr","locations":[{"start":{"line":882,"column":10},"end":{"line":882,"column":26}},{"start":{"line":882,"column":30},"end":{"line":882,"column":46}}]},"99":{"line":896,"type":"if","locations":[{"start":{"line":896,"column":10},"end":{"line":896,"column":10}},{"start":{"line":896,"column":10},"end":{"line":896,"column":10}}]},"100":{"line":922,"type":"if","locations":[{"start":{"line":922,"column":6},"end":{"line":922,"column":6}},{"start":{"line":922,"column":6},"end":{"line":922,"column":6}}]},"101":{"line":939,"type":"if","locations":[{"start":{"line":939,"column":10},"end":{"line":939,"column":10}},{"start":{"line":939,"column":10},"end":{"line":939,"column":10}}]},"102":{"line":941,"type":"if","locations":[{"start":{"line":941,"column":10},"end":{"line":941,"column":10}},{"start":{"line":941,"column":10},"end":{"line":941,"column":10}}]},"103":{"line":947,"type":"if","locations":[{"start":{"line":947,"column":8},"end":{"line":947,"column":8}},{"start":{"line":947,"column":8},"end":{"line":947,"column":8}}]},"104":{"line":955,"type":"if","locations":[{"start":{"line":955,"column":10},"end":{"line":955,"column":10}},{"start":{"line":955,"column":10},"end":{"line":955,"column":10}}]},"105":{"line":959,"type":"if","locations":[{"start":{"line":959,"column":14},"end":{"line":959,"column":14}},{"start":{"line":959,"column":14},"end":{"line":959,"column":14}}]},"106":{"line":969,"type":"if","locations":[{"start":{"line":969,"column":12},"end":{"line":969,"column":12}},{"start":{"line":969,"column":12},"end":{"line":969,"column":12}}]},"107":{"line":981,"type":"if","locations":[{"start":{"line":981,"column":15},"end":{"line":981,"column":15}},{"start":{"line":981,"column":15},"end":{"line":981,"column":15}}]},"108":{"line":985,"type":"if","locations":[{"start":{"line":985,"column":14},"end":{"line":985,"column":14}},{"start":{"line":985,"column":14},"end":{"line":985,"column":14}}]},"109":{"line":1006,"type":"if","locations":[{"start":{"line":1006,"column":14},"end":{"line":1006,"column":14}},{"start":{"line":1006,"column":14},"end":{"line":1006,"column":14}}]},"110":{"line":1023,"type":"if","locations":[{"start":{"line":1023,"column":10},"end":{"line":1023,"column":10}},{"start":{"line":1023,"column":10},"end":{"line":1023,"column":10}}]},"111":{"line":1035,"type":"if","locations":[{"start":{"line":1035,"column":6},"end":{"line":1035,"column":6}},{"start":{"line":1035,"column":6},"end":{"line":1035,"column":6}}]},"112":{"line":1038,"type":"if","locations":[{"start":{"line":1038,"column":6},"end":{"line":1038,"column":6}},{"start":{"line":1038,"column":6},"end":{"line":1038,"column":6}}]},"113":{"line":1056,"type":"if","locations":[{"start":{"line":1056,"column":6},"end":{"line":1056,"column":6}},{"start":{"line":1056,"column":6},"end":{"line":1056,"column":6}}]},"114":{"line":1073,"type":"if","locations":[{"start":{"line":1073,"column":6},"end":{"line":1073,"column":6}},{"start":{"line":1073,"column":6},"end":{"line":1073,"column":6}}]},"115":{"line":1080,"type":"if","locations":[{"start":{"line":1080,"column":6},"end":{"line":1080,"column":6}},{"start":{"line":1080,"column":6},"end":{"line":1080,"column":6}}]},"116":{"line":1086,"type":"if","locations":[{"start":{"line":1086,"column":6},"end":{"line":1086,"column":6}},{"start":{"line":1086,"column":6},"end":{"line":1086,"column":6}}]},"117":{"line":1086,"type":"binary-expr","locations":[{"start":{"line":1086,"column":10},"end":{"line":1086,"column":19}},{"start":{"line":1086,"column":23},"end":{"line":1086,"column":34}}]},"118":{"line":1107,"type":"if","locations":[{"start":{"line":1107,"column":8},"end":{"line":1107,"column":8}},{"start":{"line":1107,"column":8},"end":{"line":1107,"column":8}}]},"119":{"line":1119,"type":"if","locations":[{"start":{"line":1119,"column":8},"end":{"line":1119,"column":8}},{"start":{"line":1119,"column":8},"end":{"line":1119,"column":8}}]},"120":{"line":1121,"type":"if","locations":[{"start":{"line":1121,"column":8},"end":{"line":1121,"column":8}},{"start":{"line":1121,"column":8},"end":{"line":1121,"column":8}}]},"121":{"line":1127,"type":"if","locations":[{"start":{"line":1127,"column":6},"end":{"line":1127,"column":6}},{"start":{"line":1127,"column":6},"end":{"line":1127,"column":6}}]},"122":{"line":1127,"type":"binary-expr","locations":[{"start":{"line":1127,"column":10},"end":{"line":1127,"column":17}},{"start":{"line":1127,"column":21},"end":{"line":1127,"column":43}}]},"123":{"line":1138,"type":"if","locations":[{"start":{"line":1138,"column":10},"end":{"line":1138,"column":10}},{"start":{"line":1138,"column":10},"end":{"line":1138,"column":10}}]},"124":{"line":1140,"type":"if","locations":[{"start":{"line":1140,"column":10},"end":{"line":1140,"column":10}},{"start":{"line":1140,"column":10},"end":{"line":1140,"column":10}}]},"125":{"line":1158,"type":"if","locations":[{"start":{"line":1158,"column":6},"end":{"line":1158,"column":6}},{"start":{"line":1158,"column":6},"end":{"line":1158,"column":6}}]},"126":{"line":1165,"type":"if","locations":[{"start":{"line":1165,"column":6},"end":{"line":1165,"column":6}},{"start":{"line":1165,"column":6},"end":{"line":1165,"column":6}}]},"127":{"line":1171,"type":"if","locations":[{"start":{"line":1171,"column":6},"end":{"line":1171,"column":6}},{"start":{"line":1171,"column":6},"end":{"line":1171,"column":6}}]},"128":{"line":1180,"type":"if","locations":[{"start":{"line":1180,"column":6},"end":{"line":1180,"column":6}},{"start":{"line":1180,"column":6},"end":{"line":1180,"column":6}}]},"129":{"line":1184,"type":"if","locations":[{"start":{"line":1184,"column":10},"end":{"line":1184,"column":10}},{"start":{"line":1184,"column":10},"end":{"line":1184,"column":10}}]},"130":{"line":1208,"type":"if","locations":[{"start":{"line":1208,"column":8},"end":{"line":1208,"column":8}},{"start":{"line":1208,"column":8},"end":{"line":1208,"column":8}}]},"131":{"line":1210,"type":"if","locations":[{"start":{"line":1210,"column":8},"end":{"line":1210,"column":8}},{"start":{"line":1210,"column":8},"end":{"line":1210,"column":8}}]},"132":{"line":1216,"type":"if","locations":[{"start":{"line":1216,"column":6},"end":{"line":1216,"column":6}},{"start":{"line":1216,"column":6},"end":{"line":1216,"column":6}}]},"133":{"line":1227,"type":"if","locations":[{"start":{"line":1227,"column":10},"end":{"line":1227,"column":10}},{"start":{"line":1227,"column":10},"end":{"line":1227,"column":10}}]},"134":{"line":1229,"type":"if","locations":[{"start":{"line":1229,"column":10},"end":{"line":1229,"column":10}},{"start":{"line":1229,"column":10},"end":{"line":1229,"column":10}}]},"135":{"line":1246,"type":"if","locations":[{"start":{"line":1246,"column":6},"end":{"line":1246,"column":6}},{"start":{"line":1246,"column":6},"end":{"line":1246,"column":6}}]},"136":{"line":1256,"type":"if","locations":[{"start":{"line":1256,"column":6},"end":{"line":1256,"column":6}},{"start":{"line":1256,"column":6},"end":{"line":1256,"column":6}}]},"137":{"line":1260,"type":"if","locations":[{"start":{"line":1260,"column":10},"end":{"line":1260,"column":10}},{"start":{"line":1260,"column":10},"end":{"line":1260,"column":10}}]},"138":{"line":1274,"type":"if","locations":[{"start":{"line":1274,"column":6},"end":{"line":1274,"column":6}},{"start":{"line":1274,"column":6},"end":{"line":1274,"column":6}}]},"139":{"line":1284,"type":"if","locations":[{"start":{"line":1284,"column":6},"end":{"line":1284,"column":6}},{"start":{"line":1284,"column":6},"end":{"line":1284,"column":6}}]},"140":{"line":1286,"type":"if","locations":[{"start":{"line":1286,"column":6},"end":{"line":1286,"column":6}},{"start":{"line":1286,"column":6},"end":{"line":1286,"column":6}}]},"141":{"line":1288,"type":"if","locations":[{"start":{"line":1288,"column":8},"end":{"line":1288,"column":8}},{"start":{"line":1288,"column":8},"end":{"line":1288,"column":8}}]},"142":{"line":1289,"type":"if","locations":[{"start":{"line":1289,"column":10},"end":{"line":1289,"column":10}},{"start":{"line":1289,"column":10},"end":{"line":1289,"column":10}}]},"143":{"line":1310,"type":"if","locations":[{"start":{"line":1310,"column":8},"end":{"line":1310,"column":8}},{"start":{"line":1310,"column":8},"end":{"line":1310,"column":8}}]},"144":{"line":1317,"type":"if","locations":[{"start":{"line":1317,"column":8},"end":{"line":1317,"column":8}},{"start":{"line":1317,"column":8},"end":{"line":1317,"column":8}}]},"145":{"line":1325,"type":"if","locations":[{"start":{"line":1325,"column":6},"end":{"line":1325,"column":6}},{"start":{"line":1325,"column":6},"end":{"line":1325,"column":6}}]},"146":{"line":1331,"type":"if","locations":[{"start":{"line":1331,"column":6},"end":{"line":1331,"column":6}},{"start":{"line":1331,"column":6},"end":{"line":1331,"column":6}}]},"147":{"line":1334,"type":"if","locations":[{"start":{"line":1334,"column":6},"end":{"line":1334,"column":6}},{"start":{"line":1334,"column":6},"end":{"line":1334,"column":6}}]},"148":{"line":1340,"type":"if","locations":[{"start":{"line":1340,"column":6},"end":{"line":1340,"column":6}},{"start":{"line":1340,"column":6},"end":{"line":1340,"column":6}}]},"149":{"line":1343,"type":"if","locations":[{"start":{"line":1343,"column":10},"end":{"line":1343,"column":10}},{"start":{"line":1343,"column":10},"end":{"line":1343,"column":10}}]},"150":{"line":1353,"type":"if","locations":[{"start":{"line":1353,"column":8},"end":{"line":1353,"column":8}},{"start":{"line":1353,"column":8},"end":{"line":1353,"column":8}}]},"151":{"line":1356,"type":"cond-expr","locations":[{"start":{"line":1356,"column":29},"end":{"line":1356,"column":73}},{"start":{"line":1356,"column":76},"end":{"line":1356,"column":122}}]},"152":{"line":1361,"type":"if","locations":[{"start":{"line":1361,"column":8},"end":{"line":1361,"column":8}},{"start":{"line":1361,"column":8},"end":{"line":1361,"column":8}}]},"153":{"line":1361,"type":"cond-expr","locations":[{"start":{"line":1361,"column":27},"end":{"line":1361,"column":31}},{"start":{"line":1361,"column":34},"end":{"line":1361,"column":47}}]},"154":{"line":1375,"type":"if","locations":[{"start":{"line":1375,"column":6},"end":{"line":1375,"column":6}},{"start":{"line":1375,"column":6},"end":{"line":1375,"column":6}}]},"155":{"line":1375,"type":"binary-expr","locations":[{"start":{"line":1375,"column":10},"end":{"line":1375,"column":20}},{"start":{"line":1375,"column":24},"end":{"line":1375,"column":35}}]},"156":{"line":1378,"type":"if","locations":[{"start":{"line":1378,"column":10},"end":{"line":1378,"column":10}},{"start":{"line":1378,"column":10},"end":{"line":1378,"column":10}}]},"157":{"line":1384,"type":"if","locations":[{"start":{"line":1384,"column":8},"end":{"line":1384,"column":8}},{"start":{"line":1384,"column":8},"end":{"line":1384,"column":8}}]},"158":{"line":1430,"type":"if","locations":[{"start":{"line":1430,"column":2},"end":{"line":1430,"column":2}},{"start":{"line":1430,"column":2},"end":{"line":1430,"column":2}}]},"159":{"line":1430,"type":"binary-expr","locations":[{"start":{"line":1430,"column":6},"end":{"line":1430,"column":17}},{"start":{"line":1430,"column":22},"end":{"line":1430,"column":45}},{"start":{"line":1430,"column":49},"end":{"line":1430,"column":65}},{"start":{"line":1431,"column":23},"end":{"line":1431,"column":41}},{"start":{"line":1431,"column":45},"end":{"line":1431,"column":63}}]},"160":{"line":1432,"type":"if","locations":[{"start":{"line":1432,"column":4},"end":{"line":1432,"column":4}},{"start":{"line":1432,"column":4},"end":{"line":1432,"column":4}}]},"161":{"line":1442,"type":"if","locations":[{"start":{"line":1442,"column":2},"end":{"line":1442,"column":2}},{"start":{"line":1442,"column":2},"end":{"line":1442,"column":2}}]},"162":{"line":1442,"type":"binary-expr","locations":[{"start":{"line":1442,"column":6},"end":{"line":1442,"column":16}},{"start":{"line":1442,"column":20},"end":{"line":1442,"column":24}}]},"163":{"line":1444,"type":"cond-expr","locations":[{"start":{"line":1444,"column":21},"end":{"line":1444,"column":75}},{"start":{"line":1444,"column":78},"end":{"line":1444,"column":134}}]},"164":{"line":1446,"type":"cond-expr","locations":[{"start":{"line":1446,"column":46},"end":{"line":1446,"column":48}},{"start":{"line":1446,"column":51},"end":{"line":1446,"column":52}}]},"165":{"line":1447,"type":"cond-expr","locations":[{"start":{"line":1447,"column":43},"end":{"line":1447,"column":46}},{"start":{"line":1447,"column":49},"end":{"line":1447,"column":50}}]},"166":{"line":1448,"type":"cond-expr","locations":[{"start":{"line":1448,"column":67},"end":{"line":1448,"column":70}},{"start":{"line":1448,"column":73},"end":{"line":1448,"column":74}}]},"167":{"line":1448,"type":"binary-expr","locations":[{"start":{"line":1448,"column":21},"end":{"line":1448,"column":40}},{"start":{"line":1448,"column":44},"end":{"line":1448,"column":64}}]},"168":{"line":1449,"type":"if","locations":[{"start":{"line":1449,"column":2},"end":{"line":1449,"column":2}},{"start":{"line":1449,"column":2},"end":{"line":1449,"column":2}}]},"169":{"line":1449,"type":"binary-expr","locations":[{"start":{"line":1449,"column":8},"end":{"line":1449,"column":17}},{"start":{"line":1449,"column":21},"end":{"line":1449,"column":31}},{"start":{"line":1449,"column":36},"end":{"line":1449,"column":54}},{"start":{"line":1449,"column":59},"end":{"line":1449,"column":71}}]},"170":{"line":1457,"type":"if","locations":[{"start":{"line":1457,"column":2},"end":{"line":1457,"column":2}},{"start":{"line":1457,"column":2},"end":{"line":1457,"column":2}}]},"171":{"line":1457,"type":"binary-expr","locations":[{"start":{"line":1457,"column":6},"end":{"line":1457,"column":11}},{"start":{"line":1457,"column":15},"end":{"line":1457,"column":26}}]},"172":{"line":1462,"type":"if","locations":[{"start":{"line":1462,"column":2},"end":{"line":1462,"column":2}},{"start":{"line":1462,"column":2},"end":{"line":1462,"column":2}}]},"173":{"line":1473,"type":"if","locations":[{"start":{"line":1473,"column":2},"end":{"line":1473,"column":2}},{"start":{"line":1473,"column":2},"end":{"line":1473,"column":2}}]},"174":{"line":1473,"type":"binary-expr","locations":[{"start":{"line":1473,"column":6},"end":{"line":1473,"column":11}},{"start":{"line":1473,"column":15},"end":{"line":1473,"column":26}}]},"175":{"line":1475,"type":"if","locations":[{"start":{"line":1475,"column":2},"end":{"line":1475,"column":2}},{"start":{"line":1475,"column":2},"end":{"line":1475,"column":2}}]}},"code":["'use strict';","","","var utils = require('../utils/common');","var adler32 = require('./adler32');","var crc32   = require('./crc32');","var inflate_fast = require('./inffast');","var inflate_table = require('./inftrees');","","var CODES = 0;","var LENS = 1;","var DISTS = 2;","","/* Public constants ==========================================================*/","/* ===========================================================================*/","","","/* Allowed flush values; see deflate() and inflate() below for details */","//var Z_NO_FLUSH      = 0;","//var Z_PARTIAL_FLUSH = 1;","//var Z_SYNC_FLUSH    = 2;","//var Z_FULL_FLUSH    = 3;","var Z_FINISH        = 4;","var Z_BLOCK         = 5;","var Z_TREES         = 6;","","","/* Return codes for the compression/decompression functions. Negative values"," * are errors, positive values are used for special but normal events."," */","var Z_OK            = 0;","var Z_STREAM_END    = 1;","var Z_NEED_DICT     = 2;","//var Z_ERRNO         = -1;","var Z_STREAM_ERROR  = -2;","var Z_DATA_ERROR    = -3;","var Z_MEM_ERROR     = -4;","var Z_BUF_ERROR     = -5;","//var Z_VERSION_ERROR = -6;","","/* The deflate compression method */","var Z_DEFLATED  = 8;","","","/* STATES ====================================================================*/","/* ===========================================================================*/","","","var    HEAD = 1;       /* i: waiting for magic header */","var    FLAGS = 2;      /* i: waiting for method and flags (gzip) */","var    TIME = 3;       /* i: waiting for modification time (gzip) */","var    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */","var    EXLEN = 5;      /* i: waiting for extra length (gzip) */","var    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */","var    NAME = 7;       /* i: waiting for end of file name (gzip) */","var    COMMENT = 8;    /* i: waiting for end of comment (gzip) */","var    HCRC = 9;       /* i: waiting for header crc (gzip) */","var    DICTID = 10;    /* i: waiting for dictionary check value */","var    DICT = 11;      /* waiting for inflateSetDictionary() call */","var        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */","var        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */","var        STORED = 14;    /* i: waiting for stored size (length and complement) */","var        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */","var        COPY = 16;      /* i/o: waiting for input or output to copy stored block */","var        TABLE = 17;     /* i: waiting for dynamic block table lengths */","var        LENLENS = 18;   /* i: waiting for code length code lengths */","var        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */","var            LEN_ = 20;      /* i: same as LEN below, but only first time in */","var            LEN = 21;       /* i: waiting for length/lit/eob code */","var            LENEXT = 22;    /* i: waiting for length extra bits */","var            DIST = 23;      /* i: waiting for distance code */","var            DISTEXT = 24;   /* i: waiting for distance extra bits */","var            MATCH = 25;     /* o: waiting for output space to copy string */","var            LIT = 26;       /* o: waiting for output space to write literal */","var    CHECK = 27;     /* i: waiting for 32-bit check value */","var    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */","var    DONE = 29;      /* finished check, done -- remain here until reset */","var    BAD = 30;       /* got a data error -- remain here until reset */","var    MEM = 31;       /* got an inflate() memory error -- remain here until reset */","var    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */","","/* ===========================================================================*/","","","","var ENOUGH_LENS = 852;","var ENOUGH_DISTS = 592;","//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);","","var MAX_WBITS = 15;","/* 32K LZ77 window */","var DEF_WBITS = MAX_WBITS;","","","function ZSWAP32(q) {","  return  (((q >>> 24) & 0xff) +","          ((q >>> 8) & 0xff00) +","          ((q & 0xff00) << 8) +","          ((q & 0xff) << 24));","}","","","function InflateState() {","  this.mode = 0;             /* current inflate mode */","  this.last = false;          /* true if processing last block */","  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */","  this.havedict = false;      /* true if dictionary provided */","  this.flags = 0;             /* gzip header method and flags (0 if zlib) */","  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */","  this.check = 0;             /* protected copy of check value */","  this.total = 0;             /* protected copy of output count */","  // TODO: may be {}","  this.head = null;           /* where to save gzip header information */","","  /* sliding window */","  this.wbits = 0;             /* log base 2 of requested window size */","  this.wsize = 0;             /* window size or zero if not using window */","  this.whave = 0;             /* valid bytes in the window */","  this.wnext = 0;             /* window write index */","  this.window = null;         /* allocated sliding window, if needed */","","  /* bit accumulator */","  this.hold = 0;              /* input bit accumulator */","  this.bits = 0;              /* number of bits in \"in\" */","","  /* for string and stored block copying */","  this.length = 0;            /* literal or length of data to copy */","  this.offset = 0;            /* distance back to copy string from */","","  /* for table and code decoding */","  this.extra = 0;             /* extra bits needed */","","  /* fixed and dynamic code tables */","  this.lencode = null;          /* starting table for length/literal codes */","  this.distcode = null;         /* starting table for distance codes */","  this.lenbits = 0;           /* index bits for lencode */","  this.distbits = 0;          /* index bits for distcode */","","  /* dynamic table building */","  this.ncode = 0;             /* number of code length code lengths */","  this.nlen = 0;              /* number of length code lengths */","  this.ndist = 0;             /* number of distance code lengths */","  this.have = 0;              /* number of code lengths in lens[] */","  this.next = null;              /* next available space in codes[] */","","  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */","  this.work = new utils.Buf16(288); /* work area for code table building */","","  /*","   because we don't have pointers in js, we use lencode and distcode directly","   as buffers so we don't need codes","  */","  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */","  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */","  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */","  this.sane = 0;                   /* if false, allow invalid distance too far */","  this.back = 0;                   /* bits back of last unprocessed length/lit */","  this.was = 0;                    /* initial length of match */","}","","function inflateResetKeep(strm) {","  var state;","","  if (!strm || !strm.state) { return Z_STREAM_ERROR; }","  state = strm.state;","  strm.total_in = strm.total_out = state.total = 0;","  strm.msg = ''; /*Z_NULL*/","  if (state.wrap) {       /* to support ill-conceived Java test suite */","    strm.adler = state.wrap & 1;","  }","  state.mode = HEAD;","  state.last = 0;","  state.havedict = 0;","  state.dmax = 32768;","  state.head = null/*Z_NULL*/;","  state.hold = 0;","  state.bits = 0;","  //state.lencode = state.distcode = state.next = state.codes;","  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);","  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);","","  state.sane = 1;","  state.back = -1;","  //Tracev((stderr, \"inflate: reset\\n\"));","  return Z_OK;","}","","function inflateReset(strm) {","  var state;","","  if (!strm || !strm.state) { return Z_STREAM_ERROR; }","  state = strm.state;","  state.wsize = 0;","  state.whave = 0;","  state.wnext = 0;","  return inflateResetKeep(strm);","","}","","function inflateReset2(strm, windowBits) {","  var wrap;","  var state;","","  /* get the state */","  if (!strm || !strm.state) { return Z_STREAM_ERROR; }","  state = strm.state;","","  /* extract wrap request from windowBits parameter */","  if (windowBits < 0) {","    wrap = 0;","    windowBits = -windowBits;","  }","  else {","    wrap = (windowBits >> 4) + 1;","    if (windowBits < 48) {","      windowBits &= 15;","    }","  }","","  /* set number of window bits, free window if different */","  if (windowBits && (windowBits < 8 || windowBits > 15)) {","    return Z_STREAM_ERROR;","  }","  if (state.window !== null && state.wbits !== windowBits) {","    state.window = null;","  }","","  /* update state and reset the rest of it */","  state.wrap = wrap;","  state.wbits = windowBits;","  return inflateReset(strm);","}","","function inflateInit2(strm, windowBits) {","  var ret;","  var state;","","  if (!strm) { return Z_STREAM_ERROR; }","  //strm.msg = Z_NULL;                 /* in case we return an error */","","  state = new InflateState();","","  //if (state === Z_NULL) return Z_MEM_ERROR;","  //Tracev((stderr, \"inflate: allocated\\n\"));","  strm.state = state;","  state.window = null/*Z_NULL*/;","  ret = inflateReset2(strm, windowBits);","  if (ret !== Z_OK) {","    strm.state = null/*Z_NULL*/;","  }","  return ret;","}","","function inflateInit(strm) {","  return inflateInit2(strm, DEF_WBITS);","}","","","/*"," Return state with length and distance decoding tables and index sizes set to"," fixed code decoding.  Normally this returns fixed tables from inffixed.h."," If BUILDFIXED is defined, then instead this routine builds the tables the"," first time it's called, and returns those tables the first time and"," thereafter.  This reduces the size of the code by about 2K bytes, in"," exchange for a little execution time.  However, BUILDFIXED should not be"," used for threaded applications, since the rewriting of the tables and virgin"," may not be thread-safe."," */","var virgin = true;","","var lenfix, distfix; // We have no pointers in JS, so keep tables separate","","function fixedtables(state) {","  /* build fixed huffman tables if first call (may not be thread safe) */","  if (virgin) {","    var sym;","","    lenfix = new utils.Buf32(512);","    distfix = new utils.Buf32(32);","","    /* literal/length table */","    sym = 0;","    while (sym < 144) { state.lens[sym++] = 8; }","    while (sym < 256) { state.lens[sym++] = 9; }","    while (sym < 280) { state.lens[sym++] = 7; }","    while (sym < 288) { state.lens[sym++] = 8; }","","    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, {bits: 9});","","    /* distance table */","    sym = 0;","    while (sym < 32) { state.lens[sym++] = 5; }","","    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, {bits: 5});","","    /* do this just once */","    virgin = false;","  }","","  state.lencode = lenfix;","  state.lenbits = 9;","  state.distcode = distfix;","  state.distbits = 5;","}","","","/*"," Update the window with the last wsize (normally 32K) bytes written before"," returning.  If window does not exist yet, create it.  This is only called"," when a window is already in use, or when output has been written during this"," inflate call, but the end of the deflate stream has not been reached yet."," It is also called to create a window for dictionary data when a dictionary"," is loaded.",""," Providing output buffers larger than 32K to inflate() should provide a speed"," advantage, since only the last 32K of output is copied to the sliding window"," upon return from inflate(), and since all distances after the first 32K of"," output will fall in the output data, making match copies simpler and faster."," The advantage may be dependent on the size of the processor's data caches."," */","function updatewindow(strm, src, end, copy) {","  var dist;","  var state = strm.state;","","  /* if it hasn't been done already, allocate space for the window */","  if (state.window === null) {","    state.wsize = 1 << state.wbits;","    state.wnext = 0;","    state.whave = 0;","","    state.window = new utils.Buf8(state.wsize);","  }","","  /* copy state->wsize or less output bytes into the circular window */","  if (copy >= state.wsize) {","    utils.arraySet(state.window,src, end - state.wsize, state.wsize, 0);","    state.wnext = 0;","    state.whave = state.wsize;","  }","  else {","    dist = state.wsize - state.wnext;","    if (dist > copy) {","      dist = copy;","    }","    //zmemcpy(state->window + state->wnext, end - copy, dist);","    utils.arraySet(state.window,src, end - copy, dist, state.wnext);","    copy -= dist;","    if (copy) {","      //zmemcpy(state->window, end - copy, copy);","      utils.arraySet(state.window,src, end - copy, copy, 0);","      state.wnext = copy;","      state.whave = state.wsize;","    }","    else {","      state.wnext += dist;","      if (state.wnext === state.wsize) { state.wnext = 0; }","      if (state.whave < state.wsize) { state.whave += dist; }","    }","  }","  return 0;","}","","function inflate(strm, flush) {","  var state;","  var input, output;          // input/output buffers","  var next;                   /* next input INDEX */","  var put;                    /* next output INDEX */","  var have, left;             /* available input and output */","  var hold;                   /* bit buffer */","  var bits;                   /* bits in bit buffer */","  var _in, _out;              /* save starting available input and output */","  var copy;                   /* number of stored or match bytes to copy */","  var from;                   /* where to copy match bytes from */","  var from_source;","  var here = 0;               /* current decoding table entry */","  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)","  //var last;                   /* parent table entry */","  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)","  var len;                    /* length to copy for repeats, bits to drop */","  var ret;                    /* return code */","  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */","  var opts;","","  var n; // temporary var for NEED_BITS","","  var order = /* permutation of code lengths */","    [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];","","","  if (!strm || !strm.state || !strm.output ||","      (!strm.input && strm.avail_in !== 0)) {","    return Z_STREAM_ERROR;","  }","","  state = strm.state;","  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */","","","  //--- LOAD() ---","  put = strm.next_out;","  output = strm.output;","  left = strm.avail_out;","  next = strm.next_in;","  input = strm.input;","  have = strm.avail_in;","  hold = state.hold;","  bits = state.bits;","  //---","","  _in = have;","  _out = left;","  ret = Z_OK;","","  inf_leave: // goto emulation","  for (;;) {","    switch (state.mode) {","    case HEAD:","      if (state.wrap === 0) {","        state.mode = TYPEDO;","        break;","      }","      //=== NEEDBITS(16);","      while (bits < 16) {","        if (have === 0) { break inf_leave; }","        have--;","        hold += input[next++] << bits;","        bits += 8;","      }","      //===//","      if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */","        state.check = 0/*crc32(0L, Z_NULL, 0)*/;","        //=== CRC2(state.check, hold);","        hbuf[0] = hold & 0xff;","        hbuf[1] = (hold >>> 8) & 0xff;","        state.check = crc32(state.check, hbuf, 2, 0);","        //===//","","        //=== INITBITS();","        hold = 0;","        bits = 0;","        //===//","        state.mode = FLAGS;","        break;","      }","      state.flags = 0;           /* expect zlib header */","      if (state.head) {","        state.head.done = false;","      }","      if (!(state.wrap & 1) ||   /* check if zlib header allowed */","        (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {","        strm.msg = 'incorrect header check';","        state.mode = BAD;","        break;","      }","      if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {","        strm.msg = 'unknown compression method';","        state.mode = BAD;","        break;","      }","      //--- DROPBITS(4) ---//","      hold >>>= 4;","      bits -= 4;","      //---//","      len = (hold & 0x0f)/*BITS(4)*/ + 8;","      if (state.wbits === 0) {","        state.wbits = len;","      }","      else if (len > state.wbits) {","        strm.msg = 'invalid window size';","        state.mode = BAD;","        break;","      }","      state.dmax = 1 << len;","      //Tracev((stderr, \"inflate:   zlib header ok\\n\"));","      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;","      state.mode = hold & 0x200 ? DICTID : TYPE;","      //=== INITBITS();","      hold = 0;","      bits = 0;","      //===//","      break;","    case FLAGS:","      //=== NEEDBITS(16); */","      while (bits < 16) {","        if (have === 0) { break inf_leave; }","        have--;","        hold += input[next++] << bits;","        bits += 8;","      }","      //===//","      state.flags = hold;","      if ((state.flags & 0xff) !== Z_DEFLATED) {","        strm.msg = 'unknown compression method';","        state.mode = BAD;","        break;","      }","      if (state.flags & 0xe000) {","        strm.msg = 'unknown header flags set';","        state.mode = BAD;","        break;","      }","      if (state.head) {","        state.head.text = ((hold >> 8) & 1);","      }","      if (state.flags & 0x0200) {","        //=== CRC2(state.check, hold);","        hbuf[0] = hold & 0xff;","        hbuf[1] = (hold >>> 8) & 0xff;","        state.check = crc32(state.check, hbuf, 2, 0);","        //===//","      }","      //=== INITBITS();","      hold = 0;","      bits = 0;","      //===//","      state.mode = TIME;","      /* falls through */","    case TIME:","      //=== NEEDBITS(32); */","      while (bits < 32) {","        if (have === 0) { break inf_leave; }","        have--;","        hold += input[next++] << bits;","        bits += 8;","      }","      //===//","      if (state.head) {","        state.head.time = hold;","      }","      if (state.flags & 0x0200) {","        //=== CRC4(state.check, hold)","        hbuf[0] = hold & 0xff;","        hbuf[1] = (hold >>> 8) & 0xff;","        hbuf[2] = (hold >>> 16) & 0xff;","        hbuf[3] = (hold >>> 24) & 0xff;","        state.check = crc32(state.check, hbuf, 4, 0);","        //===","      }","      //=== INITBITS();","      hold = 0;","      bits = 0;","      //===//","      state.mode = OS;","      /* falls through */","    case OS:","      //=== NEEDBITS(16); */","      while (bits < 16) {","        if (have === 0) { break inf_leave; }","        have--;","        hold += input[next++] << bits;","        bits += 8;","      }","      //===//","      if (state.head) {","        state.head.xflags = (hold & 0xff);","        state.head.os = (hold >> 8);","      }","      if (state.flags & 0x0200) {","        //=== CRC2(state.check, hold);","        hbuf[0] = hold & 0xff;","        hbuf[1] = (hold >>> 8) & 0xff;","        state.check = crc32(state.check, hbuf, 2, 0);","        //===//","      }","      //=== INITBITS();","      hold = 0;","      bits = 0;","      //===//","      state.mode = EXLEN;","      /* falls through */","    case EXLEN:","      if (state.flags & 0x0400) {","        //=== NEEDBITS(16); */","        while (bits < 16) {","          if (have === 0) { break inf_leave; }","          have--;","          hold += input[next++] << bits;","          bits += 8;","        }","        //===//","        state.length = hold;","        if (state.head) {","          state.head.extra_len = hold;","        }","        if (state.flags & 0x0200) {","          //=== CRC2(state.check, hold);","          hbuf[0] = hold & 0xff;","          hbuf[1] = (hold >>> 8) & 0xff;","          state.check = crc32(state.check, hbuf, 2, 0);","          //===//","        }","        //=== INITBITS();","        hold = 0;","        bits = 0;","        //===//","      }","      else if (state.head) {","        state.head.extra = null/*Z_NULL*/;","      }","      state.mode = EXTRA;","      /* falls through */","    case EXTRA:","      if (state.flags & 0x0400) {","        copy = state.length;","        if (copy > have) { copy = have; }","        if (copy) {","          if (state.head) {","            len = state.head.extra_len - state.length;","            if (!state.head.extra) {","              // Use untyped array for more conveniend processing later","              state.head.extra = new Array(state.head.extra_len);","            }","            utils.arraySet(","              state.head.extra,","              input,","              next,","              // extra field is limited to 65536 bytes","              // - no need for additional size check","              copy,","              /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/","              len","            );","            //zmemcpy(state.head.extra + len, next,","            //        len + copy > state.head.extra_max ?","            //        state.head.extra_max - len : copy);","          }","          if (state.flags & 0x0200) {","            state.check = crc32(state.check, input, copy, next);","          }","          have -= copy;","          next += copy;","          state.length -= copy;","        }","        if (state.length) { break inf_leave; }","      }","      state.length = 0;","      state.mode = NAME;","      /* falls through */","    case NAME:","      if (state.flags & 0x0800) {","        if (have === 0) { break inf_leave; }","        copy = 0;","        do {","          // TODO: 2 or 1 bytes?","          len = input[next + copy++];","          /* use constant limit because in js we should not preallocate memory */","          if (state.head && len &&","              (state.length < 65536 /*state.head.name_max*/)) {","            state.head.name += String.fromCharCode(len);","          }","        } while (len && copy < have);","","        if (state.flags & 0x0200) {","          state.check = crc32(state.check, input, copy, next);","        }","        have -= copy;","        next += copy;","        if (len) { break inf_leave; }","      }","      else if (state.head) {","        state.head.name = null;","      }","      state.length = 0;","      state.mode = COMMENT;","      /* falls through */","    case COMMENT:","      if (state.flags & 0x1000) {","        if (have === 0) { break inf_leave; }","        copy = 0;","        do {","          len = input[next + copy++];","          /* use constant limit because in js we should not preallocate memory */","          if (state.head && len &&","              (state.length < 65536 /*state.head.comm_max*/)) {","            state.head.comment += String.fromCharCode(len);","          }","        } while (len && copy < have);","        if (state.flags & 0x0200) {","          state.check = crc32(state.check, input, copy, next);","        }","        have -= copy;","        next += copy;","        if (len) { break inf_leave; }","      }","      else if (state.head) {","        state.head.comment = null;","      }","      state.mode = HCRC;","      /* falls through */","    case HCRC:","      if (state.flags & 0x0200) {","        //=== NEEDBITS(16); */","        while (bits < 16) {","          if (have === 0) { break inf_leave; }","          have--;","          hold += input[next++] << bits;","          bits += 8;","        }","        //===//","        if (hold !== (state.check & 0xffff)) {","          strm.msg = 'header crc mismatch';","          state.mode = BAD;","          break;","        }","        //=== INITBITS();","        hold = 0;","        bits = 0;","        //===//","      }","      if (state.head) {","        state.head.hcrc = ((state.flags >> 9) & 1);","        state.head.done = true;","      }","      strm.adler = state.check = 0 /*crc32(0L, Z_NULL, 0)*/;","      state.mode = TYPE;","      break;","    case DICTID:","      //=== NEEDBITS(32); */","      while (bits < 32) {","        if (have === 0) { break inf_leave; }","        have--;","        hold += input[next++] << bits;","        bits += 8;","      }","      //===//","      strm.adler = state.check = ZSWAP32(hold);","      //=== INITBITS();","      hold = 0;","      bits = 0;","      //===//","      state.mode = DICT;","      /* falls through */","    case DICT:","      if (state.havedict === 0) {","        //--- RESTORE() ---","        strm.next_out = put;","        strm.avail_out = left;","        strm.next_in = next;","        strm.avail_in = have;","        state.hold = hold;","        state.bits = bits;","        //---","        return Z_NEED_DICT;","      }","      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;","      state.mode = TYPE;","      /* falls through */","    case TYPE:","      if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }","      /* falls through */","    case TYPEDO:","      if (state.last) {","        //--- BYTEBITS() ---//","        hold >>>= bits & 7;","        bits -= bits & 7;","        //---//","        state.mode = CHECK;","        break;","      }","      //=== NEEDBITS(3); */","      while (bits < 3) {","        if (have === 0) { break inf_leave; }","        have--;","        hold += input[next++] << bits;","        bits += 8;","      }","      //===//","      state.last = (hold & 0x01)/*BITS(1)*/;","      //--- DROPBITS(1) ---//","      hold >>>= 1;","      bits -= 1;","      //---//","","      switch ((hold & 0x03)/*BITS(2)*/) {","      case 0:                             /* stored block */","        //Tracev((stderr, \"inflate:     stored block%s\\n\",","        //        state.last ? \" (last)\" : \"\"));","        state.mode = STORED;","        break;","      case 1:                             /* fixed block */","        fixedtables(state);","        //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",","        //        state.last ? \" (last)\" : \"\"));","        state.mode = LEN_;             /* decode codes */","        if (flush === Z_TREES) {","          //--- DROPBITS(2) ---//","          hold >>>= 2;","          bits -= 2;","          //---//","          break inf_leave;","        }","        break;","      case 2:                             /* dynamic block */","        //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",","        //        state.last ? \" (last)\" : \"\"));","        state.mode = TABLE;","        break;","      case 3:","        strm.msg = 'invalid block type';","        state.mode = BAD;","      }","      //--- DROPBITS(2) ---//","      hold >>>= 2;","      bits -= 2;","      //---//","      break;","    case STORED:","      //--- BYTEBITS() ---// /* go to byte boundary */","      hold >>>= bits & 7;","      bits -= bits & 7;","      //---//","      //=== NEEDBITS(32); */","      while (bits < 32) {","        if (have === 0) { break inf_leave; }","        have--;","        hold += input[next++] << bits;","        bits += 8;","      }","      //===//","      if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {","        strm.msg = 'invalid stored block lengths';","        state.mode = BAD;","        break;","      }","      state.length = hold & 0xffff;","      //Tracev((stderr, \"inflate:       stored length %u\\n\",","      //        state.length));","      //=== INITBITS();","      hold = 0;","      bits = 0;","      //===//","      state.mode = COPY_;","      if (flush === Z_TREES) { break inf_leave; }","      /* falls through */","    case COPY_:","      state.mode = COPY;","      /* falls through */","    case COPY:","      copy = state.length;","      if (copy) {","        if (copy > have) { copy = have; }","        if (copy > left) { copy = left; }","        if (copy === 0) { break inf_leave; }","        //--- zmemcpy(put, next, copy); ---","        utils.arraySet(output, input, next, copy, put);","        //---//","        have -= copy;","        next += copy;","        left -= copy;","        put += copy;","        state.length -= copy;","        break;","      }","      //Tracev((stderr, \"inflate:       stored end\\n\"));","      state.mode = TYPE;","      break;","    case TABLE:","      //=== NEEDBITS(14); */","      while (bits < 14) {","        if (have === 0) { break inf_leave; }","        have--;","        hold += input[next++] << bits;","        bits += 8;","      }","      //===//","      state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;","      //--- DROPBITS(5) ---//","      hold >>>= 5;","      bits -= 5;","      //---//","      state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;","      //--- DROPBITS(5) ---//","      hold >>>= 5;","      bits -= 5;","      //---//","      state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;","      //--- DROPBITS(4) ---//","      hold >>>= 4;","      bits -= 4;","      //---//","//#ifndef PKZIP_BUG_WORKAROUND","      if (state.nlen > 286 || state.ndist > 30) {","        strm.msg = 'too many length or distance symbols';","        state.mode = BAD;","        break;","      }","//#endif","      //Tracev((stderr, \"inflate:       table sizes ok\\n\"));","      state.have = 0;","      state.mode = LENLENS;","      /* falls through */","    case LENLENS:","      while (state.have < state.ncode) {","        //=== NEEDBITS(3);","        while (bits < 3) {","          if (have === 0) { break inf_leave; }","          have--;","          hold += input[next++] << bits;","          bits += 8;","        }","        //===//","        state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);","        //--- DROPBITS(3) ---//","        hold >>>= 3;","        bits -= 3;","        //---//","      }","      while (state.have < 19) {","        state.lens[order[state.have++]] = 0;","      }","      // We have separate tables & no pointers. 2 commented lines below not needed.","      //state.next = state.codes;","      //state.lencode = state.next;","      // Switch to use dynamic table","      state.lencode = state.lendyn;","      state.lenbits = 7;","","      opts = {bits: state.lenbits};","      ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);","      state.lenbits = opts.bits;","","      if (ret) {","        strm.msg = 'invalid code lengths set';","        state.mode = BAD;","        break;","      }","      //Tracev((stderr, \"inflate:       code lengths ok\\n\"));","      state.have = 0;","      state.mode = CODELENS;","      /* falls through */","    case CODELENS:","      while (state.have < state.nlen + state.ndist) {","        for (;;) {","          here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/","          here_bits = here >>> 24;","          here_op = (here >>> 16) & 0xff;","          here_val = here & 0xffff;","","          if ((here_bits) <= bits) { break; }","          //--- PULLBYTE() ---//","          if (have === 0) { break inf_leave; }","          have--;","          hold += input[next++] << bits;","          bits += 8;","          //---//","        }","        if (here_val < 16) {","          //--- DROPBITS(here.bits) ---//","          hold >>>= here_bits;","          bits -= here_bits;","          //---//","          state.lens[state.have++] = here_val;","        }","        else {","          if (here_val === 16) {","            //=== NEEDBITS(here.bits + 2);","            n = here_bits + 2;","            while (bits < n) {","              if (have === 0) { break inf_leave; }","              have--;","              hold += input[next++] << bits;","              bits += 8;","            }","            //===//","            //--- DROPBITS(here.bits) ---//","            hold >>>= here_bits;","            bits -= here_bits;","            //---//","            if (state.have === 0) {","              strm.msg = 'invalid bit length repeat';","              state.mode = BAD;","              break;","            }","            len = state.lens[state.have - 1];","            copy = 3 + (hold & 0x03);//BITS(2);","            //--- DROPBITS(2) ---//","            hold >>>= 2;","            bits -= 2;","            //---//","          }","          else if (here_val === 17) {","            //=== NEEDBITS(here.bits + 3);","            n = here_bits + 3;","            while (bits < n) {","              if (have === 0) { break inf_leave; }","              have--;","              hold += input[next++] << bits;","              bits += 8;","            }","            //===//","            //--- DROPBITS(here.bits) ---//","            hold >>>= here_bits;","            bits -= here_bits;","            //---//","            len = 0;","            copy = 3 + (hold & 0x07);//BITS(3);","            //--- DROPBITS(3) ---//","            hold >>>= 3;","            bits -= 3;","            //---//","          }","          else {","            //=== NEEDBITS(here.bits + 7);","            n = here_bits + 7;","            while (bits < n) {","              if (have === 0) { break inf_leave; }","              have--;","              hold += input[next++] << bits;","              bits += 8;","            }","            //===//","            //--- DROPBITS(here.bits) ---//","            hold >>>= here_bits;","            bits -= here_bits;","            //---//","            len = 0;","            copy = 11 + (hold & 0x7f);//BITS(7);","            //--- DROPBITS(7) ---//","            hold >>>= 7;","            bits -= 7;","            //---//","          }","          if (state.have + copy > state.nlen + state.ndist) {","            strm.msg = 'invalid bit length repeat';","            state.mode = BAD;","            break;","          }","          while (copy--) {","            state.lens[state.have++] = len;","          }","        }","      }","","      /* handle error breaks in while */","      if (state.mode === BAD) { break; }","","      /* check for end-of-block code (better have one) */","      if (state.lens[256] === 0) {","        strm.msg = 'invalid code -- missing end-of-block';","        state.mode = BAD;","        break;","      }","","      /* build code tables -- note: do not change the lenbits or distbits","         values here (9 and 6) without reading the comments in inftrees.h","         concerning the ENOUGH constants, which depend on those values */","      state.lenbits = 9;","","      opts = {bits: state.lenbits};","      ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);","      // We have separate tables & no pointers. 2 commented lines below not needed.","      // state.next_index = opts.table_index;","      state.lenbits = opts.bits;","      // state.lencode = state.next;","","      if (ret) {","        strm.msg = 'invalid literal/lengths set';","        state.mode = BAD;","        break;","      }","","      state.distbits = 6;","      //state.distcode.copy(state.codes);","      // Switch to use dynamic table","      state.distcode = state.distdyn;","      opts = {bits: state.distbits};","      ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);","      // We have separate tables & no pointers. 2 commented lines below not needed.","      // state.next_index = opts.table_index;","      state.distbits = opts.bits;","      // state.distcode = state.next;","","      if (ret) {","        strm.msg = 'invalid distances set';","        state.mode = BAD;","        break;","      }","      //Tracev((stderr, 'inflate:       codes ok\\n'));","      state.mode = LEN_;","      if (flush === Z_TREES) { break inf_leave; }","      /* falls through */","    case LEN_:","      state.mode = LEN;","      /* falls through */","    case LEN:","      if (have >= 6 && left >= 258) {","        //--- RESTORE() ---","        strm.next_out = put;","        strm.avail_out = left;","        strm.next_in = next;","        strm.avail_in = have;","        state.hold = hold;","        state.bits = bits;","        //---","        inflate_fast(strm, _out);","        //--- LOAD() ---","        put = strm.next_out;","        output = strm.output;","        left = strm.avail_out;","        next = strm.next_in;","        input = strm.input;","        have = strm.avail_in;","        hold = state.hold;","        bits = state.bits;","        //---","","        if (state.mode === TYPE) {","          state.back = -1;","        }","        break;","      }","      state.back = 0;","      for (;;) {","        here = state.lencode[hold & ((1 << state.lenbits) -1)];  /*BITS(state.lenbits)*/","        here_bits = here >>> 24;","        here_op = (here >>> 16) & 0xff;","        here_val = here & 0xffff;","","        if (here_bits <= bits) { break; }","        //--- PULLBYTE() ---//","        if (have === 0) { break inf_leave; }","        have--;","        hold += input[next++] << bits;","        bits += 8;","        //---//","      }","      if (here_op && (here_op & 0xf0) === 0) {","        last_bits = here_bits;","        last_op = here_op;","        last_val = here_val;","        for (;;) {","          here = state.lencode[last_val +","                  ((hold & ((1 << (last_bits + last_op)) -1))/*BITS(last.bits + last.op)*/ >> last_bits)];","          here_bits = here >>> 24;","          here_op = (here >>> 16) & 0xff;","          here_val = here & 0xffff;","","          if ((last_bits + here_bits) <= bits) { break; }","          //--- PULLBYTE() ---//","          if (have === 0) { break inf_leave; }","          have--;","          hold += input[next++] << bits;","          bits += 8;","          //---//","        }","        //--- DROPBITS(last.bits) ---//","        hold >>>= last_bits;","        bits -= last_bits;","        //---//","        state.back += last_bits;","      }","      //--- DROPBITS(here.bits) ---//","      hold >>>= here_bits;","      bits -= here_bits;","      //---//","      state.back += here_bits;","      state.length = here_val;","      if (here_op === 0) {","        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?","        //        \"inflate:         literal '%c'\\n\" :","        //        \"inflate:         literal 0x%02x\\n\", here.val));","        state.mode = LIT;","        break;","      }","      if (here_op & 32) {","        //Tracevv((stderr, \"inflate:         end of block\\n\"));","        state.back = -1;","        state.mode = TYPE;","        break;","      }","      if (here_op & 64) {","        strm.msg = 'invalid literal/length code';","        state.mode = BAD;","        break;","      }","      state.extra = here_op & 15;","      state.mode = LENEXT;","      /* falls through */","    case LENEXT:","      if (state.extra) {","        //=== NEEDBITS(state.extra);","        n = state.extra;","        while (bits < n) {","          if (have === 0) { break inf_leave; }","          have--;","          hold += input[next++] << bits;","          bits += 8;","        }","        //===//","        state.length += hold & ((1 << state.extra) -1)/*BITS(state.extra)*/;","        //--- DROPBITS(state.extra) ---//","        hold >>>= state.extra;","        bits -= state.extra;","        //---//","        state.back += state.extra;","      }","      //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));","      state.was = state.length;","      state.mode = DIST;","      /* falls through */","    case DIST:","      for (;;) {","        here = state.distcode[hold & ((1 << state.distbits) -1)];/*BITS(state.distbits)*/","        here_bits = here >>> 24;","        here_op = (here >>> 16) & 0xff;","        here_val = here & 0xffff;","","        if ((here_bits) <= bits) { break; }","        //--- PULLBYTE() ---//","        if (have === 0) { break inf_leave; }","        have--;","        hold += input[next++] << bits;","        bits += 8;","        //---//","      }","      if ((here_op & 0xf0) === 0) {","        last_bits = here_bits;","        last_op = here_op;","        last_val = here_val;","        for (;;) {","          here = state.distcode[last_val +","                  ((hold & ((1 << (last_bits + last_op)) -1))/*BITS(last.bits + last.op)*/ >> last_bits)];","          here_bits = here >>> 24;","          here_op = (here >>> 16) & 0xff;","          here_val = here & 0xffff;","","          if ((last_bits + here_bits) <= bits) { break; }","          //--- PULLBYTE() ---//","          if (have === 0) { break inf_leave; }","          have--;","          hold += input[next++] << bits;","          bits += 8;","          //---//","        }","        //--- DROPBITS(last.bits) ---//","        hold >>>= last_bits;","        bits -= last_bits;","        //---//","        state.back += last_bits;","      }","      //--- DROPBITS(here.bits) ---//","      hold >>>= here_bits;","      bits -= here_bits;","      //---//","      state.back += here_bits;","      if (here_op & 64) {","        strm.msg = 'invalid distance code';","        state.mode = BAD;","        break;","      }","      state.offset = here_val;","      state.extra = (here_op) & 15;","      state.mode = DISTEXT;","      /* falls through */","    case DISTEXT:","      if (state.extra) {","        //=== NEEDBITS(state.extra);","        n = state.extra;","        while (bits < n) {","          if (have === 0) { break inf_leave; }","          have--;","          hold += input[next++] << bits;","          bits += 8;","        }","        //===//","        state.offset += hold & ((1 << state.extra) -1)/*BITS(state.extra)*/;","        //--- DROPBITS(state.extra) ---//","        hold >>>= state.extra;","        bits -= state.extra;","        //---//","        state.back += state.extra;","      }","//#ifdef INFLATE_STRICT","      if (state.offset > state.dmax) {","        strm.msg = 'invalid distance too far back';","        state.mode = BAD;","        break;","      }","//#endif","      //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));","      state.mode = MATCH;","      /* falls through */","    case MATCH:","      if (left === 0) { break inf_leave; }","      copy = _out - left;","      if (state.offset > copy) {         /* copy from window */","        copy = state.offset - copy;","        if (copy > state.whave) {","          if (state.sane) {","            strm.msg = 'invalid distance too far back';","            state.mode = BAD;","            break;","          }","// (!) This block is disabled in zlib defailts,","// don't enable it for binary compatibility","//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR","//          Trace((stderr, \"inflate.c too far\\n\"));","//          copy -= state.whave;","//          if (copy > state.length) { copy = state.length; }","//          if (copy > left) { copy = left; }","//          left -= copy;","//          state.length -= copy;","//          do {","//            output[put++] = 0;","//          } while (--copy);","//          if (state.length === 0) { state.mode = LEN; }","//          break;","//#endif","        }","        if (copy > state.wnext) {","          copy -= state.wnext;","          from = state.wsize - copy;","        }","        else {","          from = state.wnext - copy;","        }","        if (copy > state.length) { copy = state.length; }","        from_source = state.window;","      }","      else {                              /* copy from output */","        from_source = output;","        from = put - state.offset;","        copy = state.length;","      }","      if (copy > left) { copy = left; }","      left -= copy;","      state.length -= copy;","      do {","        output[put++] = from_source[from++];","      } while (--copy);","      if (state.length === 0) { state.mode = LEN; }","      break;","    case LIT:","      if (left === 0) { break inf_leave; }","      output[put++] = state.length;","      left--;","      state.mode = LEN;","      break;","    case CHECK:","      if (state.wrap) {","        //=== NEEDBITS(32);","        while (bits < 32) {","          if (have === 0) { break inf_leave; }","          have--;","          // Use '|' insdead of '+' to make sure that result is signed","          hold |= input[next++] << bits;","          bits += 8;","        }","        //===//","        _out -= left;","        strm.total_out += _out;","        state.total += _out;","        if (_out) {","          strm.adler = state.check =","              /*UPDATE(state.check, put - _out, _out);*/","              (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));","","        }","        _out = left;","        // NB: crc32 stored as signed 32-bit int, ZSWAP32 returns signed too","        if ((state.flags ? hold : ZSWAP32(hold)) !== state.check) {","          strm.msg = 'incorrect data check';","          state.mode = BAD;","          break;","        }","        //=== INITBITS();","        hold = 0;","        bits = 0;","        //===//","        //Tracev((stderr, \"inflate:   check matches trailer\\n\"));","      }","      state.mode = LENGTH;","      /* falls through */","    case LENGTH:","      if (state.wrap && state.flags) {","        //=== NEEDBITS(32);","        while (bits < 32) {","          if (have === 0) { break inf_leave; }","          have--;","          hold += input[next++] << bits;","          bits += 8;","        }","        //===//","        if (hold !== (state.total & 0xffffffff)) {","          strm.msg = 'incorrect length check';","          state.mode = BAD;","          break;","        }","        //=== INITBITS();","        hold = 0;","        bits = 0;","        //===//","        //Tracev((stderr, \"inflate:   length matches trailer\\n\"));","      }","      state.mode = DONE;","      /* falls through */","    case DONE:","      ret = Z_STREAM_END;","      break inf_leave;","    case BAD:","      ret = Z_DATA_ERROR;","      break inf_leave;","    case MEM:","      return Z_MEM_ERROR;","    case SYNC:","      /* falls through */","    default:","      return Z_STREAM_ERROR;","    }","  }","","  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"","","  /*","     Return from inflate(), updating the total counts and the check value.","     If there was no progress during the inflate() call, return a buffer","     error.  Call updatewindow() to create and/or update the window state.","     Note: a memory error from inflate() is non-recoverable.","   */","","  //--- RESTORE() ---","  strm.next_out = put;","  strm.avail_out = left;","  strm.next_in = next;","  strm.avail_in = have;","  state.hold = hold;","  state.bits = bits;","  //---","","  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&","                      (state.mode < CHECK || flush !== Z_FINISH))) {","    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {","      state.mode = MEM;","      return Z_MEM_ERROR;","    }","  }","  _in -= strm.avail_in;","  _out -= strm.avail_out;","  strm.total_in += _in;","  strm.total_out += _out;","  state.total += _out;","  if (state.wrap && _out) {","    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/","      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));","  }","  strm.data_type = state.bits + (state.last ? 64 : 0) +","                    (state.mode === TYPE ? 128 : 0) +","                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);","  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {","    ret = Z_BUF_ERROR;","  }","  return ret;","}","","function inflateEnd(strm) {","","  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {","    return Z_STREAM_ERROR;","  }","","  var state = strm.state;","  if (state.window) {","    state.window = null;","  }","  strm.state = null;","  return Z_OK;","}","","function inflateGetHeader(strm, head) {","  var state;","","  /* check state */","  if (!strm || !strm.state) { return Z_STREAM_ERROR; }","  state = strm.state;","  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }","","  /* save header structure */","  state.head = head;","  head.done = false;","  return Z_OK;","}","","","exports.inflateReset = inflateReset;","exports.inflateReset2 = inflateReset2;","exports.inflateResetKeep = inflateResetKeep;","exports.inflateInit = inflateInit;","exports.inflateInit2 = inflateInit2;","exports.inflate = inflate;","exports.inflateEnd = inflateEnd;","exports.inflateGetHeader = inflateGetHeader;","exports.inflateInfo = 'pako inflate (from Nodeca project)';","","/* Not implemented","exports.inflateCopy = inflateCopy;","exports.inflateGetDictionary = inflateGetDictionary;","exports.inflateMark = inflateMark;","exports.inflatePrime = inflatePrime;","exports.inflateSetDictionary = inflateSetDictionary;","exports.inflateSync = inflateSync;","exports.inflateSyncPoint = inflateSyncPoint;","exports.inflateUndermine = inflateUndermine;","*/",""],"l":{"4":1,"5":1,"6":1,"7":1,"8":1,"10":1,"11":1,"12":1,"23":1,"24":1,"25":1,"31":1,"32":1,"33":1,"35":1,"36":1,"37":1,"38":1,"42":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"86":1,"87":1,"90":1,"92":1,"95":1,"96":0,"103":1,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"113":0,"116":0,"117":0,"118":0,"119":0,"120":0,"123":0,"124":0,"127":0,"128":0,"131":0,"134":0,"135":0,"136":0,"137":0,"140":0,"141":0,"142":0,"143":0,"144":0,"146":0,"147":0,"154":0,"155":0,"156":0,"157":0,"158":0,"161":1,"162":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"179":0,"180":0,"182":0,"183":0,"185":0,"188":1,"189":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"200":1,"201":0,"202":0,"205":0,"206":0,"209":0,"210":0,"211":0,"214":0,"215":0,"216":0,"221":0,"222":0,"224":0,"225":0,"229":0,"230":0,"231":0,"234":1,"235":0,"236":0,"238":0,"241":0,"245":0,"246":0,"247":0,"248":0,"249":0,"251":0,"254":1,"255":0,"269":1,"271":1,"273":1,"275":0,"276":0,"278":0,"279":0,"282":0,"283":0,"284":0,"285":0,"286":0,"288":0,"291":0,"292":0,"294":0,"297":0,"300":0,"301":0,"302":0,"303":0,"321":1,"322":0,"323":0,"326":0,"327":0,"328":0,"329":0,"331":0,"335":0,"336":0,"337":0,"338":0,"341":0,"342":0,"343":0,"346":0,"347":0,"348":0,"350":0,"351":0,"352":0,"355":0,"356":0,"357":0,"360":0,"363":1,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"378":0,"379":0,"380":0,"381":0,"382":0,"384":0,"386":0,"390":0,"392":0,"395":0,"396":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"410":0,"411":0,"412":0,"414":0,"415":0,"416":0,"418":0,"419":0,"420":0,"423":0,"424":0,"425":0,"426":0,"427":0,"430":0,"431":0,"433":0,"434":0,"435":0,"439":0,"440":0,"442":0,"443":0,"445":0,"446":0,"447":0,"449":0,"451":0,"452":0,"453":0,"455":0,"456":0,"457":0,"458":0,"461":0,"462":0,"464":0,"465":0,"466":0,"468":0,"469":0,"470":0,"471":0,"473":0,"475":0,"476":0,"478":0,"479":0,"481":0,"484":0,"485":0,"486":0,"487":0,"488":0,"491":0,"492":0,"493":0,"494":0,"495":0,"497":0,"498":0,"499":0,"500":0,"502":0,"503":0,"505":0,"507":0,"508":0,"509":0,"513":0,"514":0,"516":0,"520":0,"521":0,"522":0,"523":0,"524":0,"527":0,"528":0,"530":0,"532":0,"533":0,"534":0,"535":0,"536":0,"540":0,"541":0,"543":0,"547":0,"548":0,"549":0,"550":0,"551":0,"554":0,"555":0,"556":0,"558":0,"560":0,"561":0,"562":0,"566":0,"567":0,"569":0,"572":0,"574":0,"575":0,"576":0,"577":0,"578":0,"581":0,"582":0,"583":0,"585":0,"587":0,"588":0,"589":0,"593":0,"594":0,"597":0,"598":0,"600":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"611":0,"613":0,"627":0,"628":0,"630":0,"631":0,"632":0,"634":0,"636":0,"637":0,"640":0,"641":0,"642":0,"643":0,"645":0,"647":0,"649":0,"653":0,"654":0,"656":0,"657":0,"658":0,"660":0,"661":0,"663":0,"664":0,"667":0,"668":0,"669":0,"670":0,"671":0,"673":0,"675":0,"678":0,"679":0,"681":0,"682":0,"683":0,"685":0,"686":0,"688":0,"691":0,"693":0,"694":0,"695":0,"696":0,"697":0,"700":0,"701":0,"702":0,"703":0,"706":0,"707":0,"710":0,"711":0,"712":0,"714":0,"715":0,"716":0,"719":0,"720":0,"721":0,"722":0,"723":0,"726":0,"728":0,"729":0,"731":0,"734":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"743":0,"745":0,"746":0,"749":0,"752":0,"754":0,"755":0,"757":0,"758":0,"761":0,"762":0,"763":0,"764":0,"765":0,"768":0,"770":0,"771":0,"774":0,"778":0,"779":0,"781":0,"784":0,"785":0,"787":0,"788":0,"790":0,"792":0,"796":0,"797":0,"799":0,"800":0,"803":0,"804":0,"806":0,"809":0,"810":0,"813":0,"814":0,"815":0,"816":0,"817":0,"820":0,"821":0,"822":0,"823":0,"825":0,"829":0,"830":0,"832":0,"833":0,"836":0,"839":0,"840":0,"841":0,"842":0,"843":0,"845":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"855":0,"856":0,"859":0,"860":0,"861":0,"862":0,"863":0,"866":0,"868":0,"869":0,"871":0,"873":0,"874":0,"876":0,"878":0,"879":0,"882":0,"883":0,"884":0,"885":0,"889":0,"890":0,"893":0,"895":0,"896":0,"897":0,"898":0,"899":0,"902":0,"904":0,"905":0,"908":0,"909":0,"915":0,"916":0,"918":0,"919":0,"920":0,"922":0,"923":0,"924":0,"925":0,"928":0,"929":0,"932":0,"933":0,"934":0,"935":0,"936":0,"937":0,"939":0,"941":0,"942":0,"943":0,"944":0,"947":0,"949":0,"950":0,"952":0,"955":0,"957":0,"958":0,"959":0,"960":0,"961":0,"962":0,"966":0,"967":0,"969":0,"970":0,"971":0,"972":0,"974":0,"975":0,"977":0,"978":0,"981":0,"983":0,"984":0,"985":0,"986":0,"987":0,"988":0,"992":0,"993":0,"995":0,"996":0,"998":0,"999":0,"1004":0,"1005":0,"1006":0,"1007":0,"1008":0,"1009":0,"1013":0,"1014":0,"1016":0,"1017":0,"1019":0,"1020":0,"1023":0,"1024":0,"1025":0,"1026":0,"1028":0,"1029":0,"1035":0,"1038":0,"1039":0,"1040":0,"1041":0,"1047":0,"1049":0,"1050":0,"1053":0,"1056":0,"1057":0,"1058":0,"1059":0,"1062":0,"1065":0,"1066":0,"1067":0,"1070":0,"1073":0,"1074":0,"1075":0,"1076":0,"1079":0,"1080":0,"1083":0,"1086":0,"1088":0,"1089":0,"1090":0,"1091":0,"1092":0,"1093":0,"1095":0,"1097":0,"1098":0,"1099":0,"1100":0,"1101":0,"1102":0,"1103":0,"1104":0,"1107":0,"1108":0,"1110":0,"1112":0,"1113":0,"1114":0,"1115":0,"1116":0,"1117":0,"1119":0,"1121":0,"1122":0,"1123":0,"1124":0,"1127":0,"1128":0,"1129":0,"1130":0,"1131":0,"1132":0,"1134":0,"1135":0,"1136":0,"1138":0,"1140":0,"1141":0,"1142":0,"1143":0,"1147":0,"1148":0,"1150":0,"1153":0,"1154":0,"1156":0,"1157":0,"1158":0,"1162":0,"1163":0,"1165":0,"1167":0,"1168":0,"1169":0,"1171":0,"1172":0,"1173":0,"1174":0,"1176":0,"1177":0,"1180":0,"1182":0,"1183":0,"1184":0,"1185":0,"1186":0,"1187":0,"1190":0,"1192":0,"1193":0,"1195":0,"1198":0,"1199":0,"1202":0,"1203":0,"1204":0,"1205":0,"1206":0,"1208":0,"1210":0,"1211":0,"1212":0,"1213":0,"1216":0,"1217":0,"1218":0,"1219":0,"1220":0,"1221":0,"1223":0,"1224":0,"1225":0,"1227":0,"1229":0,"1230":0,"1231":0,"1232":0,"1236":0,"1237":0,"1239":0,"1242":0,"1243":0,"1245":0,"1246":0,"1247":0,"1248":0,"1249":0,"1251":0,"1252":0,"1253":0,"1256":0,"1258":0,"1259":0,"1260":0,"1261":0,"1262":0,"1263":0,"1266":0,"1268":0,"1269":0,"1271":0,"1274":0,"1275":0,"1276":0,"1277":0,"1281":0,"1284":0,"1285":0,"1286":0,"1287":0,"1288":0,"1289":0,"1290":0,"1291":0,"1292":0,"1310":0,"1311":0,"1312":0,"1315":0,"1317":0,"1318":0,"1321":0,"1322":0,"1323":0,"1325":0,"1326":0,"1327":0,"1328":0,"1329":0,"1331":0,"1332":0,"1334":0,"1335":0,"1336":0,"1337":0,"1338":0,"1340":0,"1342":0,"1343":0,"1344":0,"1346":0,"1347":0,"1350":0,"1351":0,"1352":0,"1353":0,"1354":0,"1359":0,"1361":0,"1362":0,"1363":0,"1364":0,"1367":0,"1368":0,"1372":0,"1375":0,"1377":0,"1378":0,"1379":0,"1380":0,"1381":0,"1384":0,"1385":0,"1386":0,"1387":0,"1390":0,"1391":0,"1395":0,"1398":0,"1399":0,"1401":0,"1402":0,"1404":0,"1408":0,"1422":0,"1423":0,"1424":0,"1425":0,"1426":0,"1427":0,"1430":0,"1432":0,"1433":0,"1434":0,"1437":0,"1438":0,"1439":0,"1440":0,"1441":0,"1442":0,"1443":0,"1446":0,"1449":0,"1450":0,"1452":0,"1455":1,"1457":0,"1458":0,"1461":0,"1462":0,"1463":0,"1465":0,"1466":0,"1469":1,"1470":0,"1473":0,"1474":0,"1475":0,"1478":0,"1479":0,"1480":0,"1484":1,"1485":1,"1486":1,"1487":1,"1488":1,"1489":1,"1490":1,"1491":1,"1492":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/zlib/inffast.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/zlib/inffast.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"inflate_fast","line":42,"loc":{"start":{"line":42,"column":17},"end":{"line":42,"column":52}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":13}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":14}},"3":{"start":{"line":42,"column":0},"end":{"line":326,"column":2}},"4":{"start":{"line":43,"column":2},"end":{"line":43,"column":12}},"5":{"start":{"line":44,"column":2},"end":{"line":44,"column":10}},"6":{"start":{"line":45,"column":2},"end":{"line":45,"column":11}},"7":{"start":{"line":46,"column":2},"end":{"line":46,"column":11}},"8":{"start":{"line":47,"column":2},"end":{"line":47,"column":10}},"9":{"start":{"line":48,"column":2},"end":{"line":48,"column":10}},"10":{"start":{"line":50,"column":2},"end":{"line":50,"column":11}},"11":{"start":{"line":52,"column":2},"end":{"line":52,"column":12}},"12":{"start":{"line":53,"column":2},"end":{"line":53,"column":12}},"13":{"start":{"line":54,"column":2},"end":{"line":54,"column":12}},"14":{"start":{"line":56,"column":2},"end":{"line":56,"column":15}},"15":{"start":{"line":57,"column":2},"end":{"line":57,"column":11}},"16":{"start":{"line":58,"column":2},"end":{"line":58,"column":11}},"17":{"start":{"line":59,"column":2},"end":{"line":59,"column":12}},"18":{"start":{"line":60,"column":2},"end":{"line":60,"column":12}},"19":{"start":{"line":61,"column":2},"end":{"line":61,"column":12}},"20":{"start":{"line":62,"column":2},"end":{"line":62,"column":12}},"21":{"start":{"line":63,"column":2},"end":{"line":63,"column":11}},"22":{"start":{"line":64,"column":2},"end":{"line":64,"column":9}},"23":{"start":{"line":66,"column":2},"end":{"line":66,"column":10}},"24":{"start":{"line":67,"column":2},"end":{"line":67,"column":11}},"25":{"start":{"line":68,"column":2},"end":{"line":68,"column":11}},"26":{"start":{"line":69,"column":2},"end":{"line":69,"column":18}},"27":{"start":{"line":72,"column":2},"end":{"line":72,"column":20}},"28":{"start":{"line":75,"column":2},"end":{"line":75,"column":21}},"29":{"start":{"line":77,"column":2},"end":{"line":77,"column":21}},"30":{"start":{"line":78,"column":2},"end":{"line":78,"column":21}},"31":{"start":{"line":79,"column":2},"end":{"line":79,"column":35}},"32":{"start":{"line":80,"column":2},"end":{"line":80,"column":23}},"33":{"start":{"line":81,"column":2},"end":{"line":81,"column":23}},"34":{"start":{"line":82,"column":2},"end":{"line":82,"column":40}},"35":{"start":{"line":83,"column":2},"end":{"line":83,"column":38}},"36":{"start":{"line":85,"column":2},"end":{"line":85,"column":20}},"37":{"start":{"line":87,"column":2},"end":{"line":87,"column":22}},"38":{"start":{"line":88,"column":2},"end":{"line":88,"column":22}},"39":{"start":{"line":89,"column":2},"end":{"line":89,"column":22}},"40":{"start":{"line":90,"column":2},"end":{"line":90,"column":26}},"41":{"start":{"line":91,"column":2},"end":{"line":91,"column":20}},"42":{"start":{"line":92,"column":2},"end":{"line":92,"column":20}},"43":{"start":{"line":93,"column":2},"end":{"line":93,"column":24}},"44":{"start":{"line":94,"column":2},"end":{"line":94,"column":25}},"45":{"start":{"line":95,"column":2},"end":{"line":95,"column":35}},"46":{"start":{"line":96,"column":2},"end":{"line":96,"column":36}},"47":{"start":{"line":102,"column":2},"end":{"line":310,"column":37}},"48":{"start":{"line":103,"column":2},"end":{"line":310,"column":37}},"49":{"start":{"line":104,"column":4},"end":{"line":109,"column":5}},"50":{"start":{"line":105,"column":6},"end":{"line":105,"column":35}},"51":{"start":{"line":106,"column":6},"end":{"line":106,"column":16}},"52":{"start":{"line":107,"column":6},"end":{"line":107,"column":35}},"53":{"start":{"line":108,"column":6},"end":{"line":108,"column":16}},"54":{"start":{"line":111,"column":4},"end":{"line":111,"column":31}},"55":{"start":{"line":113,"column":4},"end":{"line":309,"column":5}},"56":{"start":{"line":114,"column":4},"end":{"line":309,"column":5}},"57":{"start":{"line":115,"column":6},"end":{"line":115,"column":36}},"58":{"start":{"line":116,"column":6},"end":{"line":116,"column":19}},"59":{"start":{"line":117,"column":6},"end":{"line":117,"column":17}},"60":{"start":{"line":118,"column":6},"end":{"line":118,"column":43}},"61":{"start":{"line":119,"column":6},"end":{"line":306,"column":7}},"62":{"start":{"line":123,"column":8},"end":{"line":123,"column":51}},"63":{"start":{"line":125,"column":11},"end":{"line":306,"column":7}},"64":{"start":{"line":126,"column":8},"end":{"line":126,"column":40}},"65":{"start":{"line":127,"column":8},"end":{"line":127,"column":17}},"66":{"start":{"line":128,"column":8},"end":{"line":136,"column":9}},"67":{"start":{"line":129,"column":10},"end":{"line":132,"column":11}},"68":{"start":{"line":130,"column":12},"end":{"line":130,"column":41}},"69":{"start":{"line":131,"column":12},"end":{"line":131,"column":22}},"70":{"start":{"line":133,"column":10},"end":{"line":133,"column":40}},"71":{"start":{"line":134,"column":10},"end":{"line":134,"column":23}},"72":{"start":{"line":135,"column":10},"end":{"line":135,"column":21}},"73":{"start":{"line":138,"column":8},"end":{"line":143,"column":9}},"74":{"start":{"line":139,"column":10},"end":{"line":139,"column":39}},"75":{"start":{"line":140,"column":10},"end":{"line":140,"column":20}},"76":{"start":{"line":141,"column":10},"end":{"line":141,"column":39}},"77":{"start":{"line":142,"column":10},"end":{"line":142,"column":20}},"78":{"start":{"line":144,"column":8},"end":{"line":144,"column":35}},"79":{"start":{"line":146,"column":8},"end":{"line":291,"column":9}},"80":{"start":{"line":147,"column":8},"end":{"line":291,"column":9}},"81":{"start":{"line":148,"column":10},"end":{"line":148,"column":40}},"82":{"start":{"line":149,"column":10},"end":{"line":149,"column":23}},"83":{"start":{"line":150,"column":10},"end":{"line":150,"column":21}},"84":{"start":{"line":151,"column":10},"end":{"line":151,"column":47}},"85":{"start":{"line":153,"column":10},"end":{"line":288,"column":11}},"86":{"start":{"line":154,"column":12},"end":{"line":154,"column":45}},"87":{"start":{"line":155,"column":12},"end":{"line":155,"column":21}},"88":{"start":{"line":156,"column":12},"end":{"line":163,"column":13}},"89":{"start":{"line":157,"column":14},"end":{"line":157,"column":43}},"90":{"start":{"line":158,"column":14},"end":{"line":158,"column":24}},"91":{"start":{"line":159,"column":14},"end":{"line":162,"column":15}},"92":{"start":{"line":160,"column":16},"end":{"line":160,"column":45}},"93":{"start":{"line":161,"column":16},"end":{"line":161,"column":26}},"94":{"start":{"line":164,"column":12},"end":{"line":164,"column":43}},"95":{"start":{"line":166,"column":12},"end":{"line":170,"column":13}},"96":{"start":{"line":167,"column":14},"end":{"line":167,"column":57}},"97":{"start":{"line":168,"column":14},"end":{"line":168,"column":31}},"98":{"start":{"line":169,"column":14},"end":{"line":169,"column":24}},"99":{"start":{"line":172,"column":12},"end":{"line":172,"column":25}},"100":{"start":{"line":173,"column":12},"end":{"line":173,"column":23}},"101":{"start":{"line":175,"column":12},"end":{"line":175,"column":28}},"102":{"start":{"line":176,"column":12},"end":{"line":278,"column":13}},"103":{"start":{"line":177,"column":14},"end":{"line":177,"column":29}},"104":{"start":{"line":178,"column":14},"end":{"line":206,"column":15}},"105":{"start":{"line":179,"column":16},"end":{"line":183,"column":17}},"106":{"start":{"line":180,"column":18},"end":{"line":180,"column":61}},"107":{"start":{"line":181,"column":18},"end":{"line":181,"column":35}},"108":{"start":{"line":182,"column":18},"end":{"line":182,"column":28}},"109":{"start":{"line":207,"column":14},"end":{"line":207,"column":23}},"110":{"start":{"line":208,"column":14},"end":{"line":208,"column":37}},"111":{"start":{"line":209,"column":14},"end":{"line":250,"column":15}},"112":{"start":{"line":210,"column":16},"end":{"line":210,"column":35}},"113":{"start":{"line":211,"column":16},"end":{"line":218,"column":17}},"114":{"start":{"line":212,"column":18},"end":{"line":212,"column":28}},"115":{"start":{"line":213,"column":18},"end":{"line":215,"column":33}},"116":{"start":{"line":214,"column":20},"end":{"line":214,"column":54}},"117":{"start":{"line":216,"column":18},"end":{"line":216,"column":37}},"118":{"start":{"line":217,"column":18},"end":{"line":217,"column":39}},"119":{"start":{"line":220,"column":19},"end":{"line":250,"column":15}},"120":{"start":{"line":221,"column":16},"end":{"line":221,"column":43}},"121":{"start":{"line":222,"column":16},"end":{"line":222,"column":28}},"122":{"start":{"line":223,"column":16},"end":{"line":238,"column":17}},"123":{"start":{"line":224,"column":18},"end":{"line":224,"column":28}},"124":{"start":{"line":225,"column":18},"end":{"line":227,"column":33}},"125":{"start":{"line":226,"column":20},"end":{"line":226,"column":54}},"126":{"start":{"line":228,"column":18},"end":{"line":228,"column":27}},"127":{"start":{"line":229,"column":18},"end":{"line":237,"column":19}},"128":{"start":{"line":230,"column":20},"end":{"line":230,"column":31}},"129":{"start":{"line":231,"column":20},"end":{"line":231,"column":30}},"130":{"start":{"line":232,"column":20},"end":{"line":234,"column":35}},"131":{"start":{"line":233,"column":22},"end":{"line":233,"column":56}},"132":{"start":{"line":235,"column":20},"end":{"line":235,"column":39}},"133":{"start":{"line":236,"column":20},"end":{"line":236,"column":41}},"134":{"start":{"line":241,"column":16},"end":{"line":241,"column":35}},"135":{"start":{"line":242,"column":16},"end":{"line":249,"column":17}},"136":{"start":{"line":243,"column":18},"end":{"line":243,"column":28}},"137":{"start":{"line":244,"column":18},"end":{"line":246,"column":33}},"138":{"start":{"line":245,"column":20},"end":{"line":245,"column":54}},"139":{"start":{"line":247,"column":18},"end":{"line":247,"column":37}},"140":{"start":{"line":248,"column":18},"end":{"line":248,"column":39}},"141":{"start":{"line":251,"column":14},"end":{"line":256,"column":15}},"142":{"start":{"line":252,"column":16},"end":{"line":252,"column":53}},"143":{"start":{"line":253,"column":16},"end":{"line":253,"column":53}},"144":{"start":{"line":254,"column":16},"end":{"line":254,"column":53}},"145":{"start":{"line":255,"column":16},"end":{"line":255,"column":25}},"146":{"start":{"line":257,"column":14},"end":{"line":262,"column":15}},"147":{"start":{"line":258,"column":16},"end":{"line":258,"column":53}},"148":{"start":{"line":259,"column":16},"end":{"line":261,"column":17}},"149":{"start":{"line":260,"column":18},"end":{"line":260,"column":55}},"150":{"start":{"line":265,"column":14},"end":{"line":265,"column":33}},"151":{"start":{"line":266,"column":14},"end":{"line":271,"column":32}},"152":{"start":{"line":267,"column":16},"end":{"line":267,"column":48}},"153":{"start":{"line":268,"column":16},"end":{"line":268,"column":48}},"154":{"start":{"line":269,"column":16},"end":{"line":269,"column":48}},"155":{"start":{"line":270,"column":16},"end":{"line":270,"column":25}},"156":{"start":{"line":272,"column":14},"end":{"line":277,"column":15}},"157":{"start":{"line":273,"column":16},"end":{"line":273,"column":48}},"158":{"start":{"line":274,"column":16},"end":{"line":276,"column":17}},"159":{"start":{"line":275,"column":18},"end":{"line":275,"column":50}},"160":{"start":{"line":280,"column":15},"end":{"line":288,"column":11}},"161":{"start":{"line":281,"column":12},"end":{"line":281,"column":81}},"162":{"start":{"line":282,"column":12},"end":{"line":282,"column":28}},"163":{"start":{"line":285,"column":12},"end":{"line":285,"column":47}},"164":{"start":{"line":286,"column":12},"end":{"line":286,"column":29}},"165":{"start":{"line":287,"column":12},"end":{"line":287,"column":22}},"166":{"start":{"line":290,"column":10},"end":{"line":290,"column":16}},"167":{"start":{"line":293,"column":11},"end":{"line":306,"column":7}},"168":{"start":{"line":294,"column":8},"end":{"line":294,"column":77}},"169":{"start":{"line":295,"column":8},"end":{"line":295,"column":23}},"170":{"start":{"line":297,"column":11},"end":{"line":306,"column":7}},"171":{"start":{"line":299,"column":8},"end":{"line":299,"column":26}},"172":{"start":{"line":300,"column":8},"end":{"line":300,"column":18}},"173":{"start":{"line":303,"column":8},"end":{"line":303,"column":49}},"174":{"start":{"line":304,"column":8},"end":{"line":304,"column":25}},"175":{"start":{"line":305,"column":8},"end":{"line":305,"column":18}},"176":{"start":{"line":308,"column":6},"end":{"line":308,"column":12}},"177":{"start":{"line":313,"column":2},"end":{"line":313,"column":18}},"178":{"start":{"line":314,"column":2},"end":{"line":314,"column":13}},"179":{"start":{"line":315,"column":2},"end":{"line":315,"column":19}},"180":{"start":{"line":316,"column":2},"end":{"line":316,"column":26}},"181":{"start":{"line":319,"column":2},"end":{"line":319,"column":21}},"182":{"start":{"line":320,"column":2},"end":{"line":320,"column":23}},"183":{"start":{"line":321,"column":2},"end":{"line":321,"column":69}},"184":{"start":{"line":322,"column":2},"end":{"line":322,"column":74}},"185":{"start":{"line":323,"column":2},"end":{"line":323,"column":20}},"186":{"start":{"line":324,"column":2},"end":{"line":324,"column":20}},"187":{"start":{"line":325,"column":2},"end":{"line":325,"column":9}}},"branchMap":{"1":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":104,"column":4}},{"start":{"line":104,"column":4},"end":{"line":104,"column":4}}]},"2":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":6},"end":{"line":119,"column":6}},{"start":{"line":119,"column":6},"end":{"line":119,"column":6}}]},"3":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":11},"end":{"line":125,"column":11}},{"start":{"line":125,"column":11},"end":{"line":125,"column":11}}]},"4":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":8},"end":{"line":128,"column":8}},{"start":{"line":128,"column":8},"end":{"line":128,"column":8}}]},"5":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":10},"end":{"line":129,"column":10}},{"start":{"line":129,"column":10},"end":{"line":129,"column":10}}]},"6":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":8},"end":{"line":138,"column":8}},{"start":{"line":138,"column":8},"end":{"line":138,"column":8}}]},"7":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":10},"end":{"line":153,"column":10}},{"start":{"line":153,"column":10},"end":{"line":153,"column":10}}]},"8":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":12},"end":{"line":156,"column":12}},{"start":{"line":156,"column":12},"end":{"line":156,"column":12}}]},"9":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":14},"end":{"line":159,"column":14}},{"start":{"line":159,"column":14},"end":{"line":159,"column":14}}]},"10":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":12},"end":{"line":166,"column":12}},{"start":{"line":166,"column":12},"end":{"line":166,"column":12}}]},"11":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":12},"end":{"line":176,"column":12}},{"start":{"line":176,"column":12},"end":{"line":176,"column":12}}]},"12":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":14},"end":{"line":178,"column":14}},{"start":{"line":178,"column":14},"end":{"line":178,"column":14}}]},"13":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":16},"end":{"line":179,"column":16}},{"start":{"line":179,"column":16},"end":{"line":179,"column":16}}]},"14":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":14},"end":{"line":209,"column":14}},{"start":{"line":209,"column":14},"end":{"line":209,"column":14}}]},"15":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":16},"end":{"line":211,"column":16}},{"start":{"line":211,"column":16},"end":{"line":211,"column":16}}]},"16":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":19},"end":{"line":220,"column":19}},{"start":{"line":220,"column":19},"end":{"line":220,"column":19}}]},"17":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":16},"end":{"line":223,"column":16}},{"start":{"line":223,"column":16},"end":{"line":223,"column":16}}]},"18":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":18},"end":{"line":229,"column":18}},{"start":{"line":229,"column":18},"end":{"line":229,"column":18}}]},"19":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":16},"end":{"line":242,"column":16}},{"start":{"line":242,"column":16},"end":{"line":242,"column":16}}]},"20":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":14},"end":{"line":257,"column":14}},{"start":{"line":257,"column":14},"end":{"line":257,"column":14}}]},"21":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":16},"end":{"line":259,"column":16}},{"start":{"line":259,"column":16},"end":{"line":259,"column":16}}]},"22":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":14},"end":{"line":272,"column":14}},{"start":{"line":272,"column":14},"end":{"line":272,"column":14}}]},"23":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":16},"end":{"line":274,"column":16}},{"start":{"line":274,"column":16},"end":{"line":274,"column":16}}]},"24":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":15},"end":{"line":280,"column":15}},{"start":{"line":280,"column":15},"end":{"line":280,"column":15}}]},"25":{"line":293,"type":"if","locations":[{"start":{"line":293,"column":11},"end":{"line":293,"column":11}},{"start":{"line":293,"column":11},"end":{"line":293,"column":11}}]},"26":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":11},"end":{"line":297,"column":11}},{"start":{"line":297,"column":11},"end":{"line":297,"column":11}}]},"27":{"line":310,"type":"binary-expr","locations":[{"start":{"line":310,"column":11},"end":{"line":310,"column":21}},{"start":{"line":310,"column":25},"end":{"line":310,"column":35}}]},"28":{"line":321,"type":"cond-expr","locations":[{"start":{"line":321,"column":32},"end":{"line":321,"column":48}},{"start":{"line":321,"column":51},"end":{"line":321,"column":67}}]},"29":{"line":322,"type":"cond-expr","locations":[{"start":{"line":322,"column":33},"end":{"line":322,"column":51}},{"start":{"line":322,"column":54},"end":{"line":322,"column":72}}]}},"code":["'use strict';","","// See state defs from inflate.js","var BAD = 30;       /* got a data error -- remain here until reset */","var TYPE = 12;      /* i: waiting for type bits, including last-flag bit */","","/*","   Decode literal, length, and distance codes and write out the resulting","   literal and match bytes until either not enough input or output is","   available, an end-of-block is encountered, or a data error is encountered.","   When large enough input and output buffers are supplied to inflate(), for","   example, a 16K input buffer and a 64K output buffer, more than 95% of the","   inflate execution time is spent in this routine.","","   Entry assumptions:","","        state.mode === LEN","        strm.avail_in >= 6","        strm.avail_out >= 258","        start >= strm.avail_out","        state.bits < 8","","   On return, state.mode is one of:","","        LEN -- ran out of enough output space or enough available input","        TYPE -- reached end of block code, inflate() to interpret next block","        BAD -- error in block data","","   Notes:","","    - The maximum input bits used by a length/distance pair is 15 bits for the","      length code, 5 bits for the length extra, 15 bits for the distance code,","      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.","      Therefore if strm.avail_in >= 6, then there is enough input to avoid","      checking for available input while decoding.","","    - The maximum bytes that a single length/distance pair can output is 258","      bytes, which is the maximum length that can be coded.  inflate_fast()","      requires strm.avail_out >= 258 for each loop to avoid checking for","      output space."," */","module.exports = function inflate_fast(strm, start) {","  var state;","  var _in;                    /* local strm.input */","  var last;                   /* have enough input while in < last */","  var _out;                   /* local strm.output */","  var beg;                    /* inflate()'s initial strm.output */","  var end;                    /* while out < end, enough space available */","//#ifdef INFLATE_STRICT","  var dmax;                   /* maximum distance from zlib header */","//#endif","  var wsize;                  /* window size or zero if not using window */","  var whave;                  /* valid bytes in the window */","  var wnext;                  /* window write index */","  // Use `s_window` instead `window`, avoid conflict with instrumentation tools","  var s_window;               /* allocated sliding window, if wsize != 0 */","  var hold;                   /* local strm.hold */","  var bits;                   /* local strm.bits */","  var lcode;                  /* local strm.lencode */","  var dcode;                  /* local strm.distcode */","  var lmask;                  /* mask for first level of length codes */","  var dmask;                  /* mask for first level of distance codes */","  var here;                   /* retrieved table entry */","  var op;                     /* code bits, operation, extra bits, or */","                              /*  window position, window bytes to copy */","  var len;                    /* match length, unused bytes */","  var dist;                   /* match distance */","  var from;                   /* where to copy match from */","  var from_source;","","","  var input, output; // JS specific, because we have no pointers","","  /* copy state to local variables */","  state = strm.state;","  //here = state.here;","  _in = strm.next_in;","  input = strm.input;","  last = _in + (strm.avail_in - 5);","  _out = strm.next_out;","  output = strm.output;","  beg = _out - (start - strm.avail_out);","  end = _out + (strm.avail_out - 257);","//#ifdef INFLATE_STRICT","  dmax = state.dmax;","//#endif","  wsize = state.wsize;","  whave = state.whave;","  wnext = state.wnext;","  s_window = state.window;","  hold = state.hold;","  bits = state.bits;","  lcode = state.lencode;","  dcode = state.distcode;","  lmask = (1 << state.lenbits) - 1;","  dmask = (1 << state.distbits) - 1;","","","  /* decode literals and length/distances until end-of-block or not enough","     input data or output space */","","  top:","  do {","    if (bits < 15) {","      hold += input[_in++] << bits;","      bits += 8;","      hold += input[_in++] << bits;","      bits += 8;","    }","","    here = lcode[hold & lmask];","","    dolen:","    for (;;) { // Goto emulation","      op = here >>> 24/*here.bits*/;","      hold >>>= op;","      bits -= op;","      op = (here >>> 16) & 0xff/*here.op*/;","      if (op === 0) {                          /* literal */","        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?","        //        \"inflate:         literal '%c'\\n\" :","        //        \"inflate:         literal 0x%02x\\n\", here.val));","        output[_out++] = here & 0xffff/*here.val*/;","      }","      else if (op & 16) {                     /* length base */","        len = here & 0xffff/*here.val*/;","        op &= 15;                           /* number of extra bits */","        if (op) {","          if (bits < op) {","            hold += input[_in++] << bits;","            bits += 8;","          }","          len += hold & ((1 << op) - 1);","          hold >>>= op;","          bits -= op;","        }","        //Tracevv((stderr, \"inflate:         length %u\\n\", len));","        if (bits < 15) {","          hold += input[_in++] << bits;","          bits += 8;","          hold += input[_in++] << bits;","          bits += 8;","        }","        here = dcode[hold & dmask];","","        dodist:","        for (;;) { // goto emulation","          op = here >>> 24/*here.bits*/;","          hold >>>= op;","          bits -= op;","          op = (here >>> 16) & 0xff/*here.op*/;","","          if (op & 16) {                      /* distance base */","            dist = here & 0xffff/*here.val*/;","            op &= 15;                       /* number of extra bits */","            if (bits < op) {","              hold += input[_in++] << bits;","              bits += 8;","              if (bits < op) {","                hold += input[_in++] << bits;","                bits += 8;","              }","            }","            dist += hold & ((1 << op) - 1);","//#ifdef INFLATE_STRICT","            if (dist > dmax) {","              strm.msg = 'invalid distance too far back';","              state.mode = BAD;","              break top;","            }","//#endif","            hold >>>= op;","            bits -= op;","            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));","            op = _out - beg;                /* max distance in output */","            if (dist > op) {                /* see if copy from window */","              op = dist - op;               /* distance back in window */","              if (op > whave) {","                if (state.sane) {","                  strm.msg = 'invalid distance too far back';","                  state.mode = BAD;","                  break top;","                }","","// (!) This block is disabled in zlib defailts,","// don't enable it for binary compatibility","//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR","//                if (len <= op - whave) {","//                  do {","//                    output[_out++] = 0;","//                  } while (--len);","//                  continue top;","//                }","//                len -= op - whave;","//                do {","//                  output[_out++] = 0;","//                } while (--op > whave);","//                if (op === 0) {","//                  from = _out - dist;","//                  do {","//                    output[_out++] = output[from++];","//                  } while (--len);","//                  continue top;","//                }","//#endif","              }","              from = 0; // window index","              from_source = s_window;","              if (wnext === 0) {           /* very common case */","                from += wsize - op;","                if (op < len) {         /* some from window */","                  len -= op;","                  do {","                    output[_out++] = s_window[from++];","                  } while (--op);","                  from = _out - dist;  /* rest from output */","                  from_source = output;","                }","              }","              else if (wnext < op) {      /* wrap around window */","                from += wsize + wnext - op;","                op -= wnext;","                if (op < len) {         /* some from end of window */","                  len -= op;","                  do {","                    output[_out++] = s_window[from++];","                  } while (--op);","                  from = 0;","                  if (wnext < len) {  /* some from start of window */","                    op = wnext;","                    len -= op;","                    do {","                      output[_out++] = s_window[from++];","                    } while (--op);","                    from = _out - dist;      /* rest from output */","                    from_source = output;","                  }","                }","              }","              else {                      /* contiguous in window */","                from += wnext - op;","                if (op < len) {         /* some from window */","                  len -= op;","                  do {","                    output[_out++] = s_window[from++];","                  } while (--op);","                  from = _out - dist;  /* rest from output */","                  from_source = output;","                }","              }","              while (len > 2) {","                output[_out++] = from_source[from++];","                output[_out++] = from_source[from++];","                output[_out++] = from_source[from++];","                len -= 3;","              }","              if (len) {","                output[_out++] = from_source[from++];","                if (len > 1) {","                  output[_out++] = from_source[from++];","                }","              }","            }","            else {","              from = _out - dist;          /* copy direct from output */","              do {                        /* minimum length is three */","                output[_out++] = output[from++];","                output[_out++] = output[from++];","                output[_out++] = output[from++];","                len -= 3;","              } while (len > 2);","              if (len) {","                output[_out++] = output[from++];","                if (len > 1) {","                  output[_out++] = output[from++];","                }","              }","            }","          }","          else if ((op & 64) === 0) {          /* 2nd level distance code */","            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];","            continue dodist;","          }","          else {","            strm.msg = 'invalid distance code';","            state.mode = BAD;","            break top;","          }","","          break; // need to emulate goto via \"continue\"","        }","      }","      else if ((op & 64) === 0) {              /* 2nd level length code */","        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];","        continue dolen;","      }","      else if (op & 32) {                     /* end-of-block */","        //Tracevv((stderr, \"inflate:         end of block\\n\"));","        state.mode = TYPE;","        break top;","      }","      else {","        strm.msg = 'invalid literal/length code';","        state.mode = BAD;","        break top;","      }","","      break; // need to emulate goto via \"continue\"","    }","  } while (_in < last && _out < end);","","  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */","  len = bits >> 3;","  _in -= len;","  bits -= len << 3;","  hold &= (1 << bits) - 1;","","  /* update state and return */","  strm.next_in = _in;","  strm.next_out = _out;","  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));","  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));","  state.hold = hold;","  state.bits = bits;","  return;","};",""],"l":{"4":1,"5":1,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"50":0,"52":0,"53":0,"54":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"66":0,"67":0,"68":0,"69":0,"72":0,"75":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"85":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"111":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"123":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"133":0,"134":0,"135":0,"138":0,"139":0,"140":0,"141":0,"142":0,"144":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"164":0,"166":0,"167":0,"168":0,"169":0,"172":0,"173":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"216":0,"217":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"235":0,"236":0,"241":0,"242":0,"243":0,"244":0,"245":0,"247":0,"248":0,"251":0,"252":0,"253":0,"254":0,"255":0,"257":0,"258":0,"259":0,"260":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"272":0,"273":0,"274":0,"275":0,"280":0,"281":0,"282":0,"285":0,"286":0,"287":0,"290":0,"293":0,"294":0,"295":0,"297":0,"299":0,"300":0,"303":0,"304":0,"305":0,"308":0,"313":0,"314":0,"315":0,"316":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/zlib/inftrees.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/zlib/inftrees.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0,0],"25":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"inflate_table","line":37,"loc":{"start":{"line":37,"column":17},"end":{"line":38,"column":0}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":17}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":22}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":23}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":14}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":13}},"7":{"start":{"line":13,"column":0},"end":{"line":13,"column":14}},"8":{"start":{"line":15,"column":0},"end":{"line":18,"column":2}},"9":{"start":{"line":20,"column":0},"end":{"line":23,"column":2}},"10":{"start":{"line":25,"column":0},"end":{"line":29,"column":2}},"11":{"start":{"line":31,"column":0},"end":{"line":35,"column":2}},"12":{"start":{"line":37,"column":0},"end":{"line":327,"column":2}},"13":{"start":{"line":39,"column":2},"end":{"line":39,"column":23}},"14":{"start":{"line":42,"column":2},"end":{"line":42,"column":14}},"15":{"start":{"line":43,"column":2},"end":{"line":43,"column":14}},"16":{"start":{"line":44,"column":2},"end":{"line":44,"column":23}},"17":{"start":{"line":45,"column":2},"end":{"line":45,"column":15}},"18":{"start":{"line":46,"column":2},"end":{"line":46,"column":15}},"19":{"start":{"line":47,"column":2},"end":{"line":47,"column":15}},"20":{"start":{"line":48,"column":2},"end":{"line":48,"column":15}},"21":{"start":{"line":49,"column":2},"end":{"line":49,"column":15}},"22":{"start":{"line":50,"column":2},"end":{"line":50,"column":15}},"23":{"start":{"line":51,"column":2},"end":{"line":51,"column":11}},"24":{"start":{"line":52,"column":2},"end":{"line":52,"column":11}},"25":{"start":{"line":53,"column":2},"end":{"line":53,"column":10}},"26":{"start":{"line":54,"column":2},"end":{"line":54,"column":11}},"27":{"start":{"line":55,"column":2},"end":{"line":55,"column":11}},"28":{"start":{"line":56,"column":2},"end":{"line":56,"column":18}},"29":{"start":{"line":57,"column":2},"end":{"line":57,"column":21}},"30":{"start":{"line":59,"column":2},"end":{"line":59,"column":10}},"31":{"start":{"line":60,"column":2},"end":{"line":60,"column":41}},"32":{"start":{"line":61,"column":2},"end":{"line":61,"column":40}},"33":{"start":{"line":62,"column":2},"end":{"line":62,"column":19}},"34":{"start":{"line":63,"column":2},"end":{"line":63,"column":22}},"35":{"start":{"line":65,"column":2},"end":{"line":65,"column":35}},"36":{"start":{"line":99,"column":2},"end":{"line":101,"column":3}},"37":{"start":{"line":100,"column":4},"end":{"line":100,"column":19}},"38":{"start":{"line":102,"column":2},"end":{"line":104,"column":3}},"39":{"start":{"line":103,"column":4},"end":{"line":103,"column":36}},"40":{"start":{"line":107,"column":2},"end":{"line":107,"column":14}},"41":{"start":{"line":108,"column":2},"end":{"line":110,"column":3}},"42":{"start":{"line":109,"column":4},"end":{"line":109,"column":36}},"43":{"start":{"line":109,"column":28},"end":{"line":109,"column":34}},"44":{"start":{"line":111,"column":2},"end":{"line":113,"column":3}},"45":{"start":{"line":112,"column":4},"end":{"line":112,"column":15}},"46":{"start":{"line":114,"column":2},"end":{"line":128,"column":3}},"47":{"start":{"line":118,"column":4},"end":{"line":118,"column":54}},"48":{"start":{"line":124,"column":4},"end":{"line":124,"column":54}},"49":{"start":{"line":126,"column":4},"end":{"line":126,"column":18}},"50":{"start":{"line":127,"column":4},"end":{"line":127,"column":13}},"51":{"start":{"line":129,"column":2},"end":{"line":131,"column":3}},"52":{"start":{"line":130,"column":4},"end":{"line":130,"column":36}},"53":{"start":{"line":130,"column":28},"end":{"line":130,"column":34}},"54":{"start":{"line":132,"column":2},"end":{"line":134,"column":3}},"55":{"start":{"line":133,"column":4},"end":{"line":133,"column":15}},"56":{"start":{"line":137,"column":2},"end":{"line":137,"column":11}},"57":{"start":{"line":138,"column":2},"end":{"line":144,"column":3}},"58":{"start":{"line":139,"column":4},"end":{"line":139,"column":15}},"59":{"start":{"line":140,"column":4},"end":{"line":140,"column":23}},"60":{"start":{"line":141,"column":4},"end":{"line":143,"column":5}},"61":{"start":{"line":142,"column":6},"end":{"line":142,"column":16}},"62":{"start":{"line":145,"column":2},"end":{"line":147,"column":3}},"63":{"start":{"line":146,"column":4},"end":{"line":146,"column":14}},"64":{"start":{"line":150,"column":2},"end":{"line":150,"column":14}},"65":{"start":{"line":151,"column":2},"end":{"line":153,"column":3}},"66":{"start":{"line":152,"column":4},"end":{"line":152,"column":43}},"67":{"start":{"line":156,"column":2},"end":{"line":160,"column":3}},"68":{"start":{"line":157,"column":4},"end":{"line":159,"column":5}},"69":{"start":{"line":158,"column":6},"end":{"line":158,"column":49}},"70":{"start":{"line":196,"column":2},"end":{"line":211,"column":3}},"71":{"start":{"line":197,"column":4},"end":{"line":197,"column":24}},"72":{"start":{"line":198,"column":4},"end":{"line":198,"column":13}},"73":{"start":{"line":200,"column":9},"end":{"line":211,"column":3}},"74":{"start":{"line":201,"column":4},"end":{"line":201,"column":17}},"75":{"start":{"line":202,"column":4},"end":{"line":202,"column":22}},"76":{"start":{"line":203,"column":4},"end":{"line":203,"column":17}},"77":{"start":{"line":204,"column":4},"end":{"line":204,"column":23}},"78":{"start":{"line":205,"column":4},"end":{"line":205,"column":14}},"79":{"start":{"line":208,"column":4},"end":{"line":208,"column":17}},"80":{"start":{"line":209,"column":4},"end":{"line":209,"column":17}},"81":{"start":{"line":210,"column":4},"end":{"line":210,"column":13}},"82":{"start":{"line":214,"column":2},"end":{"line":214,"column":11}},"83":{"start":{"line":215,"column":2},"end":{"line":215,"column":10}},"84":{"start":{"line":216,"column":2},"end":{"line":216,"column":12}},"85":{"start":{"line":217,"column":2},"end":{"line":217,"column":21}},"86":{"start":{"line":218,"column":2},"end":{"line":218,"column":14}},"87":{"start":{"line":219,"column":2},"end":{"line":219,"column":11}},"88":{"start":{"line":220,"column":2},"end":{"line":220,"column":11}},"89":{"start":{"line":221,"column":2},"end":{"line":221,"column":19}},"90":{"start":{"line":222,"column":2},"end":{"line":222,"column":18}},"91":{"start":{"line":225,"column":2},"end":{"line":228,"column":3}},"92":{"start":{"line":227,"column":4},"end":{"line":227,"column":13}},"93":{"start":{"line":230,"column":2},"end":{"line":230,"column":10}},"94":{"start":{"line":232,"column":2},"end":{"line":311,"column":3}},"95":{"start":{"line":233,"column":4},"end":{"line":233,"column":8}},"96":{"start":{"line":235,"column":4},"end":{"line":235,"column":27}},"97":{"start":{"line":236,"column":4},"end":{"line":247,"column":5}},"98":{"start":{"line":237,"column":6},"end":{"line":237,"column":18}},"99":{"start":{"line":238,"column":6},"end":{"line":238,"column":27}},"100":{"start":{"line":240,"column":9},"end":{"line":247,"column":5}},"101":{"start":{"line":241,"column":6},"end":{"line":241,"column":47}},"102":{"start":{"line":242,"column":6},"end":{"line":242,"column":46}},"103":{"start":{"line":245,"column":6},"end":{"line":245,"column":24}},"104":{"start":{"line":246,"column":6},"end":{"line":246,"column":19}},"105":{"start":{"line":250,"column":4},"end":{"line":250,"column":29}},"106":{"start":{"line":251,"column":4},"end":{"line":251,"column":21}},"107":{"start":{"line":252,"column":4},"end":{"line":252,"column":15}},"108":{"start":{"line":253,"column":4},"end":{"line":256,"column":25}},"109":{"start":{"line":254,"column":6},"end":{"line":254,"column":19}},"110":{"start":{"line":255,"column":6},"end":{"line":255,"column":94}},"111":{"start":{"line":259,"column":4},"end":{"line":259,"column":26}},"112":{"start":{"line":260,"column":4},"end":{"line":262,"column":5}},"113":{"start":{"line":261,"column":6},"end":{"line":261,"column":17}},"114":{"start":{"line":263,"column":4},"end":{"line":268,"column":5}},"115":{"start":{"line":264,"column":6},"end":{"line":264,"column":23}},"116":{"start":{"line":265,"column":6},"end":{"line":265,"column":19}},"117":{"start":{"line":267,"column":6},"end":{"line":267,"column":15}},"118":{"start":{"line":271,"column":4},"end":{"line":271,"column":10}},"119":{"start":{"line":272,"column":4},"end":{"line":275,"column":5}},"120":{"start":{"line":273,"column":6},"end":{"line":273,"column":33}},"121":{"start":{"line":273,"column":25},"end":{"line":273,"column":31}},"122":{"start":{"line":274,"column":6},"end":{"line":274,"column":41}},"123":{"start":{"line":278,"column":4},"end":{"line":310,"column":5}},"124":{"start":{"line":280,"column":6},"end":{"line":282,"column":7}},"125":{"start":{"line":281,"column":8},"end":{"line":281,"column":20}},"126":{"start":{"line":285,"column":6},"end":{"line":285,"column":18}},"127":{"start":{"line":288,"column":6},"end":{"line":288,"column":24}},"128":{"start":{"line":289,"column":6},"end":{"line":289,"column":23}},"129":{"start":{"line":290,"column":6},"end":{"line":295,"column":7}},"130":{"start":{"line":291,"column":8},"end":{"line":291,"column":35}},"131":{"start":{"line":292,"column":8},"end":{"line":292,"column":33}},"132":{"start":{"line":292,"column":25},"end":{"line":292,"column":31}},"133":{"start":{"line":293,"column":8},"end":{"line":293,"column":15}},"134":{"start":{"line":294,"column":8},"end":{"line":294,"column":19}},"135":{"start":{"line":298,"column":6},"end":{"line":298,"column":24}},"136":{"start":{"line":299,"column":6},"end":{"line":302,"column":7}},"137":{"start":{"line":301,"column":8},"end":{"line":301,"column":17}},"138":{"start":{"line":305,"column":6},"end":{"line":305,"column":24}},"139":{"start":{"line":309,"column":6},"end":{"line":309,"column":73}},"140":{"start":{"line":316,"column":2},"end":{"line":321,"column":3}},"141":{"start":{"line":320,"column":4},"end":{"line":320,"column":62}},"142":{"start":{"line":325,"column":2},"end":{"line":325,"column":19}},"143":{"start":{"line":326,"column":2},"end":{"line":326,"column":11}}},"branchMap":{"1":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]},"2":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":2},"end":{"line":111,"column":2}},{"start":{"line":111,"column":2},"end":{"line":111,"column":2}}]},"3":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":2},"end":{"line":114,"column":2}},{"start":{"line":114,"column":2},"end":{"line":114,"column":2}}]},"4":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":4},"end":{"line":130,"column":4}},{"start":{"line":130,"column":4},"end":{"line":130,"column":4}}]},"5":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":2},"end":{"line":132,"column":2}},{"start":{"line":132,"column":2},"end":{"line":132,"column":2}}]},"6":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":141,"column":4}},{"start":{"line":141,"column":4},"end":{"line":141,"column":4}}]},"7":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":2},"end":{"line":145,"column":2}},{"start":{"line":145,"column":2},"end":{"line":145,"column":2}}]},"8":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":6},"end":{"line":145,"column":14}},{"start":{"line":145,"column":19},"end":{"line":145,"column":33}},{"start":{"line":145,"column":37},"end":{"line":145,"column":46}}]},"9":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":4},"end":{"line":157,"column":4}},{"start":{"line":157,"column":4},"end":{"line":157,"column":4}}]},"10":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":2},"end":{"line":196,"column":2}},{"start":{"line":196,"column":2},"end":{"line":196,"column":2}}]},"11":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":9},"end":{"line":200,"column":9}},{"start":{"line":200,"column":9},"end":{"line":200,"column":9}}]},"12":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":2},"end":{"line":225,"column":2}},{"start":{"line":225,"column":2},"end":{"line":225,"column":2}}]},"13":{"line":225,"type":"binary-expr","locations":[{"start":{"line":225,"column":7},"end":{"line":225,"column":20}},{"start":{"line":225,"column":24},"end":{"line":225,"column":42}},{"start":{"line":226,"column":5},"end":{"line":226,"column":19}},{"start":{"line":226,"column":23},"end":{"line":226,"column":42}}]},"14":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":4},"end":{"line":236,"column":4}},{"start":{"line":236,"column":4},"end":{"line":236,"column":4}}]},"15":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":9},"end":{"line":240,"column":9}},{"start":{"line":240,"column":9},"end":{"line":240,"column":9}}]},"16":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":4},"end":{"line":263,"column":4}},{"start":{"line":263,"column":4},"end":{"line":263,"column":4}}]},"17":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":4},"end":{"line":272,"column":4}},{"start":{"line":272,"column":4},"end":{"line":272,"column":4}}]},"18":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":6},"end":{"line":273,"column":6}},{"start":{"line":273,"column":6},"end":{"line":273,"column":6}}]},"19":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":4},"end":{"line":278,"column":4}},{"start":{"line":278,"column":4},"end":{"line":278,"column":4}}]},"20":{"line":278,"type":"binary-expr","locations":[{"start":{"line":278,"column":8},"end":{"line":278,"column":18}},{"start":{"line":278,"column":22},"end":{"line":278,"column":43}}]},"21":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":6},"end":{"line":280,"column":6}},{"start":{"line":280,"column":6},"end":{"line":280,"column":6}}]},"22":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":8},"end":{"line":292,"column":8}},{"start":{"line":292,"column":8},"end":{"line":292,"column":8}}]},"23":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":6},"end":{"line":299,"column":6}},{"start":{"line":299,"column":6},"end":{"line":299,"column":6}}]},"24":{"line":299,"type":"binary-expr","locations":[{"start":{"line":299,"column":11},"end":{"line":299,"column":24}},{"start":{"line":299,"column":28},"end":{"line":299,"column":46}},{"start":{"line":300,"column":9},"end":{"line":300,"column":23}},{"start":{"line":300,"column":27},"end":{"line":300,"column":46}}]},"25":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":2},"end":{"line":316,"column":2}},{"start":{"line":316,"column":2},"end":{"line":316,"column":2}}]}},"code":["'use strict';","","","var utils = require('../utils/common');","","var MAXBITS = 15;","var ENOUGH_LENS = 852;","var ENOUGH_DISTS = 592;","//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);","","var CODES = 0;","var LENS = 1;","var DISTS = 2;","","var lbase = [ /* Length codes 257..285 base */","  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,","  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0","];","","var lext = [ /* Length codes 257..285 extra */","  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,","  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78","];","","var dbase = [ /* Distance codes 0..29 base */","  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,","  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,","  8193, 12289, 16385, 24577, 0, 0","];","","var dext = [ /* Distance codes 0..29 extra */","  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,","  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,","  28, 28, 29, 29, 64, 64","];","","module.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)","{","  var bits = opts.bits;","      //here = opts.here; /* table entry for duplication */","","  var len = 0;               /* a code's length in bits */","  var sym = 0;               /* index of code symbols */","  var min = 0, max = 0;          /* minimum and maximum code lengths */","  var root = 0;              /* number of index bits for root table */","  var curr = 0;              /* number of index bits for current table */","  var drop = 0;              /* code bits to drop for sub-table */","  var left = 0;                   /* number of prefix codes available */","  var used = 0;              /* code entries in table used */","  var huff = 0;              /* Huffman code */","  var incr;              /* for incrementing code, index */","  var fill;              /* index for replicating entries */","  var low;               /* low bits for current root entry */","  var mask;              /* mask for low root bits */","  var next;             /* next available space in table */","  var base = null;     /* base value table to use */","  var base_index = 0;","//  var shoextra;    /* extra bits table to use */","  var end;                    /* use base and extra for symbol > end */","  var count = new utils.Buf16(MAXBITS+1); //[MAXBITS+1];    /* number of codes of each length */","  var offs = new utils.Buf16(MAXBITS+1); //[MAXBITS+1];     /* offsets in table for each length */","  var extra = null;","  var extra_index = 0;","","  var here_bits, here_op, here_val;","","  /*","   Process a set of code lengths to create a canonical Huffman code.  The","   code lengths are lens[0..codes-1].  Each length corresponds to the","   symbols 0..codes-1.  The Huffman code is generated by first sorting the","   symbols by length from short to long, and retaining the symbol order","   for codes with equal lengths.  Then the code starts with all zero bits","   for the first code of the shortest length, and the codes are integer","   increments for the same length, and zeros are appended as the length","   increases.  For the deflate format, these bits are stored backwards","   from their more natural integer increment ordering, and so when the","   decoding tables are built in the large loop below, the integer codes","   are incremented backwards.","","   This routine assumes, but does not check, that all of the entries in","   lens[] are in the range 0..MAXBITS.  The caller must assure this.","   1..MAXBITS is interpreted as that code length.  zero means that that","   symbol does not occur in this code.","","   The codes are sorted by computing a count of codes for each length,","   creating from that a table of starting indices for each length in the","   sorted table, and then entering the symbols in order in the sorted","   table.  The sorted table is work[], with that space being provided by","   the caller.","","   The length counts are used for other purposes as well, i.e. finding","   the minimum and maximum length codes, determining if there are any","   codes at all, checking for a valid set of lengths, and looking ahead","   at length counts to determine sub-table sizes when building the","   decoding tables.","   */","","  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */","  for (len = 0; len <= MAXBITS; len++) {","    count[len] = 0;","  }","  for (sym = 0; sym < codes; sym++) {","    count[lens[lens_index + sym]]++;","  }","","  /* bound code lengths, force root to be within code lengths */","  root = bits;","  for (max = MAXBITS; max >= 1; max--) {","    if (count[max] !== 0) { break; }","  }","  if (root > max) {","    root = max;","  }","  if (max === 0) {                     /* no symbols to code at all */","    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */","    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;","    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;","    table[table_index++] = (1 << 24) | (64 << 16) | 0;","","","    //table.op[opts.table_index] = 64;","    //table.bits[opts.table_index] = 1;","    //table.val[opts.table_index++] = 0;","    table[table_index++] = (1 << 24) | (64 << 16) | 0;","","    opts.bits = 1;","    return 0;     /* no symbols, but wait for decoding to report error */","  }","  for (min = 1; min < max; min++) {","    if (count[min] !== 0) { break; }","  }","  if (root < min) {","    root = min;","  }","","  /* check for an over-subscribed or incomplete set of lengths */","  left = 1;","  for (len = 1; len <= MAXBITS; len++) {","    left <<= 1;","    left -= count[len];","    if (left < 0) {","      return -1;","    }        /* over-subscribed */","  }","  if (left > 0 && (type === CODES || max !== 1)) {","    return -1;                      /* incomplete set */","  }","","  /* generate offsets into symbol table for each length for sorting */","  offs[1] = 0;","  for (len = 1; len < MAXBITS; len++) {","    offs[len + 1] = offs[len] + count[len];","  }","","  /* sort symbols by length, by symbol order within each length */","  for (sym = 0; sym < codes; sym++) {","    if (lens[lens_index + sym] !== 0) {","      work[offs[lens[lens_index + sym]]++] = sym;","    }","  }","","  /*","   Create and fill in decoding tables.  In this loop, the table being","   filled is at next and has curr index bits.  The code being used is huff","   with length len.  That code is converted to an index by dropping drop","   bits off of the bottom.  For codes where len is less than drop + curr,","   those top drop + curr - len bits are incremented through all values to","   fill the table with replicated entries.","","   root is the number of index bits for the root table.  When len exceeds","   root, sub-tables are created pointed to by the root entry with an index","   of the low root bits of huff.  This is saved in low to check for when a","   new sub-table should be started.  drop is zero when the root table is","   being filled, and drop is root when sub-tables are being filled.","","   When a new sub-table is needed, it is necessary to look ahead in the","   code lengths to determine what size sub-table is needed.  The length","   counts are used for this, and so count[] is decremented as codes are","   entered in the tables.","","   used keeps track of how many table entries have been allocated from the","   provided *table space.  It is checked for LENS and DIST tables against","   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in","   the initial root table size constants.  See the comments in inftrees.h","   for more information.","","   sym increments through all symbols, and the loop terminates when","   all codes of length max, i.e. all codes, have been processed.  This","   routine permits incomplete codes, so another loop after this one fills","   in the rest of the decoding tables with invalid code markers.","   */","","  /* set up for code type */","  // poor man optimization - use if-else instead of switch,","  // to avoid deopts in old v8","  if (type === CODES) {","    base = extra = work;    /* dummy value--not used */","    end = 19;","","  } else if (type === LENS) {","    base = lbase;","    base_index -= 257;","    extra = lext;","    extra_index -= 257;","    end = 256;","","  } else {                    /* DISTS */","    base = dbase;","    extra = dext;","    end = -1;","  }","","  /* initialize opts for loop */","  huff = 0;                   /* starting code */","  sym = 0;                    /* starting code symbol */","  len = min;                  /* starting code length */","  next = table_index;              /* current table to fill in */","  curr = root;                /* current table index bits */","  drop = 0;                   /* current bits to drop from code for index */","  low = -1;                   /* trigger new sub-table when len > root */","  used = 1 << root;          /* use root table entries */","  mask = used - 1;            /* mask for comparing low */","","  /* check available table space */","  if ((type === LENS && used > ENOUGH_LENS) ||","    (type === DISTS && used > ENOUGH_DISTS)) {","    return 1;","  }","","  var i=0;","  /* process all codes and make table entries */","  for (;;) {","    i++;","    /* create table entry */","    here_bits = len - drop;","    if (work[sym] < end) {","      here_op = 0;","      here_val = work[sym];","    }","    else if (work[sym] > end) {","      here_op = extra[extra_index + work[sym]];","      here_val = base[base_index + work[sym]];","    }","    else {","      here_op = 32 + 64;         /* end of block */","      here_val = 0;","    }","","    /* replicate for those indices with low len bits equal to huff */","    incr = 1 << (len - drop);","    fill = 1 << curr;","    min = fill;                 /* save offset to next table */","    do {","      fill -= incr;","      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;","    } while (fill !== 0);","","    /* backwards increment the len-bit code huff */","    incr = 1 << (len - 1);","    while (huff & incr) {","      incr >>= 1;","    }","    if (incr !== 0) {","      huff &= incr - 1;","      huff += incr;","    } else {","      huff = 0;","    }","","    /* go to next symbol, update count, len */","    sym++;","    if (--count[len] === 0) {","      if (len === max) { break; }","      len = lens[lens_index + work[sym]];","    }","","    /* create new sub-table if needed */","    if (len > root && (huff & mask) !== low) {","      /* if first time, transition to sub-tables */","      if (drop === 0) {","        drop = root;","      }","","      /* increment past last table */","      next += min;            /* here min is 1 << curr */","","      /* determine length of next table */","      curr = len - drop;","      left = 1 << curr;","      while (curr + drop < max) {","        left -= count[curr + drop];","        if (left <= 0) { break; }","        curr++;","        left <<= 1;","      }","","      /* check for enough space */","      used += 1 << curr;","      if ((type === LENS && used > ENOUGH_LENS) ||","        (type === DISTS && used > ENOUGH_DISTS)) {","        return 1;","      }","","      /* point entry in root table to sub-table */","      low = huff & mask;","      /*table.op[low] = curr;","      table.bits[low] = root;","      table.val[low] = next - opts.table_index;*/","      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;","    }","  }","","  /* fill in remaining table entry if code is incomplete (guaranteed to have","   at most one remaining entry, since if the code is incomplete, the","   maximum code length that was allowed to get this far is one bit) */","  if (huff !== 0) {","    //table.op[next + huff] = 64;            /* invalid code marker */","    //table.bits[next + huff] = len - drop;","    //table.val[next + huff] = 0;","    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;","  }","","  /* set return parameters */","  //opts.table_index += used;","  opts.bits = root;","  return 0;","};",""],"l":{"4":1,"6":1,"7":1,"8":1,"11":1,"12":1,"13":1,"15":1,"20":1,"25":1,"31":1,"37":1,"39":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"59":0,"60":0,"61":0,"62":0,"63":0,"65":0,"99":0,"100":0,"102":0,"103":0,"107":0,"108":0,"109":0,"111":0,"112":0,"114":0,"118":0,"124":0,"126":0,"127":0,"129":0,"130":0,"132":0,"133":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"145":0,"146":0,"150":0,"151":0,"152":0,"156":0,"157":0,"158":0,"196":0,"197":0,"198":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"208":0,"209":0,"210":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"225":0,"227":0,"230":0,"232":0,"233":0,"235":0,"236":0,"237":0,"238":0,"240":0,"241":0,"242":0,"245":0,"246":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"259":0,"260":0,"261":0,"263":0,"264":0,"265":0,"267":0,"271":0,"272":0,"273":0,"274":0,"278":0,"280":0,"281":0,"285":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"298":0,"299":0,"301":0,"305":0,"309":0,"316":0,"320":0,"325":0,"326":0}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/zlib/constants.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/zlib/constants.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":47,"column":2}}},"branchMap":{},"code":["module.exports = {","","  /* Allowed flush values; see deflate() and inflate() below for details */","  Z_NO_FLUSH:         0,","  Z_PARTIAL_FLUSH:    1,","  Z_SYNC_FLUSH:       2,","  Z_FULL_FLUSH:       3,","  Z_FINISH:           4,","  Z_BLOCK:            5,","  Z_TREES:            6,","","  /* Return codes for the compression/decompression functions. Negative values","  * are errors, positive values are used for special but normal events.","  */","  Z_OK:               0,","  Z_STREAM_END:       1,","  Z_NEED_DICT:        2,","  Z_ERRNO:           -1,","  Z_STREAM_ERROR:    -2,","  Z_DATA_ERROR:      -3,","  //Z_MEM_ERROR:     -4,","  Z_BUF_ERROR:       -5,","  //Z_VERSION_ERROR: -6,","","  /* compression levels */","  Z_NO_COMPRESSION:         0,","  Z_BEST_SPEED:             1,","  Z_BEST_COMPRESSION:       9,","  Z_DEFAULT_COMPRESSION:   -1,","","","  Z_FILTERED:               1,","  Z_HUFFMAN_ONLY:           2,","  Z_RLE:                    3,","  Z_FIXED:                  4,","  Z_DEFAULT_STRATEGY:       0,","","  /* Possible values of the data_type field (though see inflate()) */","  Z_BINARY:                 0,","  Z_TEXT:                   1,","  //Z_ASCII:                1, // = Z_TEXT (deprecated)","  Z_UNKNOWN:                2,","","  /* The deflate compression method */","  Z_DEFLATED:               8","  //Z_NULL:                 null // Use -1 or null inline, depending on var type","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/zlib/gzheader.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/node_modules/pako/lib/zlib/gzheader.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"GZheader","line":4,"loc":{"start":{"line":4,"column":0},"end":{"line":4,"column":20}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":38,"column":1}},"2":{"start":{"line":6,"column":2},"end":{"line":6,"column":22}},"3":{"start":{"line":8,"column":2},"end":{"line":8,"column":22}},"4":{"start":{"line":10,"column":2},"end":{"line":10,"column":22}},"5":{"start":{"line":12,"column":2},"end":{"line":12,"column":22}},"6":{"start":{"line":14,"column":2},"end":{"line":14,"column":25}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":22}},"8":{"start":{"line":27,"column":2},"end":{"line":27,"column":23}},"9":{"start":{"line":31,"column":2},"end":{"line":31,"column":23}},"10":{"start":{"line":35,"column":2},"end":{"line":35,"column":22}},"11":{"start":{"line":37,"column":2},"end":{"line":37,"column":26}},"12":{"start":{"line":40,"column":0},"end":{"line":40,"column":26}}},"branchMap":{},"code":["'use strict';","","","function GZheader() {","  /* true if compressed data believed to be text */","  this.text       = 0;","  /* modification time */","  this.time       = 0;","  /* extra flags (not used when writing a gzip file) */","  this.xflags     = 0;","  /* operating system */","  this.os         = 0;","  /* pointer to extra field or Z_NULL if none */","  this.extra      = null;","  /* extra field length (valid if extra != Z_NULL) */","  this.extra_len  = 0; // Actually, we don't need it in JS,","                       // but leave for few code modifications","","  //","  // Setup limits is not necessary because in js we should not preallocate memory","  // for inflate use constant limit in 65536 bytes","  //","","  /* space at extra (only when reading header) */","  // this.extra_max  = 0;","  /* pointer to zero-terminated file name or Z_NULL */","  this.name       = '';","  /* space at name (only when reading header) */","  // this.name_max   = 0;","  /* pointer to zero-terminated comment or Z_NULL */","  this.comment    = '';","  /* space at comment (only when reading header) */","  // this.comm_max   = 0;","  /* true if there was or will be a header crc */","  this.hcrc       = 0;","  /* true when done reading gzip header (not used when writing a gzip file) */","  this.done       = false;","}","","module.exports = GZheader;",""],"l":{"4":1,"6":0,"8":0,"10":0,"12":0,"14":0,"16":0,"27":0,"31":0,"35":0,"37":0,"40":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/nodeBuffer.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/nodeBuffer.js","s":{"1":1,"2":0,"3":1,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":2,"loc":{"start":{"line":2,"column":17},"end":{"line":2,"column":41}}},"2":{"name":"(anonymous_2)","line":5,"loc":{"start":{"line":5,"column":22},"end":{"line":5,"column":33}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":4,"column":2}},"2":{"start":{"line":3,"column":4},"end":{"line":3,"column":38}},"3":{"start":{"line":5,"column":0},"end":{"line":7,"column":2}},"4":{"start":{"line":6,"column":4},"end":{"line":6,"column":30}}},"branchMap":{},"code":["'use strict';","module.exports = function(data, encoding){","    return new Buffer(data, encoding);","};","module.exports.test = function(b){","    return Buffer.isBuffer(b);","};",""],"l":{"2":1,"3":0,"5":1,"6":0}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/crc32.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/crc32.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"crc32","line":78,"loc":{"start":{"line":78,"column":17},"end":{"line":78,"column":44}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":5,"column":0},"end":{"line":70,"column":2}},"3":{"start":{"line":78,"column":0},"end":{"line":101,"column":2}},"4":{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},"5":{"start":{"line":80,"column":8},"end":{"line":80,"column":17}},"6":{"start":{"line":83,"column":4},"end":{"line":83,"column":54}},"7":{"start":{"line":85,"column":4},"end":{"line":87,"column":5}},"8":{"start":{"line":86,"column":8},"end":{"line":86,"column":16}},"9":{"start":{"line":88,"column":4},"end":{"line":88,"column":14}},"10":{"start":{"line":89,"column":4},"end":{"line":89,"column":14}},"11":{"start":{"line":90,"column":4},"end":{"line":90,"column":14}},"12":{"start":{"line":92,"column":4},"end":{"line":92,"column":21}},"13":{"start":{"line":93,"column":4},"end":{"line":98,"column":5}},"14":{"start":{"line":94,"column":8},"end":{"line":94,"column":53}},"15":{"start":{"line":95,"column":8},"end":{"line":95,"column":29}},"16":{"start":{"line":96,"column":8},"end":{"line":96,"column":21}},"17":{"start":{"line":97,"column":8},"end":{"line":97,"column":30}},"18":{"start":{"line":100,"column":4},"end":{"line":100,"column":22}}},"branchMap":{"1":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]},"2":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":8},"end":{"line":79,"column":36}},{"start":{"line":79,"column":40},"end":{"line":79,"column":53}}]},"3":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":85,"column":4}},{"start":{"line":85,"column":4},"end":{"line":85,"column":4}}]},"4":{"line":94,"type":"cond-expr","locations":[{"start":{"line":94,"column":22},"end":{"line":94,"column":30}},{"start":{"line":94,"column":33},"end":{"line":94,"column":52}}]}},"code":["'use strict';","","var utils = require('./utils');","","var table = [","    0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA,","    0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3,","    0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988,","    0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91,","    0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE,","    0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7,","    0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC,","    0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5,","    0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172,","    0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B,","    0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940,","    0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59,","    0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116,","    0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F,","    0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924,","    0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D,","    0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A,","    0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433,","    0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818,","    0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01,","    0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E,","    0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457,","    0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C,","    0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65,","    0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2,","    0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB,","    0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0,","    0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9,","    0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086,","    0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F,","    0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4,","    0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD,","    0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A,","    0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683,","    0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8,","    0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1,","    0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE,","    0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7,","    0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC,","    0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5,","    0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252,","    0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B,","    0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60,","    0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79,","    0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236,","    0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F,","    0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04,","    0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D,","    0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A,","    0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713,","    0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38,","    0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21,","    0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E,","    0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777,","    0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C,","    0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45,","    0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2,","    0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB,","    0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0,","    0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9,","    0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6,","    0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF,","    0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94,","    0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D","];","","/**"," *"," *  Javascript crc32"," *  http://www.webtoolkit.info/"," *"," */","module.exports = function crc32(input, crc) {","    if (typeof input === \"undefined\" || !input.length) {","        return 0;","    }","","    var isArray = utils.getTypeOf(input) !== \"string\";","","    if (typeof(crc) == \"undefined\") {","        crc = 0;","    }","    var x = 0;","    var y = 0;","    var b = 0;","","    crc = crc ^ (-1);","    for (var i = 0, iTop = input.length; i < iTop; i++) {","        b = isArray ? input[i] : input.charCodeAt(i);","        y = (crc ^ b) & 0xFF;","        x = table[y];","        crc = (crc >>> 8) ^ x;","    }","","    return crc ^ (-1);","};","// vim: set shiftwidth=4 softtabstop=4:",""],"l":{"3":1,"5":1,"78":1,"79":0,"80":0,"83":0,"85":0,"86":0,"88":0,"89":0,"90":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"100":0}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/signature.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/signature.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":41}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":43}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":45}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":55}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":51}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":39}}},"branchMap":{},"code":["'use strict';","exports.LOCAL_FILE_HEADER = \"PK\\x03\\x04\";","exports.CENTRAL_FILE_HEADER = \"PK\\x01\\x02\";","exports.CENTRAL_DIRECTORY_END = \"PK\\x05\\x06\";","exports.ZIP64_CENTRAL_DIRECTORY_LOCATOR = \"PK\\x06\\x07\";","exports.ZIP64_CENTRAL_DIRECTORY_END = \"PK\\x06\\x06\";","exports.DATA_DESCRIPTOR = \"PK\\x07\\x08\";",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/defaults.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/defaults.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":23}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":20}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":30}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":20}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":27}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":23}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":31}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":30}}},"branchMap":{},"code":["'use strict';","exports.base64 = false;","exports.binary = false;","exports.dir = false;","exports.createFolders = false;","exports.date = null;","exports.compression = null;","exports.compressionOptions = null;","exports.comment = null;","exports.unixPermissions = null;","exports.dosPermissions = null;",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/compressedObject.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/compressedObject.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":1},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"CompressedObject","line":2,"loc":{"start":{"line":2,"column":0},"end":{"line":2,"column":28}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":16},"end":{"line":16,"column":27}}},"3":{"name":"(anonymous_3)","line":24,"loc":{"start":{"line":24,"column":26},"end":{"line":24,"column":37}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":8,"column":1}},"2":{"start":{"line":3,"column":4},"end":{"line":3,"column":28}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":30}},"4":{"start":{"line":5,"column":4},"end":{"line":5,"column":19}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":34}},"6":{"start":{"line":7,"column":4},"end":{"line":7,"column":34}},"7":{"start":{"line":10,"column":0},"end":{"line":27,"column":2}},"8":{"start":{"line":17,"column":8},"end":{"line":17,"column":20}},"9":{"start":{"line":25,"column":8},"end":{"line":25,"column":20}},"10":{"start":{"line":28,"column":0},"end":{"line":28,"column":34}}},"branchMap":{},"code":["'use strict';","function CompressedObject() {","    this.compressedSize = 0;","    this.uncompressedSize = 0;","    this.crc32 = 0;","    this.compressionMethod = null;","    this.compressedContent = null;","}","","CompressedObject.prototype = {","    /**","     * Return the decompressed content in an unspecified format.","     * The format will depend on the decompressor.","     * @return {Object} the decompressed content.","     */","    getContent: function() {","        return null; // see implementation","    },","    /**","     * Return the compressed content in an unspecified format.","     * The format will depend on the compressed conten source.","     * @return {Object} the compressed content.","     */","    getCompressedContent: function() {","        return null; // see implementation","    }","};","module.exports = CompressedObject;",""],"l":{"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"10":1,"17":0,"25":0,"28":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/utf8.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/utf8.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":256,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0},"b":{"1":[4,252],"2":[4,248],"3":[8,240],"4":[16,224],"5":[32,192],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":22,"loc":{"start":{"line":22,"column":17},"end":{"line":22,"column":32}}},"2":{"name":"(anonymous_2)","line":85,"loc":{"start":{"line":85,"column":17},"end":{"line":85,"column":36}}},"3":{"name":"(anonymous_3)","line":107,"loc":{"start":{"line":107,"column":17},"end":{"line":107,"column":32}}},"4":{"name":"utf8encode","line":168,"loc":{"start":{"line":168,"column":21},"end":{"line":168,"column":46}}},"5":{"name":"utf8decode","line":183,"loc":{"start":{"line":183,"column":21},"end":{"line":183,"column":46}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":41}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":30}},"5":{"start":{"line":16,"column":0},"end":{"line":18,"column":1}},"6":{"start":{"line":17,"column":2},"end":{"line":17,"column":95}},"7":{"start":{"line":19,"column":0},"end":{"line":19,"column":30}},"8":{"start":{"line":22,"column":0},"end":{"line":77,"column":2}},"9":{"start":{"line":23,"column":4},"end":{"line":23,"column":64}},"10":{"start":{"line":26,"column":4},"end":{"line":36,"column":5}},"11":{"start":{"line":27,"column":8},"end":{"line":27,"column":34}},"12":{"start":{"line":28,"column":8},"end":{"line":34,"column":9}},"13":{"start":{"line":29,"column":12},"end":{"line":29,"column":41}},"14":{"start":{"line":30,"column":12},"end":{"line":33,"column":13}},"15":{"start":{"line":31,"column":16},"end":{"line":31,"column":67}},"16":{"start":{"line":32,"column":16},"end":{"line":32,"column":24}},"17":{"start":{"line":35,"column":8},"end":{"line":35,"column":70}},"18":{"start":{"line":39,"column":4},"end":{"line":43,"column":5}},"19":{"start":{"line":40,"column":8},"end":{"line":40,"column":38}},"20":{"start":{"line":42,"column":8},"end":{"line":42,"column":33}},"21":{"start":{"line":46,"column":4},"end":{"line":74,"column":5}},"22":{"start":{"line":47,"column":8},"end":{"line":47,"column":34}},"23":{"start":{"line":48,"column":8},"end":{"line":54,"column":9}},"24":{"start":{"line":49,"column":12},"end":{"line":49,"column":41}},"25":{"start":{"line":50,"column":12},"end":{"line":53,"column":13}},"26":{"start":{"line":51,"column":16},"end":{"line":51,"column":67}},"27":{"start":{"line":52,"column":16},"end":{"line":52,"column":24}},"28":{"start":{"line":55,"column":8},"end":{"line":73,"column":9}},"29":{"start":{"line":57,"column":12},"end":{"line":57,"column":25}},"30":{"start":{"line":58,"column":15},"end":{"line":73,"column":9}},"31":{"start":{"line":60,"column":12},"end":{"line":60,"column":40}},"32":{"start":{"line":61,"column":12},"end":{"line":61,"column":41}},"33":{"start":{"line":62,"column":15},"end":{"line":73,"column":9}},"34":{"start":{"line":64,"column":12},"end":{"line":64,"column":41}},"35":{"start":{"line":65,"column":12},"end":{"line":65,"column":47}},"36":{"start":{"line":66,"column":12},"end":{"line":66,"column":41}},"37":{"start":{"line":69,"column":12},"end":{"line":69,"column":41}},"38":{"start":{"line":70,"column":12},"end":{"line":70,"column":48}},"39":{"start":{"line":71,"column":12},"end":{"line":71,"column":47}},"40":{"start":{"line":72,"column":12},"end":{"line":72,"column":41}},"41":{"start":{"line":76,"column":4},"end":{"line":76,"column":15}},"42":{"start":{"line":85,"column":0},"end":{"line":104,"column":2}},"43":{"start":{"line":86,"column":4},"end":{"line":86,"column":12}},"44":{"start":{"line":88,"column":4},"end":{"line":88,"column":28}},"45":{"start":{"line":89,"column":4},"end":{"line":89,"column":47}},"46":{"start":{"line":89,"column":28},"end":{"line":89,"column":45}},"47":{"start":{"line":92,"column":4},"end":{"line":92,"column":16}},"48":{"start":{"line":93,"column":4},"end":{"line":93,"column":61}},"49":{"start":{"line":93,"column":53},"end":{"line":93,"column":59}},"50":{"start":{"line":97,"column":4},"end":{"line":97,"column":32}},"51":{"start":{"line":97,"column":19},"end":{"line":97,"column":30}},"52":{"start":{"line":101,"column":4},"end":{"line":101,"column":34}},"53":{"start":{"line":101,"column":21},"end":{"line":101,"column":32}},"54":{"start":{"line":103,"column":4},"end":{"line":103,"column":56}},"55":{"start":{"line":107,"column":0},"end":{"line":156,"column":2}},"56":{"start":{"line":108,"column":4},"end":{"line":108,"column":30}},"57":{"start":{"line":109,"column":4},"end":{"line":109,"column":25}},"58":{"start":{"line":114,"column":4},"end":{"line":114,"column":36}},"59":{"start":{"line":116,"column":4},"end":{"line":143,"column":5}},"60":{"start":{"line":117,"column":8},"end":{"line":117,"column":21}},"61":{"start":{"line":119,"column":8},"end":{"line":119,"column":56}},"62":{"start":{"line":119,"column":24},"end":{"line":119,"column":44}},"63":{"start":{"line":119,"column":45},"end":{"line":119,"column":54}},"64":{"start":{"line":121,"column":8},"end":{"line":121,"column":28}},"65":{"start":{"line":123,"column":8},"end":{"line":123,"column":76}},"66":{"start":{"line":123,"column":25},"end":{"line":123,"column":50}},"67":{"start":{"line":123,"column":51},"end":{"line":123,"column":64}},"68":{"start":{"line":123,"column":65},"end":{"line":123,"column":74}},"69":{"start":{"line":126,"column":8},"end":{"line":126,"column":60}},"70":{"start":{"line":128,"column":8},"end":{"line":131,"column":9}},"71":{"start":{"line":129,"column":12},"end":{"line":129,"column":45}},"72":{"start":{"line":130,"column":12},"end":{"line":130,"column":20}},"73":{"start":{"line":134,"column":8},"end":{"line":134,"column":62}},"74":{"start":{"line":134,"column":25},"end":{"line":134,"column":50}},"75":{"start":{"line":134,"column":51},"end":{"line":134,"column":60}},"76":{"start":{"line":136,"column":8},"end":{"line":142,"column":9}},"77":{"start":{"line":137,"column":12},"end":{"line":137,"column":32}},"78":{"start":{"line":139,"column":12},"end":{"line":139,"column":25}},"79":{"start":{"line":140,"column":12},"end":{"line":140,"column":59}},"80":{"start":{"line":141,"column":12},"end":{"line":141,"column":51}},"81":{"start":{"line":146,"column":4},"end":{"line":152,"column":5}},"82":{"start":{"line":147,"column":8},"end":{"line":151,"column":9}},"83":{"start":{"line":148,"column":12},"end":{"line":148,"column":49}},"84":{"start":{"line":150,"column":12},"end":{"line":150,"column":34}},"85":{"start":{"line":155,"column":4},"end":{"line":155,"column":45}},"86":{"start":{"line":168,"column":0},"end":{"line":174,"column":2}},"87":{"start":{"line":169,"column":4},"end":{"line":171,"column":5}},"88":{"start":{"line":170,"column":8},"end":{"line":170,"column":40}},"89":{"start":{"line":173,"column":4},"end":{"line":173,"column":27}},"90":{"start":{"line":183,"column":0},"end":{"line":206,"column":2}},"91":{"start":{"line":184,"column":4},"end":{"line":186,"column":5}},"92":{"start":{"line":185,"column":8},"end":{"line":185,"column":70}},"93":{"start":{"line":188,"column":4},"end":{"line":188,"column":78}},"94":{"start":{"line":194,"column":4},"end":{"line":194,"column":60}},"95":{"start":{"line":195,"column":4},"end":{"line":203,"column":5}},"96":{"start":{"line":196,"column":8},"end":{"line":196,"column":69}},"97":{"start":{"line":197,"column":8},"end":{"line":201,"column":9}},"98":{"start":{"line":198,"column":12},"end":{"line":198,"column":67}},"99":{"start":{"line":200,"column":12},"end":{"line":200,"column":64}},"100":{"start":{"line":202,"column":8},"end":{"line":202,"column":25}},"101":{"start":{"line":204,"column":4},"end":{"line":204,"column":27}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":28},"end":{"line":17,"column":29}},{"start":{"line":17,"column":32},"end":{"line":17,"column":93}}]},"2":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":43},"end":{"line":17,"column":44}},{"start":{"line":17,"column":47},"end":{"line":17,"column":93}}]},"3":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":58},"end":{"line":17,"column":59}},{"start":{"line":17,"column":62},"end":{"line":17,"column":93}}]},"4":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":73},"end":{"line":17,"column":74}},{"start":{"line":17,"column":77},"end":{"line":17,"column":93}}]},"5":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":88},"end":{"line":17,"column":89}},{"start":{"line":17,"column":92},"end":{"line":17,"column":93}}]},"6":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":8}},{"start":{"line":28,"column":8},"end":{"line":28,"column":8}}]},"7":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":12},"end":{"line":28,"column":35}},{"start":{"line":28,"column":40},"end":{"line":28,"column":57}}]},"8":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":12},"end":{"line":30,"column":12}},{"start":{"line":30,"column":12},"end":{"line":30,"column":12}}]},"9":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":30},"end":{"line":35,"column":31}},{"start":{"line":35,"column":34},"end":{"line":35,"column":69}}]},"10":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":46},"end":{"line":35,"column":47}},{"start":{"line":35,"column":50},"end":{"line":35,"column":69}}]},"11":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":64},"end":{"line":35,"column":65}},{"start":{"line":35,"column":68},"end":{"line":35,"column":69}}]},"12":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"13":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":48,"column":8}},{"start":{"line":48,"column":8},"end":{"line":48,"column":8}}]},"14":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},{"start":{"line":48,"column":40},"end":{"line":48,"column":57}}]},"15":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":12},"end":{"line":50,"column":12}},{"start":{"line":50,"column":12},"end":{"line":50,"column":12}}]},"16":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":8}},{"start":{"line":55,"column":8},"end":{"line":55,"column":8}}]},"17":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":15},"end":{"line":58,"column":15}},{"start":{"line":58,"column":15},"end":{"line":58,"column":15}}]},"18":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":15},"end":{"line":62,"column":15}},{"start":{"line":62,"column":15},"end":{"line":62,"column":15}}]},"19":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":10},"end":{"line":88,"column":13}},{"start":{"line":88,"column":17},"end":{"line":88,"column":27}}]},"20":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":89,"column":4}},{"start":{"line":89,"column":4},"end":{"line":89,"column":4}}]},"21":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":11},"end":{"line":93,"column":19}},{"start":{"line":93,"column":23},"end":{"line":93,"column":49}}]},"22":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":97,"column":4}},{"start":{"line":97,"column":4},"end":{"line":97,"column":4}}]},"23":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":101,"column":4}},{"start":{"line":101,"column":4},"end":{"line":101,"column":4}}]},"24":{"line":103,"type":"cond-expr","locations":[{"start":{"line":103,"column":46},"end":{"line":103,"column":49}},{"start":{"line":103,"column":52},"end":{"line":103,"column":55}}]},"25":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":8},"end":{"line":119,"column":8}},{"start":{"line":119,"column":8},"end":{"line":119,"column":8}}]},"26":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":123,"column":8}},{"start":{"line":123,"column":8},"end":{"line":123,"column":8}}]},"27":{"line":126,"type":"cond-expr","locations":[{"start":{"line":126,"column":27},"end":{"line":126,"column":31}},{"start":{"line":126,"column":34},"end":{"line":126,"column":59}}]},"28":{"line":126,"type":"cond-expr","locations":[{"start":{"line":126,"column":48},"end":{"line":126,"column":52}},{"start":{"line":126,"column":55},"end":{"line":126,"column":59}}]},"29":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":15},"end":{"line":128,"column":24}},{"start":{"line":128,"column":28},"end":{"line":128,"column":35}}]},"30":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":8},"end":{"line":134,"column":8}},{"start":{"line":134,"column":8},"end":{"line":134,"column":8}}]},"31":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":136,"column":8}},{"start":{"line":136,"column":8},"end":{"line":136,"column":8}}]},"32":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":4},"end":{"line":146,"column":4}},{"start":{"line":146,"column":4},"end":{"line":146,"column":4}}]},"33":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":8},"end":{"line":147,"column":8}},{"start":{"line":147,"column":8},"end":{"line":147,"column":8}}]},"34":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":4},"end":{"line":169,"column":4}},{"start":{"line":169,"column":4},"end":{"line":169,"column":4}}]},"35":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":4},"end":{"line":184,"column":4}},{"start":{"line":184,"column":4},"end":{"line":184,"column":4}}]},"36":{"line":188,"type":"cond-expr","locations":[{"start":{"line":188,"column":49},"end":{"line":188,"column":61}},{"start":{"line":188,"column":64},"end":{"line":188,"column":71}}]},"37":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":8},"end":{"line":197,"column":8}},{"start":{"line":197,"column":8},"end":{"line":197,"column":8}}]}},"code":["'use strict';","","var utils = require('./utils');","var support = require('./support');","var nodeBuffer = require('./nodeBuffer');","","/**"," * The following functions come from pako, from pako/lib/utils/strings"," * released under the MIT license, see pako https://github.com/nodeca/pako/"," */","","// Table with utf8 lengths (calculated by first byte of sequence)","// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,","// because max possible codepoint is 0x10ffff","var _utf8len = new Array(256);","for (var i=0; i<256; i++) {","  _utf8len[i] = (i >= 252 ? 6 : i >= 248 ? 5 : i >= 240 ? 4 : i >= 224 ? 3 : i >= 192 ? 2 : 1);","}","_utf8len[254]=_utf8len[254]=1; // Invalid sequence start","","// convert string to array (typed, when possible)","var string2buf = function (str) {","    var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;","","    // count binary size","    for (m_pos = 0; m_pos < str_len; m_pos++) {","        c = str.charCodeAt(m_pos);","        if ((c & 0xfc00) === 0xd800 && (m_pos+1 < str_len)) {","            c2 = str.charCodeAt(m_pos+1);","            if ((c2 & 0xfc00) === 0xdc00) {","                c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);","                m_pos++;","            }","        }","        buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;","    }","","    // allocate buffer","    if (support.uint8array) {","        buf = new Uint8Array(buf_len);","    } else {","        buf = new Array(buf_len);","    }","","    // convert","    for (i=0, m_pos = 0; i < buf_len; m_pos++) {","        c = str.charCodeAt(m_pos);","        if ((c & 0xfc00) === 0xd800 && (m_pos+1 < str_len)) {","            c2 = str.charCodeAt(m_pos+1);","            if ((c2 & 0xfc00) === 0xdc00) {","                c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);","                m_pos++;","            }","        }","        if (c < 0x80) {","            /* one byte */","            buf[i++] = c;","        } else if (c < 0x800) {","            /* two bytes */","            buf[i++] = 0xC0 | (c >>> 6);","            buf[i++] = 0x80 | (c & 0x3f);","        } else if (c < 0x10000) {","            /* three bytes */","            buf[i++] = 0xE0 | (c >>> 12);","            buf[i++] = 0x80 | (c >>> 6 & 0x3f);","            buf[i++] = 0x80 | (c & 0x3f);","        } else {","            /* four bytes */","            buf[i++] = 0xf0 | (c >>> 18);","            buf[i++] = 0x80 | (c >>> 12 & 0x3f);","            buf[i++] = 0x80 | (c >>> 6 & 0x3f);","            buf[i++] = 0x80 | (c & 0x3f);","        }","    }","","    return buf;","};","","// Calculate max possible position in utf8 buffer,","// that will not break sequence. If that's not possible","// - (very small limits) return max size as is.","//","// buf[] - utf8 bytes array","// max   - length limit (mandatory);","var utf8border = function(buf, max) {","    var pos;","","    max = max || buf.length;","    if (max > buf.length) { max = buf.length; }","","    // go back from last position, until start of sequence found","    pos = max-1;","    while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }","","    // Fuckup - very small and broken sequence,","    // return max, because we should return something anyway.","    if (pos < 0) { return max; }","","    // If we came to start of buffer - that means vuffer is too small,","    // return max too.","    if (pos === 0) { return max; }","","    return (pos + _utf8len[buf[pos]] > max) ? pos : max;","};","","// convert array to string","var buf2string = function (buf) {","    var str, i, out, c, c_len;","    var len = buf.length;","","    // Reserve max possible length (2 words per char)","    // NB: by unknown reasons, Array is significantly faster for","    //     String.fromCharCode.apply than Uint16Array.","    var utf16buf = new Array(len*2);","","    for (out=0, i=0; i<len;) {","        c = buf[i++];","        // quick process ascii","        if (c < 0x80) { utf16buf[out++] = c; continue; }","","        c_len = _utf8len[c];","        // skip 5 & 6 byte codes","        if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len-1; continue; }","","        // apply mask on first byte","        c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;","        // join the rest","        while (c_len > 1 && i < len) {","            c = (c << 6) | (buf[i++] & 0x3f);","            c_len--;","        }","","        // terminated by end of string?","        if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }","","        if (c < 0x10000) {","            utf16buf[out++] = c;","        } else {","            c -= 0x10000;","            utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);","            utf16buf[out++] = 0xdc00 | (c & 0x3ff);","        }","    }","","    // shrinkBuf(utf16buf, out)","    if (utf16buf.length !== out) {","        if(utf16buf.subarray) {","            utf16buf = utf16buf.subarray(0, out);","        } else {","            utf16buf.length = out;","        }","    }","","    // return String.fromCharCode.apply(null, utf16buf);","    return utils.applyFromCharCode(utf16buf);","};","","","// That's all for the pako functions.","","","/**"," * Transform a javascript string into an array (typed if possible) of bytes,"," * UTF-8 encoded."," * @param {String} str the string to encode"," * @return {Array|Uint8Array|Buffer} the UTF-8 encoded string."," */","exports.utf8encode = function utf8encode(str) {","    if (support.nodebuffer) {","        return nodeBuffer(str, \"utf-8\");","    }","","    return string2buf(str);","};","","","/**"," * Transform a bytes array (or a representation) representing an UTF-8 encoded"," * string into a javascript string."," * @param {Array|Uint8Array|Buffer} buf the data de decode"," * @return {String} the decoded string."," */","exports.utf8decode = function utf8decode(buf) {","    if (support.nodebuffer) {","        return utils.transformTo(\"nodebuffer\", buf).toString(\"utf-8\");","    }","","    buf = utils.transformTo(support.uint8array ? \"uint8array\" : \"array\", buf);","","    // return buf2string(buf);","    // Chrome prefers to work with \"small\" chunks of data","    // for the method buf2string.","    // Firefox and Chrome has their own shortcut, IE doesn't seem to really care.","    var result = [], k = 0, len = buf.length, chunk = 65536;","    while (k < len) {","        var nextBoundary = utf8border(buf, Math.min(k + chunk, len));","        if (support.uint8array) {","            result.push(buf2string(buf.subarray(k, nextBoundary)));","        } else {","            result.push(buf2string(buf.slice(k, nextBoundary)));","        }","        k = nextBoundary;","    }","    return result.join(\"\");","","};","// vim: set shiftwidth=4 softtabstop=4:",""],"l":{"3":1,"4":1,"5":1,"15":1,"16":1,"17":256,"19":1,"22":1,"23":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"35":0,"39":0,"40":0,"42":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"55":0,"57":0,"58":0,"60":0,"61":0,"62":0,"64":0,"65":0,"66":0,"69":0,"70":0,"71":0,"72":0,"76":0,"85":1,"86":0,"88":0,"89":0,"92":0,"93":0,"97":0,"101":0,"103":0,"107":1,"108":0,"109":0,"114":0,"116":0,"117":0,"119":0,"121":0,"123":0,"126":0,"128":0,"129":0,"130":0,"134":0,"136":0,"137":0,"139":0,"140":0,"141":0,"146":0,"147":0,"148":0,"150":0,"155":0,"168":1,"169":0,"170":0,"173":0,"183":1,"184":0,"185":0,"188":0,"194":0,"195":0,"196":0,"197":0,"198":0,"200":0,"202":0,"204":0}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/stringWriter.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/stringWriter.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":1},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":19},"end":{"line":9,"column":30}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":12},"end":{"line":17,"column":28}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":14},"end":{"line":25,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":9,"column":0},"end":{"line":11,"column":2}},"3":{"start":{"line":10,"column":4},"end":{"line":10,"column":19}},"4":{"start":{"line":12,"column":0},"end":{"line":28,"column":2}},"5":{"start":{"line":18,"column":8},"end":{"line":18,"column":51}},"6":{"start":{"line":19,"column":8},"end":{"line":19,"column":30}},"7":{"start":{"line":26,"column":8},"end":{"line":26,"column":34}},"8":{"start":{"line":30,"column":0},"end":{"line":30,"column":30}}},"branchMap":{},"code":["'use strict';","","var utils = require('./utils');","","/**"," * An object to write any content to a string."," * @constructor"," */","var StringWriter = function() {","    this.data = [];","};","StringWriter.prototype = {","    /**","     * Append any content to the current string.","     * @param {Object} input the content to add.","     */","    append: function(input) {","        input = utils.transformTo(\"string\", input);","        this.data.push(input);","    },","    /**","     * Finalize the construction an return the result.","     * @return {string} the generated string.","     */","    finalize: function() {","        return this.data.join(\"\");","    }","};","","module.exports = StringWriter;",""],"l":{"3":1,"9":1,"10":0,"12":1,"18":0,"19":0,"26":0,"30":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/uint8ArrayWriter.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/uint8ArrayWriter.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":23},"end":{"line":10,"column":40}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":12},"end":{"line":19,"column":28}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":14},"end":{"line":31,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":10,"column":0},"end":{"line":13,"column":2}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":39}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":19}},"5":{"start":{"line":14,"column":0},"end":{"line":34,"column":2}},"6":{"start":{"line":20,"column":8},"end":{"line":25,"column":9}},"7":{"start":{"line":22,"column":12},"end":{"line":22,"column":59}},"8":{"start":{"line":23,"column":12},"end":{"line":23,"column":45}},"9":{"start":{"line":24,"column":12},"end":{"line":24,"column":39}},"10":{"start":{"line":32,"column":8},"end":{"line":32,"column":25}},"11":{"start":{"line":36,"column":0},"end":{"line":36,"column":34}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":20,"column":8}},{"start":{"line":20,"column":8},"end":{"line":20,"column":8}}]}},"code":["'use strict';","","var utils = require('./utils');","","/**"," * An object to write any content to an Uint8Array."," * @constructor"," * @param {number} length The length of the array."," */","var Uint8ArrayWriter = function(length) {","    this.data = new Uint8Array(length);","    this.index = 0;","};","Uint8ArrayWriter.prototype = {","    /**","     * Append any content to the current array.","     * @param {Object} input the content to add.","     */","    append: function(input) {","        if (input.length !== 0) {","            // with an empty Uint8Array, Opera fails with a \"Offset larger than array size\"","            input = utils.transformTo(\"uint8array\", input);","            this.data.set(input, this.index);","            this.index += input.length;","        }","    },","    /**","     * Finalize the construction an return the result.","     * @return {Uint8Array} the generated array.","     */","    finalize: function() {","        return this.data;","    }","};","","module.exports = Uint8ArrayWriter;",""],"l":{"3":1,"10":1,"11":0,"12":0,"14":1,"20":0,"22":0,"23":0,"24":0,"32":0,"36":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/load.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/load.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":17},"end":{"line":4,"column":41}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":41}},"3":{"start":{"line":4,"column":0},"end":{"line":31,"column":2}},"4":{"start":{"line":5,"column":4},"end":{"line":5,"column":36}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":28}},"6":{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},"7":{"start":{"line":8,"column":8},"end":{"line":8,"column":35}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":47}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":29}},"10":{"start":{"line":13,"column":4},"end":{"line":25,"column":5}},"11":{"start":{"line":14,"column":8},"end":{"line":14,"column":25}},"12":{"start":{"line":15,"column":8},"end":{"line":24,"column":11}},"13":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"14":{"start":{"line":27,"column":8},"end":{"line":27,"column":45}},"15":{"start":{"line":30,"column":4},"end":{"line":30,"column":16}}},"branchMap":{"1":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":14},"end":{"line":6,"column":21}},{"start":{"line":6,"column":25},"end":{"line":6,"column":27}}]},"2":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":7,"column":4}},{"start":{"line":7,"column":4},"end":{"line":7,"column":4}}]},"3":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":49},"end":{"line":20,"column":66}},{"start":{"line":20,"column":69},"end":{"line":20,"column":73}}]},"4":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]}},"code":["'use strict';","var base64 = require('./base64');","var ZipEntries = require('./zipEntries');","module.exports = function(data, options) {","    var files, zipEntries, i, input;","    options = options || {};","    if (options.base64) {","        data = base64.decode(data);","    }","","    zipEntries = new ZipEntries(data, options);","    files = zipEntries.files;","    for (i = 0; i < files.length; i++) {","        input = files[i];","        this.file(input.fileName, input.decompressed, {","            binary: true,","            optimizedBinaryString: true,","            date: input.date,","            dir: input.dir,","            comment : input.fileComment.length ? input.fileComment : null,","            unixPermissions : input.unixPermissions,","            dosPermissions : input.dosPermissions,","            createFolders: options.createFolders","        });","    }","    if (zipEntries.zipComment.length) {","        this.comment = zipEntries.zipComment;","    }","","    return this;","};",""],"l":{"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"11":0,"12":0,"13":0,"14":0,"15":0,"26":0,"27":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/zipEntries.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/zipEntries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0,0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"ZipEntries","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":39}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":20},"end":{"line":30,"column":48}}},"3":{"name":"(anonymous_3)","line":39,"loc":{"start":{"line":39,"column":27},"end":{"line":39,"column":38}}},"4":{"name":"(anonymous_4)","line":62,"loc":{"start":{"line":62,"column":32},"end":{"line":62,"column":43}}},"5":{"name":"(anonymous_5)","line":93,"loc":{"start":{"line":93,"column":39},"end":{"line":93,"column":50}}},"6":{"name":"(anonymous_6)","line":104,"loc":{"start":{"line":104,"column":20},"end":{"line":104,"column":31}}},"7":{"name":"(anonymous_7)","line":118,"loc":{"start":{"line":118,"column":20},"end":{"line":118,"column":31}}},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":22},"end":{"line":133,"column":33}}},"9":{"name":"(anonymous_9)","line":197,"loc":{"start":{"line":197,"column":19},"end":{"line":197,"column":34}}},"10":{"name":"(anonymous_10)","line":213,"loc":{"start":{"line":213,"column":10},"end":{"line":213,"column":25}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":45}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":53}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":53}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":33}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":37}},"9":{"start":{"line":17,"column":0},"end":{"line":23,"column":1}},"10":{"start":{"line":18,"column":4},"end":{"line":18,"column":20}},"11":{"start":{"line":19,"column":4},"end":{"line":19,"column":35}},"12":{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},"13":{"start":{"line":21,"column":8},"end":{"line":21,"column":24}},"14":{"start":{"line":24,"column":0},"end":{"line":219,"column":2}},"15":{"start":{"line":31,"column":8},"end":{"line":31,"column":50}},"16":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"17":{"start":{"line":33,"column":12},"end":{"line":33,"column":164}},"18":{"start":{"line":40,"column":8},"end":{"line":40,"column":49}},"19":{"start":{"line":41,"column":8},"end":{"line":41,"column":62}},"20":{"start":{"line":42,"column":8},"end":{"line":42,"column":66}},"21":{"start":{"line":43,"column":8},"end":{"line":43,"column":56}},"22":{"start":{"line":44,"column":8},"end":{"line":44,"column":53}},"23":{"start":{"line":45,"column":8},"end":{"line":45,"column":55}},"24":{"start":{"line":47,"column":8},"end":{"line":47,"column":55}},"25":{"start":{"line":51,"column":8},"end":{"line":51,"column":72}},"26":{"start":{"line":54,"column":8},"end":{"line":54,"column":65}},"27":{"start":{"line":63,"column":8},"end":{"line":63,"column":60}},"28":{"start":{"line":64,"column":8},"end":{"line":64,"column":55}},"29":{"start":{"line":65,"column":8},"end":{"line":65,"column":52}},"30":{"start":{"line":66,"column":8},"end":{"line":66,"column":49}},"31":{"start":{"line":67,"column":8},"end":{"line":67,"column":62}},"32":{"start":{"line":68,"column":8},"end":{"line":68,"column":66}},"33":{"start":{"line":69,"column":8},"end":{"line":69,"column":56}},"34":{"start":{"line":70,"column":8},"end":{"line":70,"column":53}},"35":{"start":{"line":71,"column":8},"end":{"line":71,"column":55}},"36":{"start":{"line":73,"column":8},"end":{"line":73,"column":38}},"37":{"start":{"line":74,"column":8},"end":{"line":78,"column":28}},"38":{"start":{"line":79,"column":8},"end":{"line":88,"column":9}},"39":{"start":{"line":80,"column":12},"end":{"line":80,"column":50}},"40":{"start":{"line":81,"column":12},"end":{"line":81,"column":54}},"41":{"start":{"line":82,"column":12},"end":{"line":82,"column":71}},"42":{"start":{"line":83,"column":12},"end":{"line":87,"column":14}},"43":{"start":{"line":94,"column":8},"end":{"line":94,"column":67}},"44":{"start":{"line":95,"column":8},"end":{"line":95,"column":73}},"45":{"start":{"line":96,"column":8},"end":{"line":96,"column":49}},"46":{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},"47":{"start":{"line":98,"column":12},"end":{"line":98,"column":67}},"48":{"start":{"line":105,"column":8},"end":{"line":105,"column":20}},"49":{"start":{"line":106,"column":8},"end":{"line":113,"column":9}},"50":{"start":{"line":107,"column":12},"end":{"line":107,"column":33}},"51":{"start":{"line":108,"column":12},"end":{"line":108,"column":57}},"52":{"start":{"line":109,"column":12},"end":{"line":109,"column":55}},"53":{"start":{"line":110,"column":12},"end":{"line":110,"column":44}},"54":{"start":{"line":111,"column":12},"end":{"line":111,"column":30}},"55":{"start":{"line":112,"column":12},"end":{"line":112,"column":37}},"56":{"start":{"line":119,"column":8},"end":{"line":119,"column":17}},"57":{"start":{"line":121,"column":8},"end":{"line":121,"column":52}},"58":{"start":{"line":122,"column":8},"end":{"line":128,"column":9}},"59":{"start":{"line":123,"column":12},"end":{"line":125,"column":33}},"60":{"start":{"line":126,"column":12},"end":{"line":126,"column":46}},"61":{"start":{"line":127,"column":12},"end":{"line":127,"column":34}},"62":{"start":{"line":134,"column":8},"end":{"line":134,"column":81}},"63":{"start":{"line":135,"column":8},"end":{"line":154,"column":9}},"64":{"start":{"line":141,"column":12},"end":{"line":141,"column":33}},"65":{"start":{"line":142,"column":12},"end":{"line":146,"column":26}},"66":{"start":{"line":143,"column":16},"end":{"line":143,"column":40}},"67":{"start":{"line":144,"column":16},"end":{"line":144,"column":59}},"68":{"start":{"line":145,"column":16},"end":{"line":145,"column":34}},"69":{"start":{"line":148,"column":12},"end":{"line":153,"column":13}},"70":{"start":{"line":149,"column":16},"end":{"line":150,"column":111}},"71":{"start":{"line":152,"column":16},"end":{"line":152,"column":87}},"72":{"start":{"line":155,"column":8},"end":{"line":155,"column":37}},"73":{"start":{"line":156,"column":8},"end":{"line":156,"column":55}},"74":{"start":{"line":157,"column":8},"end":{"line":157,"column":37}},"75":{"start":{"line":170,"column":8},"end":{"line":195,"column":9}},"76":{"start":{"line":171,"column":12},"end":{"line":171,"column":30}},"77":{"start":{"line":183,"column":12},"end":{"line":183,"column":91}},"78":{"start":{"line":184,"column":12},"end":{"line":186,"column":13}},"79":{"start":{"line":185,"column":16},"end":{"line":185,"column":105}},"80":{"start":{"line":187,"column":12},"end":{"line":187,"column":41}},"81":{"start":{"line":188,"column":12},"end":{"line":188,"column":69}},"82":{"start":{"line":189,"column":12},"end":{"line":189,"column":53}},"83":{"start":{"line":192,"column":12},"end":{"line":192,"column":74}},"84":{"start":{"line":193,"column":12},"end":{"line":193,"column":65}},"85":{"start":{"line":194,"column":12},"end":{"line":194,"column":46}},"86":{"start":{"line":198,"column":8},"end":{"line":198,"column":41}},"87":{"start":{"line":199,"column":8},"end":{"line":207,"column":9}},"88":{"start":{"line":200,"column":12},"end":{"line":200,"column":89}},"89":{"start":{"line":202,"column":13},"end":{"line":207,"column":9}},"90":{"start":{"line":203,"column":12},"end":{"line":203,"column":53}},"91":{"start":{"line":206,"column":12},"end":{"line":206,"column":86}},"92":{"start":{"line":214,"column":8},"end":{"line":214,"column":33}},"93":{"start":{"line":215,"column":8},"end":{"line":215,"column":32}},"94":{"start":{"line":216,"column":8},"end":{"line":216,"column":30}},"95":{"start":{"line":217,"column":8},"end":{"line":217,"column":30}},"96":{"start":{"line":221,"column":0},"end":{"line":221,"column":28}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"2":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":32,"column":8}},{"start":{"line":32,"column":8},"end":{"line":32,"column":8}}]},"3":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":8},"end":{"line":97,"column":8}},{"start":{"line":97,"column":8},"end":{"line":97,"column":8}}]},"4":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":135,"column":8}},{"start":{"line":135,"column":8},"end":{"line":135,"column":8}}]},"5":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":12},"end":{"line":148,"column":12}},{"start":{"line":148,"column":12},"end":{"line":148,"column":12}}]},"6":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":8},"end":{"line":170,"column":8}},{"start":{"line":170,"column":8},"end":{"line":170,"column":8}}]},"7":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":12},"end":{"line":170,"column":54}},{"start":{"line":170,"column":58},"end":{"line":170,"column":113}},{"start":{"line":170,"column":117},"end":{"line":170,"column":176}},{"start":{"line":170,"column":180},"end":{"line":170,"column":229}},{"start":{"line":170,"column":233},"end":{"line":170,"column":279}},{"start":{"line":170,"column":283},"end":{"line":170,"column":331}}]},"8":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":12},"end":{"line":184,"column":12}},{"start":{"line":184,"column":12},"end":{"line":184,"column":12}}]},"9":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":8},"end":{"line":199,"column":8}},{"start":{"line":199,"column":8},"end":{"line":199,"column":8}}]},"10":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":12},"end":{"line":199,"column":29}},{"start":{"line":199,"column":33},"end":{"line":199,"column":52}}]},"11":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":13},"end":{"line":202,"column":13}},{"start":{"line":202,"column":13},"end":{"line":202,"column":13}}]}},"code":["'use strict';","var StringReader = require('./stringReader');","var NodeBufferReader = require('./nodeBufferReader');","var Uint8ArrayReader = require('./uint8ArrayReader');","var utils = require('./utils');","var sig = require('./signature');","var ZipEntry = require('./zipEntry');","var support = require('./support');","var jszipProto = require('./object');","//  class ZipEntries {{{","/**"," * All the entries in the zip file."," * @constructor"," * @param {String|ArrayBuffer|Uint8Array} data the binary stream to load."," * @param {Object} loadOptions Options for loading the stream."," */","function ZipEntries(data, loadOptions) {","    this.files = [];","    this.loadOptions = loadOptions;","    if (data) {","        this.load(data);","    }","}","ZipEntries.prototype = {","    /**","     * Check that the reader is on the speficied signature.","     * @param {string} expectedSignature the expected signature.","     * @throws {Error} if it is an other signature.","     */","    checkSignature: function(expectedSignature) {","        var signature = this.reader.readString(4);","        if (signature !== expectedSignature) {","            throw new Error(\"Corrupted zip or bug : unexpected signature \" + \"(\" + utils.pretty(signature) + \", expected \" + utils.pretty(expectedSignature) + \")\");","        }","    },","    /**","     * Read the end of the central directory.","     */","    readBlockEndOfCentral: function() {","        this.diskNumber = this.reader.readInt(2);","        this.diskWithCentralDirStart = this.reader.readInt(2);","        this.centralDirRecordsOnThisDisk = this.reader.readInt(2);","        this.centralDirRecords = this.reader.readInt(2);","        this.centralDirSize = this.reader.readInt(4);","        this.centralDirOffset = this.reader.readInt(4);","","        this.zipCommentLength = this.reader.readInt(2);","        // warning : the encoding depends of the system locale","        // On a linux machine with LANG=en_US.utf8, this field is utf8 encoded.","        // On a windows machine, this field is encoded with the localized windows code page.","        this.zipComment = this.reader.readString(this.zipCommentLength);","        // To get consistent behavior with the generation part, we will assume that","        // this is utf8 encoded.","        this.zipComment = jszipProto.utf8decode(this.zipComment);","    },","    /**","     * Read the end of the Zip 64 central directory.","     * Not merged with the method readEndOfCentral :","     * The end of central can coexist with its Zip64 brother,","     * I don't want to read the wrong number of bytes !","     */","    readBlockZip64EndOfCentral: function() {","        this.zip64EndOfCentralSize = this.reader.readInt(8);","        this.versionMadeBy = this.reader.readString(2);","        this.versionNeeded = this.reader.readInt(2);","        this.diskNumber = this.reader.readInt(4);","        this.diskWithCentralDirStart = this.reader.readInt(4);","        this.centralDirRecordsOnThisDisk = this.reader.readInt(8);","        this.centralDirRecords = this.reader.readInt(8);","        this.centralDirSize = this.reader.readInt(8);","        this.centralDirOffset = this.reader.readInt(8);","","        this.zip64ExtensibleData = {};","        var extraDataSize = this.zip64EndOfCentralSize - 44,","            index = 0,","            extraFieldId,","            extraFieldLength,","            extraFieldValue;","        while (index < extraDataSize) {","            extraFieldId = this.reader.readInt(2);","            extraFieldLength = this.reader.readInt(4);","            extraFieldValue = this.reader.readString(extraFieldLength);","            this.zip64ExtensibleData[extraFieldId] = {","                id: extraFieldId,","                length: extraFieldLength,","                value: extraFieldValue","            };","        }","    },","    /**","     * Read the end of the Zip 64 central directory locator.","     */","    readBlockZip64EndOfCentralLocator: function() {","        this.diskWithZip64CentralDirStart = this.reader.readInt(4);","        this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8);","        this.disksCount = this.reader.readInt(4);","        if (this.disksCount > 1) {","            throw new Error(\"Multi-volumes zip are not supported\");","        }","    },","    /**","     * Read the local files, based on the offset read in the central part.","     */","    readLocalFiles: function() {","        var i, file;","        for (i = 0; i < this.files.length; i++) {","            file = this.files[i];","            this.reader.setIndex(file.localHeaderOffset);","            this.checkSignature(sig.LOCAL_FILE_HEADER);","            file.readLocalPart(this.reader);","            file.handleUTF8();","            file.processAttributes();","        }","    },","    /**","     * Read the central directory.","     */","    readCentralDir: function() {","        var file;","","        this.reader.setIndex(this.centralDirOffset);","        while (this.reader.readString(4) === sig.CENTRAL_FILE_HEADER) {","            file = new ZipEntry({","                zip64: this.zip64","            }, this.loadOptions);","            file.readCentralPart(this.reader);","            this.files.push(file);","        }","    },","    /**","     * Read the end of central directory.","     */","    readEndOfCentral: function() {","        var offset = this.reader.lastIndexOfSignature(sig.CENTRAL_DIRECTORY_END);","        if (offset === -1) {","            // Check if the content is a truncated zip or complete garbage.","            // A \"LOCAL_FILE_HEADER\" is not required at the beginning (auto","            // extractible zip for example) but it can give a good hint.","            // If an ajax request was used without responseType, we will also","            // get unreadable data.","            var isGarbage = true;","            try {","                this.reader.setIndex(0);","                this.checkSignature(sig.LOCAL_FILE_HEADER);","                isGarbage = false;","            } catch (e) {}","","            if (isGarbage) {","                throw new Error(\"Can't find end of central directory : is this a zip file ? \" +","                                \"If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\");","            } else {","                throw new Error(\"Corrupted zip : can't find end of central directory\");","            }","        }","        this.reader.setIndex(offset);","        this.checkSignature(sig.CENTRAL_DIRECTORY_END);","        this.readBlockEndOfCentral();","","","        /* extract from the zip spec :","            4)  If one of the fields in the end of central directory","                record is too small to hold required data, the field","                should be set to -1 (0xFFFF or 0xFFFFFFFF) and the","                ZIP64 format record should be created.","            5)  The end of central directory record and the","                Zip64 end of central directory locator record must","                reside on the same disk when splitting or spanning","                an archive.","         */","        if (this.diskNumber === utils.MAX_VALUE_16BITS || this.diskWithCentralDirStart === utils.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === utils.MAX_VALUE_16BITS || this.centralDirRecords === utils.MAX_VALUE_16BITS || this.centralDirSize === utils.MAX_VALUE_32BITS || this.centralDirOffset === utils.MAX_VALUE_32BITS) {","            this.zip64 = true;","","            /*","            Warning : the zip64 extension is supported, but ONLY if the 64bits integer read from","            the zip file can fit into a 32bits integer. This cannot be solved : Javascript represents","            all numbers as 64-bit double precision IEEE 754 floating point numbers.","            So, we have 53bits for integers and bitwise operations treat everything as 32bits.","            see https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/Bitwise_Operators","            and http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf section 8.5","            */","","            // should look for a zip64 EOCD locator","            offset = this.reader.lastIndexOfSignature(sig.ZIP64_CENTRAL_DIRECTORY_LOCATOR);","            if (offset === -1) {","                throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");","            }","            this.reader.setIndex(offset);","            this.checkSignature(sig.ZIP64_CENTRAL_DIRECTORY_LOCATOR);","            this.readBlockZip64EndOfCentralLocator();","","            // now the zip64 EOCD record","            this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir);","            this.checkSignature(sig.ZIP64_CENTRAL_DIRECTORY_END);","            this.readBlockZip64EndOfCentral();","        }","    },","    prepareReader: function(data) {","        var type = utils.getTypeOf(data);","        if (type === \"string\" && !support.uint8array) {","            this.reader = new StringReader(data, this.loadOptions.optimizedBinaryString);","        }","        else if (type === \"nodebuffer\") {","            this.reader = new NodeBufferReader(data);","        }","        else {","            this.reader = new Uint8ArrayReader(utils.transformTo(\"uint8array\", data));","        }","    },","    /**","     * Read a zip file and create ZipEntries.","     * @param {String|ArrayBuffer|Uint8Array|Buffer} data the binary string representing a zip file.","     */","    load: function(data) {","        this.prepareReader(data);","        this.readEndOfCentral();","        this.readCentralDir();","        this.readLocalFiles();","    }","};","// }}} end of ZipEntries","module.exports = ZipEntries;",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"17":1,"18":0,"19":0,"20":0,"21":0,"24":1,"31":0,"32":0,"33":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"47":0,"51":0,"54":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"73":0,"74":0,"79":0,"80":0,"81":0,"82":0,"83":0,"94":0,"95":0,"96":0,"97":0,"98":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"119":0,"121":0,"122":0,"123":0,"126":0,"127":0,"134":0,"135":0,"141":0,"142":0,"143":0,"144":0,"145":0,"148":0,"149":0,"152":0,"155":0,"156":0,"157":0,"170":0,"171":0,"183":0,"184":0,"185":0,"187":0,"188":0,"189":0,"192":0,"193":0,"194":0,"198":0,"199":0,"200":0,"202":0,"203":0,"206":0,"214":0,"215":0,"216":0,"217":0,"221":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/stringReader.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/stringReader.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":1,"11":0,"12":1,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"StringReader","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":51}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":32},"end":{"line":17,"column":44}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":46},"end":{"line":23,"column":60}}},"4":{"name":"(anonymous_4)","line":29,"loc":{"start":{"line":29,"column":34},"end":{"line":29,"column":49}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":41}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"3":{"start":{"line":5,"column":0},"end":{"line":12,"column":1}},"4":{"start":{"line":6,"column":4},"end":{"line":6,"column":21}},"5":{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},"6":{"start":{"line":8,"column":8},"end":{"line":8,"column":51}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":35}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":19}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":42}},"10":{"start":{"line":17,"column":0},"end":{"line":19,"column":2}},"11":{"start":{"line":18,"column":4},"end":{"line":18,"column":35}},"12":{"start":{"line":23,"column":0},"end":{"line":25,"column":2}},"13":{"start":{"line":24,"column":4},"end":{"line":24,"column":38}},"14":{"start":{"line":29,"column":0},"end":{"line":35,"column":2}},"15":{"start":{"line":30,"column":4},"end":{"line":30,"column":27}},"16":{"start":{"line":32,"column":4},"end":{"line":32,"column":64}},"17":{"start":{"line":33,"column":4},"end":{"line":33,"column":23}},"18":{"start":{"line":34,"column":4},"end":{"line":34,"column":18}},"19":{"start":{"line":36,"column":0},"end":{"line":36,"column":30}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":7,"column":4}},{"start":{"line":7,"column":4},"end":{"line":7,"column":4}}]}},"code":["'use strict';","var DataReader = require('./dataReader');","var utils = require('./utils');","","function StringReader(data, optimizedBinaryString) {","    this.data = data;","    if (!optimizedBinaryString) {","        this.data = utils.string2binary(this.data);","    }","    this.length = this.data.length;","    this.index = 0;","}","StringReader.prototype = new DataReader();","/**"," * @see DataReader.byteAt"," */","StringReader.prototype.byteAt = function(i) {","    return this.data.charCodeAt(i);","};","/**"," * @see DataReader.lastIndexOfSignature"," */","StringReader.prototype.lastIndexOfSignature = function(sig) {","    return this.data.lastIndexOf(sig);","};","/**"," * @see DataReader.readData"," */","StringReader.prototype.readData = function(size) {","    this.checkOffset(size);","    // this will work because the constructor applied the \"& 0xff\" mask.","    var result = this.data.slice(this.index, this.index + size);","    this.index += size;","    return result;","};","module.exports = StringReader;",""],"l":{"2":1,"3":1,"5":1,"6":0,"7":0,"8":0,"10":0,"11":0,"13":1,"17":1,"18":0,"23":1,"24":0,"29":1,"30":0,"32":0,"33":0,"34":0,"36":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/dataReader.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/dataReader.js","s":{"1":1,"2":1,"3":2,"4":2,"5":2,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"DataReader","line":4,"loc":{"start":{"line":4,"column":0},"end":{"line":4,"column":26}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":17},"end":{"line":15,"column":34}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":16},"end":{"line":23,"column":35}}},"4":{"name":"(anonymous_4)","line":33,"loc":{"start":{"line":33,"column":14},"end":{"line":33,"column":33}}},"5":{"name":"(anonymous_5)","line":42,"loc":{"start":{"line":42,"column":10},"end":{"line":42,"column":22}}},"6":{"name":"(anonymous_6)","line":50,"loc":{"start":{"line":50,"column":12},"end":{"line":50,"column":24}}},"7":{"name":"(anonymous_7)","line":58,"loc":{"start":{"line":58,"column":13},"end":{"line":58,"column":28}}},"8":{"name":"(anonymous_8)","line":73,"loc":{"start":{"line":73,"column":16},"end":{"line":73,"column":31}}},"9":{"name":"(anonymous_9)","line":81,"loc":{"start":{"line":81,"column":14},"end":{"line":81,"column":29}}},"10":{"name":"(anonymous_10)","line":89,"loc":{"start":{"line":89,"column":26},"end":{"line":89,"column":40}}},"11":{"name":"(anonymous_11)","line":96,"loc":{"start":{"line":96,"column":14},"end":{"line":96,"column":25}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"2":{"start":{"line":4,"column":0},"end":{"line":8,"column":1}},"3":{"start":{"line":5,"column":4},"end":{"line":5,"column":21}},"4":{"start":{"line":6,"column":4},"end":{"line":6,"column":20}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":19}},"6":{"start":{"line":9,"column":0},"end":{"line":106,"column":2}},"7":{"start":{"line":16,"column":8},"end":{"line":16,"column":45}},"8":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"9":{"start":{"line":25,"column":12},"end":{"line":25,"column":138}},"10":{"start":{"line":34,"column":8},"end":{"line":34,"column":34}},"11":{"start":{"line":35,"column":8},"end":{"line":35,"column":30}},"12":{"start":{"line":43,"column":8},"end":{"line":43,"column":38}},"13":{"start":{"line":59,"column":8},"end":{"line":60,"column":14}},"14":{"start":{"line":61,"column":8},"end":{"line":61,"column":31}},"15":{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},"16":{"start":{"line":63,"column":12},"end":{"line":63,"column":52}},"17":{"start":{"line":65,"column":8},"end":{"line":65,"column":27}},"18":{"start":{"line":66,"column":8},"end":{"line":66,"column":22}},"19":{"start":{"line":74,"column":8},"end":{"line":74,"column":64}},"20":{"start":{"line":97,"column":8},"end":{"line":97,"column":38}},"21":{"start":{"line":98,"column":8},"end":{"line":104,"column":31}},"22":{"start":{"line":107,"column":0},"end":{"line":107,"column":28}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":8}},{"start":{"line":24,"column":8},"end":{"line":24,"column":8}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":34}},{"start":{"line":24,"column":38},"end":{"line":24,"column":50}}]}},"code":["'use strict';","var utils = require('./utils');","","function DataReader(data) {","    this.data = null; // type : see implementation","    this.length = 0;","    this.index = 0;","}","DataReader.prototype = {","    /**","     * Check that the offset will not go too far.","     * @param {string} offset the additional offset to check.","     * @throws {Error} an Error if the offset is out of bounds.","     */","    checkOffset: function(offset) {","        this.checkIndex(this.index + offset);","    },","    /**","     * Check that the specifed index will not be too far.","     * @param {string} newIndex the index to check.","     * @throws {Error} an Error if the index is out of bounds.","     */","    checkIndex: function(newIndex) {","        if (this.length < newIndex || newIndex < 0) {","            throw new Error(\"End of data reached (data length = \" + this.length + \", asked index = \" + (newIndex) + \"). Corrupted zip ?\");","        }","    },","    /**","     * Change the index.","     * @param {number} newIndex The new index.","     * @throws {Error} if the new index is out of the data.","     */","    setIndex: function(newIndex) {","        this.checkIndex(newIndex);","        this.index = newIndex;","    },","    /**","     * Skip the next n bytes.","     * @param {number} n the number of bytes to skip.","     * @throws {Error} if the new index is out of the data.","     */","    skip: function(n) {","        this.setIndex(this.index + n);","    },","    /**","     * Get the byte at the specified index.","     * @param {number} i the index to use.","     * @return {number} a byte.","     */","    byteAt: function(i) {","        // see implementations","    },","    /**","     * Get the next number with a given byte size.","     * @param {number} size the number of bytes to read.","     * @return {number} the corresponding number.","     */","    readInt: function(size) {","        var result = 0,","            i;","        this.checkOffset(size);","        for (i = this.index + size - 1; i >= this.index; i--) {","            result = (result << 8) + this.byteAt(i);","        }","        this.index += size;","        return result;","    },","    /**","     * Get the next string with a given byte size.","     * @param {number} size the number of bytes to read.","     * @return {string} the corresponding string.","     */","    readString: function(size) {","        return utils.transformTo(\"string\", this.readData(size));","    },","    /**","     * Get raw data without conversion, <size> bytes.","     * @param {number} size the number of bytes to read.","     * @return {Object} the raw data, implementation specific.","     */","    readData: function(size) {","        // see implementations","    },","    /**","     * Find the last occurence of a zip signature (4 bytes).","     * @param {string} sig the signature to find.","     * @return {number} the index of the last occurence, -1 if not found.","     */","    lastIndexOfSignature: function(sig) {","        // see implementations","    },","    /**","     * Get the next date.","     * @return {Date} the date.","     */","    readDate: function() {","        var dostime = this.readInt(4);","        return new Date(","        ((dostime >> 25) & 0x7f) + 1980, // year","        ((dostime >> 21) & 0x0f) - 1, // month","        (dostime >> 16) & 0x1f, // day","        (dostime >> 11) & 0x1f, // hour","        (dostime >> 5) & 0x3f, // minute","        (dostime & 0x1f) << 1); // second","    }","};","module.exports = DataReader;",""],"l":{"2":1,"4":1,"5":2,"6":2,"7":2,"9":1,"16":0,"24":0,"25":0,"34":0,"35":0,"43":0,"59":0,"61":0,"62":0,"63":0,"65":0,"66":0,"74":0,"97":0,"98":0,"107":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/nodeBufferReader.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/nodeBufferReader.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"NodeBufferReader","line":4,"loc":{"start":{"line":4,"column":0},"end":{"line":4,"column":32}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":38},"end":{"line":14,"column":53}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":53}},"2":{"start":{"line":4,"column":0},"end":{"line":8,"column":1}},"3":{"start":{"line":5,"column":4},"end":{"line":5,"column":21}},"4":{"start":{"line":6,"column":4},"end":{"line":6,"column":35}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":19}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":52}},"7":{"start":{"line":14,"column":0},"end":{"line":19,"column":2}},"8":{"start":{"line":15,"column":4},"end":{"line":15,"column":27}},"9":{"start":{"line":16,"column":4},"end":{"line":16,"column":64}},"10":{"start":{"line":17,"column":4},"end":{"line":17,"column":23}},"11":{"start":{"line":18,"column":4},"end":{"line":18,"column":18}},"12":{"start":{"line":20,"column":0},"end":{"line":20,"column":34}}},"branchMap":{},"code":["'use strict';","var Uint8ArrayReader = require('./uint8ArrayReader');","","function NodeBufferReader(data) {","    this.data = data;","    this.length = this.data.length;","    this.index = 0;","}","NodeBufferReader.prototype = new Uint8ArrayReader();","","/**"," * @see DataReader.readData"," */","NodeBufferReader.prototype.readData = function(size) {","    this.checkOffset(size);","    var result = this.data.slice(this.index, this.index + size);","    this.index += size;","    return result;","};","module.exports = NodeBufferReader;",""],"l":{"2":1,"4":1,"5":0,"6":0,"7":0,"9":1,"14":1,"15":0,"16":0,"17":0,"18":0,"20":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/uint8ArrayReader.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/uint8ArrayReader.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1},"b":{"1":[0,1],"2":[0,0],"3":[0,0,0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"Uint8ArrayReader","line":4,"loc":{"start":{"line":4,"column":0},"end":{"line":4,"column":32}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":36},"end":{"line":15,"column":48}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":50},"end":{"line":21,"column":64}}},"4":{"name":"(anonymous_4)","line":37,"loc":{"start":{"line":37,"column":38},"end":{"line":37,"column":53}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":41}},"2":{"start":{"line":4,"column":0},"end":{"line":10,"column":1}},"3":{"start":{"line":5,"column":4},"end":{"line":9,"column":5}},"4":{"start":{"line":6,"column":8},"end":{"line":6,"column":25}},"5":{"start":{"line":7,"column":8},"end":{"line":7,"column":39}},"6":{"start":{"line":8,"column":8},"end":{"line":8,"column":23}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":46}},"8":{"start":{"line":15,"column":0},"end":{"line":17,"column":2}},"9":{"start":{"line":16,"column":4},"end":{"line":16,"column":24}},"10":{"start":{"line":21,"column":0},"end":{"line":33,"column":2}},"11":{"start":{"line":22,"column":4},"end":{"line":25,"column":33}},"12":{"start":{"line":26,"column":4},"end":{"line":30,"column":5}},"13":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"14":{"start":{"line":28,"column":12},"end":{"line":28,"column":21}},"15":{"start":{"line":32,"column":4},"end":{"line":32,"column":14}},"16":{"start":{"line":37,"column":0},"end":{"line":46,"column":2}},"17":{"start":{"line":38,"column":4},"end":{"line":38,"column":27}},"18":{"start":{"line":39,"column":4},"end":{"line":42,"column":5}},"19":{"start":{"line":41,"column":8},"end":{"line":41,"column":33}},"20":{"start":{"line":43,"column":4},"end":{"line":43,"column":67}},"21":{"start":{"line":44,"column":4},"end":{"line":44,"column":23}},"22":{"start":{"line":45,"column":4},"end":{"line":45,"column":18}},"23":{"start":{"line":47,"column":0},"end":{"line":47,"column":34}}},"branchMap":{"1":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":5,"column":4}},{"start":{"line":5,"column":4},"end":{"line":5,"column":4}}]},"2":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":8}},{"start":{"line":27,"column":8},"end":{"line":27,"column":8}}]},"3":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":12},"end":{"line":27,"column":33}},{"start":{"line":27,"column":37},"end":{"line":27,"column":62}},{"start":{"line":27,"column":66},"end":{"line":27,"column":91}},{"start":{"line":27,"column":95},"end":{"line":27,"column":120}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]}},"code":["'use strict';","var DataReader = require('./dataReader');","","function Uint8ArrayReader(data) {","    if (data) {","        this.data = data;","        this.length = this.data.length;","        this.index = 0;","    }","}","Uint8ArrayReader.prototype = new DataReader();","/**"," * @see DataReader.byteAt"," */","Uint8ArrayReader.prototype.byteAt = function(i) {","    return this.data[i];","};","/**"," * @see DataReader.lastIndexOfSignature"," */","Uint8ArrayReader.prototype.lastIndexOfSignature = function(sig) {","    var sig0 = sig.charCodeAt(0),","        sig1 = sig.charCodeAt(1),","        sig2 = sig.charCodeAt(2),","        sig3 = sig.charCodeAt(3);","    for (var i = this.length - 4; i >= 0; --i) {","        if (this.data[i] === sig0 && this.data[i + 1] === sig1 && this.data[i + 2] === sig2 && this.data[i + 3] === sig3) {","            return i;","        }","    }","","    return -1;","};","/**"," * @see DataReader.readData"," */","Uint8ArrayReader.prototype.readData = function(size) {","    this.checkOffset(size);","    if(size === 0) {","        // in IE10, when using subarray(idx, idx), we get the array [0x00] instead of [].","        return new Uint8Array(0);","    }","    var result = this.data.subarray(this.index, this.index + size);","    this.index += size;","    return result;","};","module.exports = Uint8ArrayReader;",""],"l":{"2":1,"4":1,"5":1,"6":0,"7":0,"8":0,"11":1,"15":1,"16":0,"21":1,"22":0,"26":0,"27":0,"28":0,"32":0,"37":1,"38":0,"39":0,"41":0,"43":0,"44":0,"45":0,"47":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/zipEntry.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/zipEntry.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"ZipEntry","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":40}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":17},"end":{"line":26,"column":28}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":13},"end":{"line":34,"column":24}}},"4":{"name":"(anonymous_4)","line":45,"loc":{"start":{"line":45,"column":30},"end":{"line":45,"column":61}}},"5":{"name":"(anonymous_5)","line":46,"loc":{"start":{"line":46,"column":15},"end":{"line":46,"column":26}}},"6":{"name":"(anonymous_6)","line":64,"loc":{"start":{"line":64,"column":20},"end":{"line":64,"column":82}}},"7":{"name":"(anonymous_7)","line":65,"loc":{"start":{"line":65,"column":15},"end":{"line":65,"column":26}}},"8":{"name":"(anonymous_8)","line":81,"loc":{"start":{"line":81,"column":19},"end":{"line":81,"column":36}}},"9":{"name":"(anonymous_9)","line":135,"loc":{"start":{"line":135,"column":21},"end":{"line":135,"column":38}}},"10":{"name":"(anonymous_10)","line":165,"loc":{"start":{"line":165,"column":23},"end":{"line":165,"column":35}}},"11":{"name":"(anonymous_11)","line":195,"loc":{"start":{"line":195,"column":26},"end":{"line":195,"column":43}}},"12":{"name":"(anonymous_12)","line":223,"loc":{"start":{"line":223,"column":21},"end":{"line":223,"column":38}}},"13":{"name":"(anonymous_13)","line":246,"loc":{"start":{"line":246,"column":16},"end":{"line":246,"column":27}}},"14":{"name":"(anonymous_14)","line":266,"loc":{"start":{"line":266,"column":31},"end":{"line":266,"column":42}}},"15":{"name":"(anonymous_15)","line":290,"loc":{"start":{"line":290,"column":34},"end":{"line":290,"column":45}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":45}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":53}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":23}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":24}},"7":{"start":{"line":17,"column":0},"end":{"line":20,"column":1}},"8":{"start":{"line":18,"column":4},"end":{"line":18,"column":27}},"9":{"start":{"line":19,"column":4},"end":{"line":19,"column":35}},"10":{"start":{"line":21,"column":0},"end":{"line":309,"column":2}},"11":{"start":{"line":28,"column":8},"end":{"line":28,"column":50}},"12":{"start":{"line":36,"column":8},"end":{"line":36,"column":50}},"13":{"start":{"line":46,"column":8},"end":{"line":53,"column":10}},"14":{"start":{"line":47,"column":12},"end":{"line":47,"column":45}},"15":{"start":{"line":48,"column":12},"end":{"line":48,"column":34}},"16":{"start":{"line":49,"column":12},"end":{"line":49,"column":61}},"17":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}},"18":{"start":{"line":52,"column":12},"end":{"line":52,"column":38}},"19":{"start":{"line":65,"column":8},"end":{"line":75,"column":10}},"20":{"start":{"line":67,"column":12},"end":{"line":67,"column":117}},"21":{"start":{"line":68,"column":12},"end":{"line":68,"column":82}},"22":{"start":{"line":70,"column":12},"end":{"line":72,"column":13}},"23":{"start":{"line":71,"column":16},"end":{"line":71,"column":73}},"24":{"start":{"line":74,"column":12},"end":{"line":74,"column":40}},"25":{"start":{"line":82,"column":8},"end":{"line":82,"column":48}},"26":{"start":{"line":89,"column":8},"end":{"line":89,"column":24}},"27":{"start":{"line":101,"column":8},"end":{"line":101,"column":48}},"28":{"start":{"line":102,"column":8},"end":{"line":102,"column":51}},"29":{"start":{"line":103,"column":8},"end":{"line":103,"column":63}},"30":{"start":{"line":104,"column":8},"end":{"line":104,"column":44}},"31":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"32":{"start":{"line":107,"column":12},"end":{"line":107,"column":166}},"33":{"start":{"line":110,"column":8},"end":{"line":110,"column":68}},"34":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"35":{"start":{"line":112,"column":12},"end":{"line":112,"column":149}},"36":{"start":{"line":114,"column":8},"end":{"line":114,"column":51}},"37":{"start":{"line":115,"column":8},"end":{"line":115,"column":63}},"38":{"start":{"line":116,"column":8},"end":{"line":116,"column":67}},"39":{"start":{"line":117,"column":8},"end":{"line":117,"column":45}},"40":{"start":{"line":118,"column":8},"end":{"line":118,"column":69}},"41":{"start":{"line":119,"column":8},"end":{"line":119,"column":135}},"42":{"start":{"line":120,"column":8},"end":{"line":120,"column":138}},"43":{"start":{"line":123,"column":8},"end":{"line":128,"column":9}},"44":{"start":{"line":124,"column":12},"end":{"line":124,"column":92}},"45":{"start":{"line":125,"column":12},"end":{"line":127,"column":13}},"46":{"start":{"line":126,"column":16},"end":{"line":126,"column":66}},"47":{"start":{"line":136,"column":8},"end":{"line":136,"column":47}},"48":{"start":{"line":137,"column":8},"end":{"line":137,"column":47}},"49":{"start":{"line":138,"column":8},"end":{"line":138,"column":41}},"50":{"start":{"line":139,"column":8},"end":{"line":139,"column":54}},"51":{"start":{"line":140,"column":8},"end":{"line":140,"column":38}},"52":{"start":{"line":141,"column":8},"end":{"line":141,"column":39}},"53":{"start":{"line":142,"column":8},"end":{"line":142,"column":48}},"54":{"start":{"line":143,"column":8},"end":{"line":143,"column":50}},"55":{"start":{"line":144,"column":8},"end":{"line":144,"column":48}},"56":{"start":{"line":145,"column":8},"end":{"line":145,"column":51}},"57":{"start":{"line":146,"column":8},"end":{"line":146,"column":51}},"58":{"start":{"line":147,"column":8},"end":{"line":147,"column":49}},"59":{"start":{"line":148,"column":8},"end":{"line":148,"column":56}},"60":{"start":{"line":149,"column":8},"end":{"line":149,"column":56}},"61":{"start":{"line":150,"column":8},"end":{"line":150,"column":51}},"62":{"start":{"line":152,"column":8},"end":{"line":154,"column":9}},"63":{"start":{"line":153,"column":12},"end":{"line":153,"column":63}},"64":{"start":{"line":156,"column":8},"end":{"line":156,"column":63}},"65":{"start":{"line":157,"column":8},"end":{"line":157,"column":37}},"66":{"start":{"line":158,"column":8},"end":{"line":158,"column":42}},"67":{"start":{"line":159,"column":8},"end":{"line":159,"column":69}},"68":{"start":{"line":166,"column":8},"end":{"line":166,"column":36}},"69":{"start":{"line":167,"column":8},"end":{"line":167,"column":35}},"70":{"start":{"line":168,"column":8},"end":{"line":168,"column":45}},"71":{"start":{"line":173,"column":8},"end":{"line":173,"column":71}},"72":{"start":{"line":175,"column":8},"end":{"line":178,"column":9}},"73":{"start":{"line":177,"column":12},"end":{"line":177,"column":69}},"74":{"start":{"line":180,"column":8},"end":{"line":183,"column":9}},"75":{"start":{"line":181,"column":12},"end":{"line":181,"column":80}},"76":{"start":{"line":186,"column":8},"end":{"line":188,"column":9}},"77":{"start":{"line":187,"column":12},"end":{"line":187,"column":28}},"78":{"start":{"line":197,"column":8},"end":{"line":199,"column":9}},"79":{"start":{"line":198,"column":12},"end":{"line":198,"column":19}},"80":{"start":{"line":202,"column":8},"end":{"line":202,"column":75}},"81":{"start":{"line":206,"column":8},"end":{"line":208,"column":9}},"82":{"start":{"line":207,"column":12},"end":{"line":207,"column":59}},"83":{"start":{"line":209,"column":8},"end":{"line":211,"column":9}},"84":{"start":{"line":210,"column":12},"end":{"line":210,"column":57}},"85":{"start":{"line":212,"column":8},"end":{"line":214,"column":9}},"86":{"start":{"line":213,"column":12},"end":{"line":213,"column":60}},"87":{"start":{"line":215,"column":8},"end":{"line":217,"column":9}},"88":{"start":{"line":216,"column":12},"end":{"line":216,"column":58}},"89":{"start":{"line":224,"column":8},"end":{"line":227,"column":28}},"90":{"start":{"line":229,"column":8},"end":{"line":229,"column":50}},"91":{"start":{"line":231,"column":8},"end":{"line":241,"column":9}},"92":{"start":{"line":232,"column":12},"end":{"line":232,"column":45}},"93":{"start":{"line":233,"column":12},"end":{"line":233,"column":49}},"94":{"start":{"line":234,"column":12},"end":{"line":234,"column":66}},"95":{"start":{"line":236,"column":12},"end":{"line":240,"column":14}},"96":{"start":{"line":247,"column":8},"end":{"line":259,"column":9}},"97":{"start":{"line":248,"column":12},"end":{"line":248,"column":65}},"98":{"start":{"line":249,"column":12},"end":{"line":249,"column":71}},"99":{"start":{"line":251,"column":12},"end":{"line":251,"column":57}},"100":{"start":{"line":252,"column":12},"end":{"line":254,"column":13}},"101":{"start":{"line":253,"column":16},"end":{"line":253,"column":38}},"102":{"start":{"line":255,"column":12},"end":{"line":255,"column":63}},"103":{"start":{"line":256,"column":12},"end":{"line":258,"column":13}},"104":{"start":{"line":257,"column":16},"end":{"line":257,"column":44}},"105":{"start":{"line":267,"column":8},"end":{"line":267,"column":50}},"106":{"start":{"line":268,"column":8},"end":{"line":282,"column":9}},"107":{"start":{"line":269,"column":12},"end":{"line":269,"column":65}},"108":{"start":{"line":272,"column":12},"end":{"line":274,"column":13}},"109":{"start":{"line":273,"column":16},"end":{"line":273,"column":28}},"110":{"start":{"line":277,"column":12},"end":{"line":279,"column":13}},"111":{"start":{"line":278,"column":16},"end":{"line":278,"column":28}},"112":{"start":{"line":281,"column":12},"end":{"line":281,"column":88}},"113":{"start":{"line":283,"column":8},"end":{"line":283,"column":20}},"114":{"start":{"line":291,"column":8},"end":{"line":291,"column":53}},"115":{"start":{"line":292,"column":8},"end":{"line":306,"column":9}},"116":{"start":{"line":293,"column":12},"end":{"line":293,"column":68}},"117":{"start":{"line":296,"column":12},"end":{"line":298,"column":13}},"118":{"start":{"line":297,"column":16},"end":{"line":297,"column":28}},"119":{"start":{"line":301,"column":12},"end":{"line":303,"column":13}},"120":{"start":{"line":302,"column":16},"end":{"line":302,"column":28}},"121":{"start":{"line":305,"column":12},"end":{"line":305,"column":91}},"122":{"start":{"line":307,"column":8},"end":{"line":307,"column":20}},"123":{"start":{"line":310,"column":0},"end":{"line":310,"column":26}}},"branchMap":{"1":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12}},{"start":{"line":70,"column":12},"end":{"line":70,"column":12}}]},"2":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":8},"end":{"line":106,"column":8}},{"start":{"line":106,"column":8},"end":{"line":106,"column":8}}]},"3":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":12},"end":{"line":106,"column":37}},{"start":{"line":106,"column":41},"end":{"line":106,"column":68}}]},"4":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":111,"column":8}},{"start":{"line":111,"column":8},"end":{"line":111,"column":8}}]},"5":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":123,"column":8}},{"start":{"line":123,"column":8},"end":{"line":123,"column":8}}]},"6":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":12},"end":{"line":125,"column":12}},{"start":{"line":125,"column":12},"end":{"line":125,"column":12}}]},"7":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":8},"end":{"line":152,"column":8}},{"start":{"line":152,"column":8},"end":{"line":152,"column":8}}]},"8":{"line":173,"type":"cond-expr","locations":[{"start":{"line":173,"column":58},"end":{"line":173,"column":62}},{"start":{"line":173,"column":65},"end":{"line":173,"column":70}}]},"9":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":8},"end":{"line":175,"column":8}},{"start":{"line":175,"column":8},"end":{"line":175,"column":8}}]},"10":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":8},"end":{"line":180,"column":8}},{"start":{"line":180,"column":8},"end":{"line":180,"column":8}}]},"11":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":8},"end":{"line":186,"column":8}},{"start":{"line":186,"column":8},"end":{"line":186,"column":8}}]},"12":{"line":186,"type":"binary-expr","locations":[{"start":{"line":186,"column":12},"end":{"line":186,"column":21}},{"start":{"line":186,"column":25},"end":{"line":186,"column":56}}]},"13":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":8},"end":{"line":197,"column":8}},{"start":{"line":197,"column":8},"end":{"line":197,"column":8}}]},"14":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":8},"end":{"line":206,"column":8}},{"start":{"line":206,"column":8},"end":{"line":206,"column":8}}]},"15":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":8},"end":{"line":209,"column":8}},{"start":{"line":209,"column":8},"end":{"line":209,"column":8}}]},"16":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":8},"end":{"line":212,"column":8}},{"start":{"line":212,"column":8},"end":{"line":212,"column":8}}]},"17":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":8},"end":{"line":215,"column":8}},{"start":{"line":215,"column":8},"end":{"line":215,"column":8}}]},"18":{"line":229,"type":"binary-expr","locations":[{"start":{"line":229,"column":27},"end":{"line":229,"column":43}},{"start":{"line":229,"column":47},"end":{"line":229,"column":49}}]},"19":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":8},"end":{"line":247,"column":8}},{"start":{"line":247,"column":8},"end":{"line":247,"column":8}}]},"20":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":12},"end":{"line":252,"column":12}},{"start":{"line":252,"column":12},"end":{"line":252,"column":12}}]},"21":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":12},"end":{"line":256,"column":12}},{"start":{"line":256,"column":12},"end":{"line":256,"column":12}}]},"22":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":8},"end":{"line":268,"column":8}},{"start":{"line":268,"column":8},"end":{"line":268,"column":8}}]},"23":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":12},"end":{"line":272,"column":12}},{"start":{"line":272,"column":12},"end":{"line":272,"column":12}}]},"24":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":12},"end":{"line":277,"column":12}},{"start":{"line":277,"column":12},"end":{"line":277,"column":12}}]},"25":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":8},"end":{"line":292,"column":8}},{"start":{"line":292,"column":8},"end":{"line":292,"column":8}}]},"26":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":12},"end":{"line":296,"column":12}},{"start":{"line":296,"column":12},"end":{"line":296,"column":12}}]},"27":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":12},"end":{"line":301,"column":12}},{"start":{"line":301,"column":12},"end":{"line":301,"column":12}}]}},"code":["'use strict';","var StringReader = require('./stringReader');","var utils = require('./utils');","var CompressedObject = require('./compressedObject');","var jszipProto = require('./object');","","var MADE_BY_DOS = 0x00;","var MADE_BY_UNIX = 0x03;","","// class ZipEntry {{{","/**"," * An entry in the zip file."," * @constructor"," * @param {Object} options Options of the current file."," * @param {Object} loadOptions Options for loading the stream."," */","function ZipEntry(options, loadOptions) {","    this.options = options;","    this.loadOptions = loadOptions;","}","ZipEntry.prototype = {","    /**","     * say if the file is encrypted.","     * @return {boolean} true if the file is encrypted, false otherwise.","     */","    isEncrypted: function() {","        // bit 1 is set","        return (this.bitFlag & 0x0001) === 0x0001;","    },","    /**","     * say if the file has utf-8 filename/comment.","     * @return {boolean} true if the filename/comment is in utf-8, false otherwise.","     */","    useUTF8: function() {","        // bit 11 is set","        return (this.bitFlag & 0x0800) === 0x0800;","    },","    /**","     * Prepare the function used to generate the compressed content from this ZipFile.","     * @param {DataReader} reader the reader to use.","     * @param {number} from the offset from where we should read the data.","     * @param {number} length the length of the data to read.","     * @return {Function} the callback to get the compressed content (the type depends of the DataReader class).","     */","    prepareCompressedContent: function(reader, from, length) {","        return function() {","            var previousIndex = reader.index;","            reader.setIndex(from);","            var compressedFileData = reader.readData(length);","            reader.setIndex(previousIndex);","","            return compressedFileData;","        };","    },","    /**","     * Prepare the function used to generate the uncompressed content from this ZipFile.","     * @param {DataReader} reader the reader to use.","     * @param {number} from the offset from where we should read the data.","     * @param {number} length the length of the data to read.","     * @param {JSZip.compression} compression the compression used on this file.","     * @param {number} uncompressedSize the uncompressed size to expect.","     * @return {Function} the callback to get the uncompressed content (the type depends of the DataReader class).","     */","    prepareContent: function(reader, from, length, compression, uncompressedSize) {","        return function() {","","            var compressedFileData = utils.transformTo(compression.uncompressInputType, this.getCompressedContent());","            var uncompressedFileData = compression.uncompress(compressedFileData);","","            if (uncompressedFileData.length !== uncompressedSize) {","                throw new Error(\"Bug : uncompressed data size mismatch\");","            }","","            return uncompressedFileData;","        };","    },","    /**","     * Read the local part of a zip file and add the info in this object.","     * @param {DataReader} reader the reader to use.","     */","    readLocalPart: function(reader) {","        var compression, localExtraFieldsLength;","","        // we already know everything from the central dir !","        // If the central dir data are false, we are doomed.","        // On the bright side, the local part is scary  : zip64, data descriptors, both, etc.","        // The less data we get here, the more reliable this should be.","        // Let's skip the whole header and dash to the data !","        reader.skip(22);","        // in some zip created on windows, the filename stored in the central dir contains \\ instead of /.","        // Strangely, the filename here is OK.","        // I would love to treat these zip files as corrupted (see http://www.info-zip.org/FAQ.html#backslashes","        // or APPNOTE#4.4.17.1, \"All slashes MUST be forward slashes '/'\") but there are a lot of bad zip generators...","        // Search \"unzip mismatching \"local\" filename continuing with \"central\" filename version\" on","        // the internet.","        //","        // I think I see the logic here : the central directory is used to display","        // content and the local directory is used to extract the files. Mixing / and \\","        // may be used to display \\ to windows users and use / when extracting the files.","        // Unfortunately, this lead also to some issues : http://seclists.org/fulldisclosure/2009/Sep/394","        this.fileNameLength = reader.readInt(2);","        localExtraFieldsLength = reader.readInt(2); // can't be sure this will be the same as the central dir","        this.fileName = reader.readString(this.fileNameLength);","        reader.skip(localExtraFieldsLength);","","        if (this.compressedSize == -1 || this.uncompressedSize == -1) {","            throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory \" + \"(compressedSize == -1 || uncompressedSize == -1)\");","        }","","        compression = utils.findCompression(this.compressionMethod);","        if (compression === null) { // no compression found","            throw new Error(\"Corrupted zip : compression \" + utils.pretty(this.compressionMethod) + \" unknown (inner file : \" + this.fileName + \")\");","        }","        this.decompressed = new CompressedObject();","        this.decompressed.compressedSize = this.compressedSize;","        this.decompressed.uncompressedSize = this.uncompressedSize;","        this.decompressed.crc32 = this.crc32;","        this.decompressed.compressionMethod = this.compressionMethod;","        this.decompressed.getCompressedContent = this.prepareCompressedContent(reader, reader.index, this.compressedSize, compression);","        this.decompressed.getContent = this.prepareContent(reader, reader.index, this.compressedSize, compression, this.uncompressedSize);","","        // we need to compute the crc32...","        if (this.loadOptions.checkCRC32) {","            this.decompressed = utils.transformTo(\"string\", this.decompressed.getContent());","            if (jszipProto.crc32(this.decompressed) !== this.crc32) {","                throw new Error(\"Corrupted zip : CRC32 mismatch\");","            }","        }","    },","","    /**","     * Read the central part of a zip file and add the info in this object.","     * @param {DataReader} reader the reader to use.","     */","    readCentralPart: function(reader) {","        this.versionMadeBy = reader.readInt(2);","        this.versionNeeded = reader.readInt(2);","        this.bitFlag = reader.readInt(2);","        this.compressionMethod = reader.readString(2);","        this.date = reader.readDate();","        this.crc32 = reader.readInt(4);","        this.compressedSize = reader.readInt(4);","        this.uncompressedSize = reader.readInt(4);","        this.fileNameLength = reader.readInt(2);","        this.extraFieldsLength = reader.readInt(2);","        this.fileCommentLength = reader.readInt(2);","        this.diskNumberStart = reader.readInt(2);","        this.internalFileAttributes = reader.readInt(2);","        this.externalFileAttributes = reader.readInt(4);","        this.localHeaderOffset = reader.readInt(4);","","        if (this.isEncrypted()) {","            throw new Error(\"Encrypted zip are not supported\");","        }","","        this.fileName = reader.readString(this.fileNameLength);","        this.readExtraFields(reader);","        this.parseZIP64ExtraField(reader);","        this.fileComment = reader.readString(this.fileCommentLength);","    },","","    /**","     * Parse the external file attributes and get the unix/dos permissions.","     */","    processAttributes: function () {","        this.unixPermissions = null;","        this.dosPermissions = null;","        var madeBy = this.versionMadeBy >> 8;","","        // Check if we have the DOS directory flag set.","        // We look for it in the DOS and UNIX permissions","        // but some unknown platform could set it as a compatibility flag.","        this.dir = this.externalFileAttributes & 0x0010 ? true : false;","","        if(madeBy === MADE_BY_DOS) {","            // first 6 bits (0 to 5)","            this.dosPermissions = this.externalFileAttributes & 0x3F;","        }","","        if(madeBy === MADE_BY_UNIX) {","            this.unixPermissions = (this.externalFileAttributes >> 16) & 0xFFFF;","            // the octal permissions are in (this.unixPermissions & 0x01FF).toString(8);","        }","","        // fail safe : if the name ends with a / it probably means a folder","        if (!this.dir && this.fileName.slice(-1) === '/') {","            this.dir = true;","        }","    },","","    /**","     * Parse the ZIP64 extra field and merge the info in the current ZipEntry.","     * @param {DataReader} reader the reader to use.","     */","    parseZIP64ExtraField: function(reader) {","","        if (!this.extraFields[0x0001]) {","            return;","        }","","        // should be something, preparing the extra reader","        var extraReader = new StringReader(this.extraFields[0x0001].value);","","        // I really hope that these 64bits integer can fit in 32 bits integer, because js","        // won't let us have more.","        if (this.uncompressedSize === utils.MAX_VALUE_32BITS) {","            this.uncompressedSize = extraReader.readInt(8);","        }","        if (this.compressedSize === utils.MAX_VALUE_32BITS) {","            this.compressedSize = extraReader.readInt(8);","        }","        if (this.localHeaderOffset === utils.MAX_VALUE_32BITS) {","            this.localHeaderOffset = extraReader.readInt(8);","        }","        if (this.diskNumberStart === utils.MAX_VALUE_32BITS) {","            this.diskNumberStart = extraReader.readInt(4);","        }","    },","    /**","     * Read the central part of a zip file and add the info in this object.","     * @param {DataReader} reader the reader to use.","     */","    readExtraFields: function(reader) {","        var start = reader.index,","            extraFieldId,","            extraFieldLength,","            extraFieldValue;","","        this.extraFields = this.extraFields || {};","","        while (reader.index < start + this.extraFieldsLength) {","            extraFieldId = reader.readInt(2);","            extraFieldLength = reader.readInt(2);","            extraFieldValue = reader.readString(extraFieldLength);","","            this.extraFields[extraFieldId] = {","                id: extraFieldId,","                length: extraFieldLength,","                value: extraFieldValue","            };","        }","    },","    /**","     * Apply an UTF8 transformation if needed.","     */","    handleUTF8: function() {","        if (this.useUTF8()) {","            this.fileName = jszipProto.utf8decode(this.fileName);","            this.fileComment = jszipProto.utf8decode(this.fileComment);","        } else {","            var upath = this.findExtraFieldUnicodePath();","            if (upath !== null) {","                this.fileName = upath;","            }","            var ucomment = this.findExtraFieldUnicodeComment();","            if (ucomment !== null) {","                this.fileComment = ucomment;","            }","        }","    },","","    /**","     * Find the unicode path declared in the extra field, if any.","     * @return {String} the unicode path, null otherwise.","     */","    findExtraFieldUnicodePath: function() {","        var upathField = this.extraFields[0x7075];","        if (upathField) {","            var extraReader = new StringReader(upathField.value);","","            // wrong version","            if (extraReader.readInt(1) !== 1) {","                return null;","            }","","            // the crc of the filename changed, this field is out of date.","            if (jszipProto.crc32(this.fileName) !== extraReader.readInt(4)) {","                return null;","            }","","            return jszipProto.utf8decode(extraReader.readString(upathField.length - 5));","        }","        return null;","    },","","    /**","     * Find the unicode comment declared in the extra field, if any.","     * @return {String} the unicode comment, null otherwise.","     */","    findExtraFieldUnicodeComment: function() {","        var ucommentField = this.extraFields[0x6375];","        if (ucommentField) {","            var extraReader = new StringReader(ucommentField.value);","","            // wrong version","            if (extraReader.readInt(1) !== 1) {","                return null;","            }","","            // the crc of the comment changed, this field is out of date.","            if (jszipProto.crc32(this.fileComment) !== extraReader.readInt(4)) {","                return null;","            }","","            return jszipProto.utf8decode(extraReader.readString(ucommentField.length - 5));","        }","        return null;","    }","};","module.exports = ZipEntry;",""],"l":{"2":1,"3":1,"4":1,"5":1,"7":1,"8":1,"17":1,"18":0,"19":0,"21":1,"28":0,"36":0,"46":0,"47":0,"48":0,"49":0,"50":0,"52":0,"65":0,"67":0,"68":0,"70":0,"71":0,"74":0,"82":0,"89":0,"101":0,"102":0,"103":0,"104":0,"106":0,"107":0,"110":0,"111":0,"112":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"123":0,"124":0,"125":0,"126":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"152":0,"153":0,"156":0,"157":0,"158":0,"159":0,"166":0,"167":0,"168":0,"173":0,"175":0,"177":0,"180":0,"181":0,"186":0,"187":0,"197":0,"198":0,"202":0,"206":0,"207":0,"209":0,"210":0,"212":0,"213":0,"215":0,"216":0,"224":0,"229":0,"231":0,"232":0,"233":0,"234":0,"236":0,"247":0,"248":0,"249":0,"251":0,"252":0,"253":0,"255":0,"256":0,"257":0,"267":0,"268":0,"269":0,"272":0,"273":0,"277":0,"278":0,"281":0,"283":0,"291":0,"292":0,"293":0,"296":0,"297":0,"301":0,"302":0,"305":0,"307":0,"310":1}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/deprecatedPublicUtils.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/node_modules/excel-export/node_modules/node-zip/node_modules/jszip/lib/deprecatedPublicUtils.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":1,"7":0,"8":1,"9":0,"10":0,"11":1,"12":0,"13":1,"14":0,"15":1,"16":0,"17":1,"18":0,"19":1,"20":1,"21":1,"22":0,"23":1,"24":0,"25":1,"26":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":38}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":28},"end":{"line":16,"column":42}}},"3":{"name":"(anonymous_3)","line":24,"loc":{"start":{"line":24,"column":28},"end":{"line":24,"column":44}}},"4":{"name":"(anonymous_4)","line":32,"loc":{"start":{"line":32,"column":22},"end":{"line":32,"column":36}}},"5":{"name":"(anonymous_5)","line":41,"loc":{"start":{"line":41,"column":27},"end":{"line":41,"column":44}}},"6":{"name":"(anonymous_6)","line":49,"loc":{"start":{"line":49,"column":22},"end":{"line":49,"column":50}}},"7":{"name":"(anonymous_7)","line":57,"loc":{"start":{"line":57,"column":20},"end":{"line":57,"column":36}}},"8":{"name":"(anonymous_8)","line":65,"loc":{"start":{"line":65,"column":23},"end":{"line":65,"column":38}}},"9":{"name":"(anonymous_9)","line":86,"loc":{"start":{"line":86,"column":17},"end":{"line":86,"column":31}}},"10":{"name":"(anonymous_10)","line":94,"loc":{"start":{"line":94,"column":26},"end":{"line":94,"column":54}}},"11":{"name":"(anonymous_11)","line":102,"loc":{"start":{"line":102,"column":19},"end":{"line":102,"column":37}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"2":{"start":{"line":8,"column":0},"end":{"line":10,"column":2}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":36}},"4":{"start":{"line":16,"column":0},"end":{"line":18,"column":2}},"5":{"start":{"line":17,"column":4},"end":{"line":17,"column":48}},"6":{"start":{"line":24,"column":0},"end":{"line":26,"column":2}},"7":{"start":{"line":25,"column":4},"end":{"line":25,"column":46}},"8":{"start":{"line":32,"column":0},"end":{"line":35,"column":2}},"9":{"start":{"line":33,"column":4},"end":{"line":33,"column":55}},"10":{"start":{"line":34,"column":4},"end":{"line":34,"column":42}},"11":{"start":{"line":41,"column":0},"end":{"line":43,"column":2}},"12":{"start":{"line":42,"column":4},"end":{"line":42,"column":42}},"13":{"start":{"line":49,"column":0},"end":{"line":51,"column":2}},"14":{"start":{"line":50,"column":4},"end":{"line":50,"column":48}},"15":{"start":{"line":57,"column":0},"end":{"line":59,"column":2}},"16":{"start":{"line":58,"column":4},"end":{"line":58,"column":34}},"17":{"start":{"line":65,"column":0},"end":{"line":67,"column":2}},"18":{"start":{"line":66,"column":4},"end":{"line":66,"column":36}},"19":{"start":{"line":73,"column":0},"end":{"line":73,"column":50}},"20":{"start":{"line":79,"column":0},"end":{"line":79,"column":50}},"21":{"start":{"line":86,"column":0},"end":{"line":88,"column":2}},"22":{"start":{"line":87,"column":4},"end":{"line":87,"column":29}},"23":{"start":{"line":94,"column":0},"end":{"line":96,"column":2}},"24":{"start":{"line":95,"column":4},"end":{"line":95,"column":52}},"25":{"start":{"line":102,"column":0},"end":{"line":104,"column":2}},"26":{"start":{"line":103,"column":4},"end":{"line":103,"column":34}}},"branchMap":{},"code":["'use strict';","var utils = require('./utils');","","/**"," * @deprecated"," * This function will be removed in a future version without replacement."," */","exports.string2binary = function(str) {","    return utils.string2binary(str);","};","","/**"," * @deprecated"," * This function will be removed in a future version without replacement."," */","exports.string2Uint8Array = function(str) {","    return utils.transformTo(\"uint8array\", str);","};","","/**"," * @deprecated"," * This function will be removed in a future version without replacement."," */","exports.uint8Array2String = function(array) {","    return utils.transformTo(\"string\", array);","};","","/**"," * @deprecated"," * This function will be removed in a future version without replacement."," */","exports.string2Blob = function(str) {","    var buffer = utils.transformTo(\"arraybuffer\", str);","    return utils.arrayBuffer2Blob(buffer);","};","","/**"," * @deprecated"," * This function will be removed in a future version without replacement."," */","exports.arrayBuffer2Blob = function(buffer) {","    return utils.arrayBuffer2Blob(buffer);","};","","/**"," * @deprecated"," * This function will be removed in a future version without replacement."," */","exports.transformTo = function(outputType, input) {","    return utils.transformTo(outputType, input);","};","","/**"," * @deprecated"," * This function will be removed in a future version without replacement."," */","exports.getTypeOf = function(input) {","    return utils.getTypeOf(input);","};","","/**"," * @deprecated"," * This function will be removed in a future version without replacement."," */","exports.checkSupport = function(type) {","    return utils.checkSupport(type);","};","","/**"," * @deprecated"," * This value will be removed in a future version without replacement."," */","exports.MAX_VALUE_16BITS = utils.MAX_VALUE_16BITS;","","/**"," * @deprecated"," * This value will be removed in a future version without replacement."," */","exports.MAX_VALUE_32BITS = utils.MAX_VALUE_32BITS;","","","/**"," * @deprecated"," * This function will be removed in a future version without replacement."," */","exports.pretty = function(str) {","    return utils.pretty(str);","};","","/**"," * @deprecated"," * This function will be removed in a future version without replacement."," */","exports.findCompression = function(compressionMethod) {","    return utils.findCompression(compressionMethod);","};","","/**"," * @deprecated"," * This function will be removed in a future version without replacement."," */","exports.isRegExp = function (object) {","    return utils.isRegExp(object);","};","",""],"l":{"2":1,"8":1,"9":0,"16":1,"17":0,"24":1,"25":0,"32":1,"33":0,"34":0,"41":1,"42":0,"49":1,"50":0,"57":1,"58":0,"65":1,"66":0,"73":1,"79":1,"86":1,"87":0,"94":1,"95":0,"102":1,"103":0}},"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/spec/prepareSpec.js":{"path":"/home/travis/build/npmtest/node-npmtest-json2xls/node_modules/json2xls/spec/prepareSpec.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0},"b":{"1":[0,0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":19},"end":{"line":7,"column":30}}},"2":{"name":"(anonymous_2)","line":9,"loc":{"start":{"line":9,"column":15},"end":{"line":9,"column":26}}},"3":{"name":"(anonymous_3)","line":11,"loc":{"start":{"line":11,"column":27},"end":{"line":11,"column":38}}},"4":{"name":"(anonymous_4)","line":13,"loc":{"start":{"line":13,"column":29},"end":{"line":13,"column":55}}},"5":{"name":"(anonymous_5)","line":15,"loc":{"start":{"line":15,"column":75},"end":{"line":15,"column":92}}},"6":{"name":"(anonymous_6)","line":16,"loc":{"start":{"line":16,"column":70},"end":{"line":16,"column":86}}},"7":{"name":"(anonymous_7)","line":29,"loc":{"start":{"line":29,"column":48},"end":{"line":29,"column":59}}},"8":{"name":"(anonymous_8)","line":30,"loc":{"start":{"line":30,"column":41},"end":{"line":30,"column":52}}},"9":{"name":"(anonymous_9)","line":36,"loc":{"start":{"line":36,"column":48},"end":{"line":36,"column":59}}},"10":{"name":"(anonymous_10)","line":37,"loc":{"start":{"line":37,"column":44},"end":{"line":37,"column":55}}},"11":{"name":"(anonymous_11)","line":44,"loc":{"start":{"line":44,"column":49},"end":{"line":44,"column":60}}},"12":{"name":"(anonymous_12)","line":45,"loc":{"start":{"line":45,"column":56},"end":{"line":45,"column":67}}},"13":{"name":"(anonymous_13)","line":52,"loc":{"start":{"line":52,"column":42},"end":{"line":52,"column":53}}},"14":{"name":"(anonymous_14)","line":54,"loc":{"start":{"line":54,"column":24},"end":{"line":54,"column":35}}},"15":{"name":"(anonymous_15)","line":55,"loc":{"start":{"line":55,"column":43},"end":{"line":55,"column":54}}},"16":{"name":"(anonymous_16)","line":59,"loc":{"start":{"line":59,"column":48},"end":{"line":59,"column":59}}},"17":{"name":"(anonymous_17)","line":73,"loc":{"start":{"line":73,"column":79},"end":{"line":73,"column":90}}},"18":{"name":"(anonymous_18)","line":86,"loc":{"start":{"line":86,"column":80},"end":{"line":86,"column":91}}},"19":{"name":"(anonymous_19)","line":102,"loc":{"start":{"line":102,"column":54},"end":{"line":102,"column":65}}},"20":{"name":"(anonymous_20)","line":109,"loc":{"start":{"line":109,"column":24},"end":{"line":109,"column":35}}},"21":{"name":"(anonymous_21)","line":110,"loc":{"start":{"line":110,"column":43},"end":{"line":110,"column":54}}},"22":{"name":"(anonymous_22)","line":114,"loc":{"start":{"line":114,"column":67},"end":{"line":114,"column":78}}},"23":{"name":"(anonymous_23)","line":122,"loc":{"start":{"line":122,"column":25},"end":{"line":122,"column":36}}},"24":{"name":"(anonymous_24)","line":123,"loc":{"start":{"line":123,"column":57},"end":{"line":123,"column":68}}},"25":{"name":"(anonymous_25)","line":134,"loc":{"start":{"line":134,"column":43},"end":{"line":134,"column":54}}},"26":{"name":"(anonymous_26)","line":135,"loc":{"start":{"line":135,"column":24},"end":{"line":135,"column":35}}},"27":{"name":"(anonymous_27)","line":136,"loc":{"start":{"line":136,"column":43},"end":{"line":136,"column":54}}},"28":{"name":"(anonymous_28)","line":140,"loc":{"start":{"line":140,"column":54},"end":{"line":140,"column":65}}},"29":{"name":"(anonymous_29)","line":147,"loc":{"start":{"line":147,"column":24},"end":{"line":147,"column":35}}},"30":{"name":"(anonymous_30)","line":148,"loc":{"start":{"line":148,"column":43},"end":{"line":148,"column":54}}},"31":{"name":"(anonymous_31)","line":154,"loc":{"start":{"line":154,"column":25},"end":{"line":154,"column":36}}},"32":{"name":"(anonymous_32)","line":155,"loc":{"start":{"line":155,"column":57},"end":{"line":155,"column":68}}},"33":{"name":"(anonymous_33)","line":164,"loc":{"start":{"line":164,"column":44},"end":{"line":164,"column":55}}},"34":{"name":"(anonymous_34)","line":165,"loc":{"start":{"line":165,"column":52},"end":{"line":165,"column":63}}},"35":{"name":"(anonymous_35)","line":172,"loc":{"start":{"line":172,"column":43},"end":{"line":172,"column":54}}},"36":{"name":"(anonymous_36)","line":173,"loc":{"start":{"line":173,"column":47},"end":{"line":173,"column":58}}},"37":{"name":"(anonymous_37)","line":203,"loc":{"start":{"line":203,"column":36},"end":{"line":203,"column":47}}},"38":{"name":"(anonymous_38)","line":204,"loc":{"start":{"line":204,"column":39},"end":{"line":204,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":32}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":46}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":39}},"6":{"start":{"line":7,"column":0},"end":{"line":211,"column":3}},"7":{"start":{"line":9,"column":4},"end":{"line":27,"column":6}},"8":{"start":{"line":10,"column":8},"end":{"line":26,"column":10}},"9":{"start":{"line":12,"column":16},"end":{"line":24,"column":17}},"10":{"start":{"line":14,"column":24},"end":{"line":14,"column":32}},"11":{"start":{"line":15,"column":24},"end":{"line":19,"column":26}},"12":{"start":{"line":16,"column":28},"end":{"line":18,"column":31}},"13":{"start":{"line":17,"column":32},"end":{"line":17,"column":72}},"14":{"start":{"line":20,"column":24},"end":{"line":22,"column":25}},"15":{"start":{"line":29,"column":4},"end":{"line":34,"column":7}},"16":{"start":{"line":30,"column":8},"end":{"line":33,"column":11}},"17":{"start":{"line":31,"column":12},"end":{"line":31,"column":38}},"18":{"start":{"line":32,"column":12},"end":{"line":32,"column":56}},"19":{"start":{"line":36,"column":4},"end":{"line":42,"column":7}},"20":{"start":{"line":37,"column":8},"end":{"line":41,"column":11}},"21":{"start":{"line":38,"column":12},"end":{"line":38,"column":31}},"22":{"start":{"line":39,"column":12},"end":{"line":39,"column":41}},"23":{"start":{"line":40,"column":12},"end":{"line":40,"column":41}},"24":{"start":{"line":44,"column":4},"end":{"line":50,"column":7}},"25":{"start":{"line":45,"column":8},"end":{"line":49,"column":11}},"26":{"start":{"line":46,"column":12},"end":{"line":46,"column":31}},"27":{"start":{"line":47,"column":12},"end":{"line":47,"column":41}},"28":{"start":{"line":48,"column":12},"end":{"line":48,"column":43}},"29":{"start":{"line":52,"column":4},"end":{"line":132,"column":7}},"30":{"start":{"line":54,"column":8},"end":{"line":107,"column":11}},"31":{"start":{"line":55,"column":12},"end":{"line":58,"column":15}},"32":{"start":{"line":56,"column":16},"end":{"line":56,"column":42}},"33":{"start":{"line":57,"column":16},"end":{"line":57,"column":47}},"34":{"start":{"line":59,"column":12},"end":{"line":71,"column":15}},"35":{"start":{"line":60,"column":16},"end":{"line":60,"column":42}},"36":{"start":{"line":61,"column":16},"end":{"line":70,"column":20}},"37":{"start":{"line":73,"column":12},"end":{"line":84,"column":15}},"38":{"start":{"line":74,"column":16},"end":{"line":76,"column":19}},"39":{"start":{"line":77,"column":16},"end":{"line":83,"column":20}},"40":{"start":{"line":86,"column":12},"end":{"line":100,"column":15}},"41":{"start":{"line":87,"column":16},"end":{"line":92,"column":19}},"42":{"start":{"line":93,"column":16},"end":{"line":99,"column":20}},"43":{"start":{"line":102,"column":12},"end":{"line":106,"column":15}},"44":{"start":{"line":103,"column":16},"end":{"line":103,"column":48}},"45":{"start":{"line":104,"column":16},"end":{"line":104,"column":54}},"46":{"start":{"line":105,"column":16},"end":{"line":105,"column":51}},"47":{"start":{"line":109,"column":8},"end":{"line":120,"column":11}},"48":{"start":{"line":110,"column":12},"end":{"line":113,"column":15}},"49":{"start":{"line":111,"column":16},"end":{"line":111,"column":42}},"50":{"start":{"line":112,"column":16},"end":{"line":112,"column":47}},"51":{"start":{"line":114,"column":12},"end":{"line":119,"column":15}},"52":{"start":{"line":115,"column":16},"end":{"line":115,"column":42}},"53":{"start":{"line":116,"column":16},"end":{"line":116,"column":96}},"54":{"start":{"line":117,"column":16},"end":{"line":117,"column":96}},"55":{"start":{"line":118,"column":16},"end":{"line":118,"column":101}},"56":{"start":{"line":122,"column":8},"end":{"line":130,"column":11}},"57":{"start":{"line":123,"column":12},"end":{"line":129,"column":15}},"58":{"start":{"line":124,"column":16},"end":{"line":124,"column":36}},"59":{"start":{"line":125,"column":16},"end":{"line":127,"column":19}},"60":{"start":{"line":128,"column":16},"end":{"line":128,"column":51}},"61":{"start":{"line":134,"column":4},"end":{"line":170,"column":7}},"62":{"start":{"line":135,"column":8},"end":{"line":145,"column":11}},"63":{"start":{"line":136,"column":12},"end":{"line":139,"column":15}},"64":{"start":{"line":137,"column":16},"end":{"line":137,"column":43}},"65":{"start":{"line":138,"column":16},"end":{"line":138,"column":47}},"66":{"start":{"line":140,"column":12},"end":{"line":144,"column":15}},"67":{"start":{"line":141,"column":16},"end":{"line":141,"column":49}},"68":{"start":{"line":142,"column":16},"end":{"line":142,"column":54}},"69":{"start":{"line":143,"column":16},"end":{"line":143,"column":51}},"70":{"start":{"line":147,"column":8},"end":{"line":152,"column":11}},"71":{"start":{"line":148,"column":12},"end":{"line":151,"column":15}},"72":{"start":{"line":149,"column":16},"end":{"line":149,"column":43}},"73":{"start":{"line":150,"column":16},"end":{"line":150,"column":47}},"74":{"start":{"line":154,"column":8},"end":{"line":162,"column":11}},"75":{"start":{"line":155,"column":12},"end":{"line":161,"column":15}},"76":{"start":{"line":156,"column":16},"end":{"line":156,"column":36}},"77":{"start":{"line":157,"column":16},"end":{"line":159,"column":19}},"78":{"start":{"line":160,"column":16},"end":{"line":160,"column":51}},"79":{"start":{"line":164,"column":8},"end":{"line":169,"column":11}},"80":{"start":{"line":165,"column":12},"end":{"line":168,"column":15}},"81":{"start":{"line":166,"column":16},"end":{"line":166,"column":43}},"82":{"start":{"line":167,"column":16},"end":{"line":167,"column":66}},"83":{"start":{"line":172,"column":4},"end":{"line":201,"column":6}},"84":{"start":{"line":173,"column":8},"end":{"line":200,"column":10}},"85":{"start":{"line":174,"column":12},"end":{"line":198,"column":15}},"86":{"start":{"line":199,"column":12},"end":{"line":199,"column":49}},"87":{"start":{"line":203,"column":4},"end":{"line":210,"column":7}},"88":{"start":{"line":204,"column":8},"end":{"line":209,"column":10}},"89":{"start":{"line":205,"column":12},"end":{"line":207,"column":15}},"90":{"start":{"line":208,"column":12},"end":{"line":208,"column":49}}},"branchMap":{"1":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":34},"end":{"line":15,"column":42}},{"start":{"line":15,"column":46},"end":{"line":15,"column":58}},{"start":{"line":15,"column":62},"end":{"line":19,"column":26}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":35},"end":{"line":16,"column":44}},{"start":{"line":16,"column":48},"end":{"line":18,"column":30}}]}},"code":["var json2xls = require('../lib/json2xls');","var prep = json2xls.prepareJson;","var arrayData = require('./arrayData.json');","var objectData = require('./objectData.json');","var weirdData = require('./weirdData');","","describe('prepare',function() {","","    beforeEach(function() {","        this.addMatchers({","            toEqualFields: function() {","                return {","                    compare: function(actual,expected) {","                        var res;","                        var res = expected && expected.all && expected.all(function(item,i) {","                            return actual[i] && Object.keys(item).all(function(field) {","                                return actual[i][field] === item[field];","                            });","                        })","                        return {","                            pass: res","                        }","                    }","                }","            }","        })","    })","","    describe('handling illegal xml characters', function() {","        it('should remove vertical tabs',function() {","            var res = prep(weirdData);","            expect(res.rows[0][1]).toEqual(' foo bar ');","        });","    });","","    describe('when the data is an empty array', function() {","        it('should create an empty config', function() {","            var res = prep([]);","            expect(res.cols).toEqual([]);","            expect(res.rows).toEqual([]);","        });","    });","","    describe('when the data is an empty object', function() {","        it('should create a config with one empty row', function() {","            var res = prep({});","            expect(res.cols).toEqual([]);","            expect(res.rows).toEqual([[]]);","        });","    });","","    describe('when the data is an array', function() {","        ","        describe('cols',function() {","            it('should create a cols part',function() {","                var res = prep(arrayData);","                expect(res.cols).toBeDefined();","            });","            it('should create the correct cols',function() {","                var res = prep(arrayData);","                expect(res.cols).toEqualFields([{","                    caption: 'name',","                    type: 'string'","                },{","                    caption: 'date',","                    type: 'string'","                },{","                    caption: 'number',","                    type: 'number'","                }]);","            });","","            it('should create the correct cols when fields are given as array',function() {","                var res = prep(arrayData,{","                    fields: ['date','name']","                });","                expect(res.cols).toEqualFields([{","                    caption: 'date',","                    type: 'string'","                },{","                    caption: 'name',","                    type: 'string'","                }]);","            });","","            it('should create the correct cols when fields are given as object',function() {","                var res = prep(arrayData,{","                    fields: {","                        number: 'string',","                        name: 'string'","                    }","                });","                expect(res.cols).toEqualFields([{","                    caption: 'number',","                    type: 'string'","                },{","                    caption: 'name',","                    type: 'string'","                }]);","            });","","            it('should create caption and type field',function() {","                var cols = prep(arrayData).cols;","                expect(cols[0].caption).toBeDefined();","                expect(cols[0].type).toBeDefined();","            });","        });","","        describe('rows',function() {","            it('should create a rows part',function() {","                var res = prep(arrayData);","                expect(res.rows).toBeDefined();","            });","            it('should create rows with data in the correct order',function() {","                var res = prep(arrayData);","                expect(res.rows[0]).toEqual([ 'Ivy Dickson', '2013-05-27T11:04:15-07:00', 10 ]);","                expect(res.rows[1]).toEqual([ 'Walker Lynch','2014-02-07T22:09:58-08:00',  2 ]);","                expect(res.rows[2]).toEqual([ 'Maxwell U. Holden', '2013-06-16T05:29:13-07:00',  5]);","            });","        });","","        describe('style',function() {","            it('should have the provided style xml file',function() {","                var fn = 'test.xml';","                var res = prep(arrayData,{","                    style: fn","                });","                expect(res.stylesXmlFile).toBe(fn);","            });","        });","","    });","","    describe('when the data is an object', function() {","        describe('cols',function() {","            it('should create a cols part',function() {","                var res = prep(objectData);","                expect(res.cols).toBeDefined();","            });","            it('should create caption and type field',function() {","                var cols = prep(objectData).cols;","                expect(cols[0].caption).toBeDefined();","                expect(cols[0].type).toBeDefined();","            });","        });","","        describe('rows',function() {","            it('should create a rows part',function() {","                var res = prep(objectData);","                expect(res.rows).toBeDefined();","            });","        });","","        describe('style',function() {","            it('should have the provided style xml file',function() {","                var fn = 'test.xml';","                var res = prep(objectData,{","                    style: fn","                });","                expect(res.stylesXmlFile).toBe(fn);","            });","        });","","        describe('display of nested fields',function() {","            it('should write nested fields as json',function() {","                var res = prep(objectData);","                expect(res.rows[0][3]).toEqual('{\"field\":\"foo\"}');","            });","        });","    });","","    describe('working with missing fields',function() {","        it('should leave missing fields blank',function() {","            var res = prep([","                {","                    \"firma\": \"transportabel\",","                    \"internet\": \"http://www.transportabel.de\",","                    \"Branche\": \"Möbel\",","                    \"STRASSE\": \"Messingweg 49\",","                    \"ort\": \"Münster-Sprakel\",","                    \"TEL_ZENTRALE\": \"(0251) 29 79 46\"","                },","                {","                    \"firma\": \"Soziale Möbelbörse & mehr e.V.\",","                    \"internet\": \"http://www.gersch-ms.de\",","                    \"Branche\": \"Möbel\",","                    \"STRASSE\": \"Nienkamp 80\",","                    \"ort\": \"Münster-Wienburg\",","                    \"TEL_ZENTRALE\": \"(0251) 53 40 76\"","                },","                {","                    \"firma\": \"Bald Eckhart e.K.\",","                    \"Branche\": \"Möbel\",","                    \"STRASSE\": \"Weseler Str. 628\",","                    \"ort\": \"Münster-Mecklenbeck\",","                    \"TEL_ZENTRALE\": \"(0251) 53 40 76\"","                }","            ]);","            expect(res.rows[2][1]).toEqual(null);","        })","    })","","    describe('prepping with config',function() {","        it('should get a nested field',function() {","            var res = prep(objectData,{","                fields:['nested.field']","            });","            expect(res.rows[0]).toEqual(['foo']);","        })","    });","});"],"l":{"1":2,"2":2,"3":2,"4":2,"5":2,"7":2,"9":0,"10":0,"12":0,"14":0,"15":0,"16":0,"17":0,"20":0,"29":0,"30":0,"31":0,"32":0,"36":0,"37":0,"38":0,"39":0,"40":0,"44":0,"45":0,"46":0,"47":0,"48":0,"52":0,"54":0,"55":0,"56":0,"57":0,"59":0,"60":0,"61":0,"73":0,"74":0,"77":0,"86":0,"87":0,"93":0,"102":0,"103":0,"104":0,"105":0,"109":0,"110":0,"111":0,"112":0,"114":0,"115":0,"116":0,"117":0,"118":0,"122":0,"123":0,"124":0,"125":0,"128":0,"134":0,"135":0,"136":0,"137":0,"138":0,"140":0,"141":0,"142":0,"143":0,"147":0,"148":0,"149":0,"150":0,"154":0,"155":0,"156":0,"157":0,"160":0,"164":0,"165":0,"166":0,"167":0,"172":0,"173":0,"174":0,"199":0,"203":0,"204":0,"205":0,"208":0}}}